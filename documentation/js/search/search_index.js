var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.612,1,0.831]],["body/components/AppComponent.html",[0,0.838,1,1.248,2,1.485,3,0.413,4,0.345,5,1.186,6,1.186,7,1.186,8,1.186,9,0.345,10,1.67,11,1.186,12,2.478,13,1.846,14,1.485,15,1.726,16,3.587,17,1.726,18,3.042,19,0.413,20,1.114,21,2.159,22,1.923,23,2.022,24,3.587,25,3.587,26,3.587,27,3.587,28,1.285,29,1.67,30,2.044,31,1.231,32,3.042,33,0.883,34,0.057,35,0.979,36,0.838,37,0.883,38,2.091,39,2.091,40,2.625,41,2.625,42,3.587,43,1.485,44,2.091,45,3.587,46,2.091,47,3.587,48,2.091,49,0.92,50,0.488,51,1.393,52,2.027,53,1.186,54,1.393,55,1.67,56,1.393,57,0.883,58,1.393,59,0.413,60,0.281,61,3.042,62,2.091,63,2.43,64,3.042,65,2.39,66,3.042,67,3.042,68,3.042,69,2.43,70,3.042,71,1.485,72,3.042,73,3.042,74,3.042,75,3.042,76,3.939,77,1.136,78,3.042,79,3.939,80,3.042,81,3.042,82,2.43,83,2.091,84,2.091,85,2.091,86,2.091,87,1.67,88,1.393,89,1.393,90,1.393,91,2.091,92,2.091,93,2.091,94,3.042,95,2.091,96,2.091,97,0.883,98,1.726,99,1.485,100,1.186,101,2.235,102,1.186,103,1.186,104,0.662,105,1.726,106,1.186,107,0.662,108,1.186,109,0.662,110,0.765,111,1.186,112,1.186,113,0.022,114,0.032,115,0.022]],["title/modules/AppModule.html",[116,1.487,117,1.487]],["body/modules/AppModule.html",[1,1.597,3,0.48,4,0.4,9,0.4,13,1.026,34,0.057,43,1.185,49,1.212,50,0.567,57,1.026,59,0.48,60,0.327,71,1.185,97,1.026,104,1.454,107,1.454,109,1.454,113,0.026,114,0.036,115,0.026,116,1.377,117,2.916,118,1.185,119,1.377,120,3.112,121,2.808,122,2.704,123,1.618,124,1.939,125,1.939,126,1.939,127,1.939,128,2.241,129,2.704,130,1.939,131,2.428,132,2.704,133,2.704,134,3.385,135,1.939,136,1.377,137,3.896,138,1.618,139,1.939,140,2.428,141,3.385,142,1.939,143,2.428,144,1.939,145,3.385,146,1.939,147,2.428,148,1.185,149,1.377,150,1.185,151,3.385,152,2.428,153,3.385,154,2.428,155,3.385,156,1.939,157,1.939,158,1.618,159,2.428,160,2.428,161,3.385,162,1.939,163,3.385,164,1.618,165,2.428,166,2.428,167,2.428,168,1.618,169,2.428,170,2.428,171,2.428,172,2.428,173,2.428,174,2.428,175,1.618]],["title/classes/AppPage.html",[60,0.353,176,1.747]],["body/classes/AppPage.html",[3,0.7,4,0.584,9,0.584,14,1.729,19,0.7,31,1.183,34,0.056,49,0.827,59,0.7,60,0.477,99,1.729,113,0.037,114,0.046,115,0.037,136,2.009,176,2.888,177,3.542,178,2.829,179,1.831,180,4.881,181,4.881,182,3.542,183,1.831,184,5.096,185,3.542,186,2.829,187,2.116,188,3.542,189,3.542,190,2.829,191,3.542]],["title/modules/AppRoutingModule.html",[116,1.487,128,1.28]],["body/modules/AppRoutingModule.html",[3,0.717,4,0.598,9,0.598,34,0.056,49,1.028,50,0.847,59,0.717,60,0.488,113,0.038,114,0.046,115,0.038,118,1.771,123,2.417,128,2.148,132,3.514,133,3.514,192,3.628,193,3.628,194,4.399,195,3.359,196,2.898,197,2.898,198,3.628,199,1.771,200,2.898,201,3.628,202,3.628,203,3.628,204,3.628]],["title/interfaces/AuthConfig.html",[205,1.487,206,1.28]],["body/interfaces/AuthConfig.html",[3,0.668,4,0.557,9,0.557,19,0.668,20,1.542,34,0.055,36,1.177,59,0.668,113,0.036,114,0.044,115,0.036,205,1.918,206,2.057,207,3.38,208,2.7,209,2.7,210,2.724,211,3.2,212,3.836,213,3.836,214,3.836,215,3.836,216,2.632]],["title/injectables/AuthService.html",[30,1.28,217,0.96]],["body/injectables/AuthService.html",[3,0.365,4,0.305,9,0.305,14,0.902,19,0.365,20,1.016,21,1.926,22,1.628,23,1.83,28,1.173,30,1.355,31,1.217,33,1.173,34,0.057,35,0.911,36,0.779,37,1.173,43,1.355,49,0.866,50,0.431,56,1.231,57,0.78,58,1.231,59,0.549,60,0.249,65,2.649,71,1.355,77,1.373,110,0.676,113,0.019,114,0.029,115,0.019,148,0.902,149,1.048,150,1.355,175,1.231,179,1.173,183,1.764,187,1.355,199,0.902,206,1.355,210,1.048,211,1.85,217,1.016,218,1.048,219,1.231,220,2.783,221,3.335,222,3.709,223,2.963,224,2.217,225,3.976,226,1.847,227,3.336,228,1.83,229,2.776,230,1.847,231,2.776,232,2.776,233,2.963,234,1.847,235,3.709,236,1.941,237,1.847,238,1.85,239,1.85,240,1.847,241,1.847,242,1.847,243,1.847,244,1.231,245,1.231,246,2.217,247,1.475,248,1.475,249,1.475,250,2.217,251,1.475,252,1.475,253,1.475,254,1.475,255,1.85,256,1.475,257,2.222,258,1.475,259,1.475,260,1.475,261,1.475,262,2.217,263,1.475,264,1.475,265,1.475,266,1.475,267,1.475,268,1.475,269,1.231,270,1.475,271,1.475,272,1.475,273,1.475,274,1.475,275,1.475,276,1.475,277,1.475,278,1.231,279,1.85,280,2.664,281,1.475,282,1.475,283,2.217,284,1.475,285,1.475,286,1.231,287,2.217,288,1.475,289,1.231,290,1.475,291,1.475,292,1.475,293,1.475,294,1.475,295,1.85,296,1.475,297,1.475,298,1.231,299,1.475,300,1.231,301,1.847,302,1.847,303,1.847,304,1.847,305,1.847,306,1.847,307,1.847,308,1.847,309,1.475,310,1.847,311,1.847,312,1.847,313,1.847,314,1.847,315,1.847,316,1.847,317,1.475,318,1.847,319,2.776,320,1.475,321,1.847,322,1.847,323,2.776,324,1.847,325,1.475,326,1.847,327,1.847,328,1.847,329,1.847,330,1.847,331,1.847]],["title/components/ChatRoomComponent.html",[0,0.612,104,0.831]],["body/components/ChatRoomComponent.html",[0,0.732,1,0.529,2,1.256,3,0.33,4,0.275,5,0.948,6,0.948,7,0.948,8,0.948,9,0.275,11,0.948,12,2.279,13,1.697,15,1.459,17,1.459,19,0.33,20,0.942,21,2.112,22,1.72,28,0.706,29,1.334,30,1.857,31,1.21,33,1.087,34,0.057,35,0.962,36,0.977,37,1.087,49,0.823,50,0.39,55,1.334,59,0.33,60,0.225,77,1.369,88,2.953,89,1.113,90,1.113,97,0.706,98,1.459,99,1.256,100,0.948,101,1.998,102,0.948,103,0.948,104,1.116,105,2.612,106,0.948,107,0.529,108,0.948,109,0.529,110,0.612,111,0.948,112,0.948,113,0.018,114,0.027,115,0.018,164,3.015,179,1.087,183,1.488,187,0.816,216,1.256,228,1.607,233,2.054,236,1.256,238,1.714,244,1.113,286,1.113,332,3.015,333,1.334,334,3.136,335,3.136,336,2.572,337,3.803,338,2.505,339,2.089,340,2.505,341,2.572,342,2.813,343,1.714,344,2.572,345,1.67,346,2.572,347,1.67,348,2.572,349,2.572,350,3.015,351,1.113,352,2.572,353,1.67,354,2.572,355,2.572,356,2.089,357,1.67,358,1.67,359,2.347,360,0.948,361,1.334,362,1.113,363,1.67,364,1.67,365,3.136,366,1.67,367,1.113,368,2.572,369,2.572,370,2.572,371,2.572,372,2.813,373,2.054,374,2.572,375,2.572,376,2.572,377,2.572,378,3.522,379,3.522,380,3.522,381,3.522,382,3.522,383,3.522,384,1.67,385,1.67,386,1.67,387,2.572,388,1.67,389,1.67,390,1.67,391,1.67,392,1.67,393,2.505,394,2.572,395,1.67,396,1.67,397,2.813,398,1.67,399,1.334,400,1.334,401,0.706,402,1.334,403,1.67,404,1.67,405,1.67,406,1.334,407,1.67,408,1.113,409,1.67,410,1.67,411,1.67,412,1.67]],["title/injectables/ChatService.html",[217,0.96,228,1.107]],["body/injectables/ChatService.html",[3,0.353,4,0.295,9,0.295,14,0.872,19,0.353,20,0.991,21,1.977,28,0.754,31,1.278,33,1.655,34,0.057,35,1.07,36,1.055,37,1.655,49,0.763,50,0.417,59,0.353,60,0.24,77,1.306,110,0.991,113,0.019,114,0.028,115,0.019,146,1.427,179,1.143,183,1.655,187,1.321,199,1.596,216,2.013,217,0.991,218,1.013,220,2.177,224,2.162,228,1.143,236,2.092,238,1.803,255,1.19,279,1.19,295,2.429,300,1.19,317,2.162,320,2.162,339,2.177,342,2.162,350,2.747,351,2.177,356,2.854,360,1.013,361,1.427,362,1.19,367,2.429,401,0.754,408,2.611,413,1.427,414,3.646,415,3.268,416,2.611,417,2.706,418,3.646,419,2.706,420,4.518,421,1.786,422,3.918,423,2.706,424,2.706,425,2.162,426,1.786,427,3.646,428,4.124,429,2.706,430,2.706,431,1.786,432,2.706,433,2.706,434,2.706,435,1.786,436,1.803,437,2.706,438,2.706,439,2.913,440,2.611,441,1.786,442,2.706,443,4.124,444,2.706,445,2.706,446,1.786,447,1.786,448,1.786,449,1.786,450,1.786,451,1.786,452,1.786,453,2.706,454,1.786,455,2.706,456,1.786,457,1.427,458,1.786,459,2.706,460,1.786,461,1.786,462,1.786,463,1.786,464,2.706,465,1.786,466,1.786,467,1.786,468,1.786,469,1.786,470,1.786,471,1.786,472,1.786,473,1.786,474,1.786,475,1.786,476,2.706,477,1.786,478,1.786,479,3.268,480,1.786,481,1.786,482,1.786,483,1.786,484,1.786,485,1.786,486,1.786]],["title/components/ChatUsersComponent.html",[0,0.612,107,0.831]],["body/components/ChatUsersComponent.html",[0,0.665,1,0.456,2,1.117,3,0.284,4,0.237,5,0.816,6,0.816,7,0.816,8,0.816,9,0.237,11,0.816,12,2.14,13,1.594,15,1.298,17,1.298,19,0.284,20,0.837,21,2.153,23,1.497,28,0.966,31,1.304,33,1.203,34,0.057,35,0.967,36,1.052,37,1.203,40,1.897,41,1.897,43,0.702,49,0.827,50,0.336,51,0.958,52,0.958,53,0.816,54,0.958,56,0.958,57,2.049,58,0.958,59,0.284,60,0.194,77,1.427,88,1.897,89,0.958,90,0.958,97,0.608,98,1.298,99,1.117,100,0.816,101,1.841,102,0.816,103,0.816,104,0.456,105,2.511,106,0.816,107,1.028,108,0.816,109,0.456,110,0.526,111,0.816,112,0.816,113,0.015,114,0.024,115,0.015,179,0.966,183,1.671,187,0.702,199,0.702,200,1.827,216,1.117,228,1.787,236,1.585,239,1.524,244,0.958,289,1.897,309,1.827,332,3.208,338,2.275,339,2.636,340,2.593,343,1.524,350,0.958,351,1.524,356,2.36,359,1.524,360,0.816,362,0.958,367,1.524,372,1.149,373,1.827,393,1.149,397,1.149,399,1.149,400,1.149,401,0.608,402,1.149,406,1.827,408,0.958,416,2.818,439,1.149,440,1.149,457,1.149,487,1.149,488,2.287,489,2.848,490,2.848,491,2.287,492,2.275,493,2.848,494,3.542,495,2.848,496,2.848,497,2.848,498,2.287,499,3.246,500,2.287,501,2.848,502,1.438,503,2.287,504,1.438,505,2.287,506,1.438,507,3.246,508,3.246,509,2.287,510,1.438,511,2.287,512,1.438,513,1.438,514,1.827,515,1.438,516,1.438,517,1.438,518,1.438,519,2.848,520,1.438,521,1.438,522,1.438,523,1.438,524,1.438,525,1.438,526,1.438,527,1.438,528,1.438,529,1.438,530,2.287,531,1.438,532,2.275,533,1.438,534,1.438,535,3.246,536,2.287,537,2.848,538,2.287,539,2.848,540,1.438,541,0.958,542,1.438,543,1.438,544,1.827,545,1.438,546,1.438,547,1.438,548,2.287,549,1.438,550,1.438,551,1.438,552,1.438,553,1.438]],["title/injectables/ChatUsersService.html",[23,1.107,217,0.96]],["body/injectables/ChatUsersService.html",[3,0.425,4,0.354,9,0.354,14,1.048,19,0.425,20,1.136,21,1.863,22,1.048,23,1.31,28,1.31,31,1.204,33,0.907,34,0.057,35,0.586,36,0.988,37,0.907,49,0.932,50,0.502,57,1.92,59,0.425,60,0.289,77,0.983,113,0.023,114,0.033,115,0.023,142,1.715,148,1.048,149,1.218,150,1.048,179,1.31,183,1.31,190,1.715,199,1.515,210,1.218,216,1.515,217,1.136,218,1.218,220,2.938,223,1.715,227,3.631,236,1.948,298,2.067,300,1.431,325,1.715,401,1.539,416,2.067,492,2.909,544,2.478,554,3.631,555,1.715,556,3.642,557,3.642,558,3.989,559,3.989,560,2.147,561,4.654,562,3.642,563,3.989,564,3.102,565,2.147,566,3.102,567,3.102,568,3.102,569,3.102,570,2.147,571,3.102,572,2.478,573,3.102,574,2.147,575,3.642,576,2.147,577,3.989,578,3.102,579,1.431,580,2.147,581,3.102,582,2.147,583,2.147,584,2.147,585,3.642,586,2.147,587,3.989,588,2.147,589,2.147,590,2.147,591,2.147,592,2.147,593,2.147,594,2.147,595,2.147,596,2.147,597,2.147,598,2.147,599,2.147,600,3.102,601,2.147,602,2.147,603,2.147,604,2.147,605,2.147,606,3.102,607,3.102,608,3.102,609,2.147]],["title/components/UserProfileComponent.html",[0,0.612,109,0.831]],["body/components/UserProfileComponent.html",[0,1.017,1,0.957,2,1.914,3,0.597,4,0.498,5,1.713,6,1.713,7,1.713,8,1.713,9,0.498,11,1.713,12,2.776,13,2.067,15,2.224,17,2.224,19,0.597,31,0.824,34,0.056,35,1.07,36,0.705,49,0.705,50,0.705,59,0.597,60,0.406,69,3.131,77,1.643,97,1.276,98,2.224,99,1.914,100,1.713,101,2.614,102,1.713,103,1.713,104,0.957,105,2.224,106,1.713,107,0.957,108,1.713,109,1.46,110,1.594,111,1.713,112,1.713,113,0.032,114,0.041,115,0.032,168,2.612,343,2.612,359,2.612,610,3.131,611,2.412,612,4.353,613,3.92,614,3.02,615,3.92]],["title/coverage.html",[616,2.85]],["body/coverage.html",[0,1.078,1,0.962,9,0.501,10,2.425,23,1.282,30,1.482,34,0.056,36,0.709,57,1.662,60,0.409,87,2.425,104,0.962,107,0.962,109,0.962,113,0.032,114,0.041,115,0.032,158,2.621,164,2.022,168,2.022,176,2.022,178,2.425,205,1.722,206,1.482,208,2.425,209,2.425,217,1.598,219,2.621,228,1.282,245,2.022,332,2.621,333,2.425,401,1.282,413,2.425,487,2.425,541,3.433,554,2.425,555,2.425,579,2.022,610,2.425,611,2.425,616,2.425,617,3.035,618,3.035,619,3.035,620,3.035,621,3.035,622,3.035,623,3.035,624,3.035,625,3.035,626,3.035,627,2.425,628,2.425,629,4.9,630,4.9,631,3.035,632,3.035,633,3.035,634,3.035,635,3.035,636,3.035,637,2.425,638,2.425,639,3.142,640,2.425,641,2.425,642,3.035,643,3.035]],["title/dependencies.html",[119,1.787,644,2.194]],["body/dependencies.html",[34,0.057,50,0.779,51,2.221,52,2.221,53,2.368,54,2.221,113,0.035,114,0.044,115,0.035,119,1.891,121,2.782,135,3.335,136,2.368,138,2.221,139,2.662,144,2.662,148,1.627,149,1.891,150,1.627,156,2.662,157,2.662,162,2.662,196,2.662,360,1.891,436,2.221,645,3.333,646,5.196,647,3.333,648,3.333,649,3.333,650,3.333,651,3.333,652,3.333,653,3.333,654,3.333,655,3.333,656,3.333,657,3.333,658,3.333,659,3.333,660,3.333,661,3.333,662,3.333,663,3.333,664,3.333,665,3.333]],["title/index.html",[19,0.434,666,2.194,667,2.194]],["body/index.html",[0,1.041,4,0.523,13,1.34,34,0.043,35,0.866,71,1.549,113,0.033,114,0.043,115,0.033,138,3.357,148,2.176,186,2.535,197,3.56,257,2.696,269,2.114,278,2.114,401,1.34,668,3.173,669,3.233,670,3.173,671,3.173,672,3.173,673,3.173,674,4.848,675,3.173,676,3.173,677,3.173,678,3.173,679,3.173,680,3.173,681,3.173,682,3.173,683,3.173,684,4.456,685,4.456,686,3.173,687,4.848,688,3.173,689,3.173,690,3.173,691,3.173,692,3.173,693,3.173,694,2.535,695,4.047,696,4.047,697,4.693,698,3.173,699,4.047,700,4.047,701,3.173,702,4.693,703,3.173,704,4.456,705,3.173,706,3.173,707,3.173,708,3.173]],["title/modules.html",[118,1.742]],["body/modules.html",[34,0.049,53,2.304,63,3.757,113,0.043,114,0.049,115,0.043,117,2.304,118,1.983,128,1.983,136,2.304,572,3.245,709,4.062,710,4.062]],["title/overview.html",[711,2.85]],["body/overview.html",[1,1.623,2,1.67,34,0.054,60,0.46,71,1.67,97,1.445,104,1.461,107,1.461,109,1.461,113,0.036,114,0.045,115,0.036,116,1.94,117,3.022,118,1.67,119,1.94,120,2.731,121,2.278,122,2.731,123,2.278,124,2.731,125,2.731,126,2.731,127,2.731,128,2.252,129,3.388,130,2.731,205,1.94,218,1.94,532,3.388,541,2.278,711,2.731,712,3.419,713,3.419,714,3.419]],["title/routes.html",[195,2.377]],["body/routes.html",[34,0.05,113,0.044,114,0.05,115,0.044,195,2.792]],["title/miscellaneous/variables.html",[715,1.752,716,2.516]],["body/miscellaneous/variables.html",[19,0.459,22,1.856,31,0.633,34,0.057,35,0.633,36,1.057,40,2.904,41,2.904,43,1.856,65,1.545,77,0.735,82,3.613,110,0.849,113,0.024,114,0.034,115,0.024,150,1.132,158,2.752,175,1.545,206,1.6,210,1.859,211,2.532,212,1.852,213,1.852,214,1.852,215,1.852,219,1.545,239,2.184,245,2.184,246,2.618,247,1.852,248,1.852,249,1.852,250,2.618,251,1.852,252,1.852,253,1.852,254,1.852,255,2.184,256,1.852,257,2.532,258,1.852,259,1.852,260,1.852,261,1.852,262,2.618,263,1.852,264,1.852,265,1.852,266,1.852,267,1.852,268,1.852,269,1.545,270,1.852,271,1.852,272,1.852,273,1.852,274,1.852,275,1.852,276,1.852,277,1.852,278,1.545,279,1.545,280,3.036,281,1.852,282,1.852,283,2.618,284,1.852,285,1.852,286,1.545,287,2.618,288,1.852,289,1.545,290,1.852,291,1.852,292,1.852,293,1.852,294,1.852,295,1.545,296,1.852,297,1.852,298,1.545,299,2.618,425,1.852,436,2.184,514,1.852,579,2.184,627,1.852,628,2.618,637,1.852,638,1.852,639,1.852,640,2.618,641,2.618,669,3.794,694,2.618,715,1.852,716,1.852,717,2.319,718,3.277,719,2.319,720,2.319,721,2.319,722,2.319,723,2.319,724,3.277,725,3.277,726,3.277,727,3.277,728,3.277,729,3.277,730,3.277,731,3.277,732,3.277,733,3.277,734,3.277,735,3.277,736,3.277,737,3.277,738,3.277,739,2.319,740,2.319,741,2.319,742,2.319,743,2.319]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":541,"title":{},"body":{"components/ChatUsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.10.3",{"_index":665,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":396,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["0.7.0",{"_index":652,"title":{},"body":{"dependencies.html":{}}}],["0.7rem",{"_index":405,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["0.9em",{"_index":409,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["0/1",{"_index":630,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":626,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":620,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":631,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":621,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":532,"title":{},"body":{"components/ChatUsersComponent.html":{},"overview.html":{}}}],["1.1em",{"_index":402,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["1.2.28",{"_index":655,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":658,"title":{},"body":{"dependencies.html":{}}}],["10.0.5",{"_index":672,"title":{},"body":{"index.html":{}}}],["10.0.6",{"_index":646,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":624,"title":{},"body":{"coverage.html":{}}}],["171697051876",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1:171697051876:web:462ea814b69c258dbdb4f1",{"_index":738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1px",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["2",{"_index":712,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":663,"title":{},"body":{"dependencies.html":{}}}],["2/10",{"_index":623,"title":{},"body":{"coverage.html":{}}}],["2/18",{"_index":625,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":634,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":622,"title":{},"body":{"coverage.html":{}}}],["28",{"_index":633,"title":{},"body":{"coverage.html":{}}}],["2px",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":714,"title":{},"body":{"overview.html":{}}}],["3/6",{"_index":632,"title":{},"body":{"coverage.html":{}}}],["30px",{"_index":387,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["4",{"_index":713,"title":{},"body":{"overview.html":{}}}],["4.5.0",{"_index":659,"title":{},"body":{"dependencies.html":{}}}],["4/10",{"_index":636,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":635,"title":{},"body":{"coverage.html":{}}}],["4px",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["5.13.0",{"_index":656,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["5fd85f",{"_index":549,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["5px",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["6.0.2",{"_index":649,"title":{},"body":{"dependencies.html":{}}}],["6.5.5",{"_index":661,"title":{},"body":{"dependencies.html":{}}}],["6a119",{"_index":732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6a119.appspot.com",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6a119.firebaseapp.com",{"_index":727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6a119.firebaseio.com",{"_index":730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.0.0",{"_index":657,"title":{},"body":{"dependencies.html":{}}}],["7.13.1",{"_index":660,"title":{},"body":{"dependencies.html":{}}}],["9776",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["accessors",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{}}}],["actual_component",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["address",{"_index":478,"title":{},"body":{"injectables/ChatService.html":{}}}],["adds",{"_index":427,"title":{},"body":{"injectables/ChatService.html":{}}}],["adduserinfo",{"_index":417,"title":{},"body":{"injectables/ChatService.html":{}}}],["adduserinfo(profileobject",{"_index":424,"title":{},"body":{"injectables/ChatService.html":{}}}],["af",{"_index":414,"title":{},"body":{"injectables/ChatService.html":{}}}],["afservice",{"_index":337,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["aizasya5wkuyt4ojkfckeuaz3xac9eigwbbr2fc",{"_index":725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["align",{"_index":551,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["allowedurls",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["allusers",{"_index":492,"title":{},"body":{"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["angular",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/ChatUsersService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":645,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":647,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChatUsersService.html":{}}}],["angular/compiler",{"_index":648,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/fire/auth",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/database",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChatService.html":{}}}],["angular/fire/firestore",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/forms",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":650,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":196,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["angularfireauthmodule",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiredatabase",{"_index":422,"title":{},"body":{"injectables/ChatService.html":{}}}],["angularfiredatabasemodule",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebase",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestoremodule",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["api",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["api's",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatUsersService.html":{},"miscellaneous/variables.html":{}}}],["api/v2/users",{"_index":604,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["apikey",{"_index":724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["app.component",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appid",{"_index":737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/json",{"_index":588,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["applications",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":117,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":176,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":128,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifacts",{"_index":688,"title":{},"body":{"index.html":{}}}],["audience",{"_index":210,"title":{},"body":{"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"injectables/ChatUsersService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatUsersService.html":{},"miscellaneous/variables.html":{}}}],["auth.ts",{"_index":628,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth.userprofile.given_name",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["auth.userprofile.nickname",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["auth0",{"_index":568,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["authcodeflowconfig",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authconfig",{"_index":206,"title":{"interfaces/AuthConfig.html":{}},"body":{"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authdomain",{"_index":726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticate",{"_index":558,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["authenticated",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticates",{"_index":566,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["authorization",{"_index":601,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["authservice",{"_index":30,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"coverage.html":{}}}],["authtoken",{"_index":556,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["automatically",{"_index":679,"title":{},"body":{"index.html":{}}}],["available",{"_index":572,"title":{},"body":{"injectables/ChatUsersService.html":{},"modules.html":{}}}],["b7b8b8",{"_index":407,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["backend",{"_index":562,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["background",{"_index":411,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["bearer",{"_index":602,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["best",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["bold",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["boolean",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{}}}],["bootstrap",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["border",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["browse",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"modules.html":{}}}],["browser",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":188,"title":{},"body":{"classes/AppPage.html":{}}}],["browsermodule",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":687,"title":{},"body":{"index.html":{}}}],["c5b9b9",{"_index":550,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["candisplaybadge",{"_index":493,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["center",{"_index":552,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["change",{"_index":681,"title":{},"body":{"index.html":{}}}],["chat",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["chatbox",{"_index":338,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["chatroomcomponent",{"_index":104,"title":{"components/ChatRoomComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["chatservice",{"_index":228,"title":{"injectables/ChatService.html":{}},"body":{"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"coverage.html":{}}}],["chatuserscomponent",{"_index":107,"title":{"components/ChatUsersComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["chatuserservice",{"_index":494,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["chatusersservice",{"_index":23,"title":{"injectables/ChatUsersService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"coverage.html":{}}}],["check",{"_index":707,"title":{},"body":{"index.html":{}}}],["checkifuserexists",{"_index":418,"title":{},"body":{"injectables/ChatService.html":{}}}],["checks",{"_index":432,"title":{},"body":{"injectables/ChatService.html":{}}}],["circleicon",{"_index":495,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["class",{"_index":60,"title":{"classes/AppPage.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":177,"title":{},"body":{"classes/AppPage.html":{}}}],["cli",{"_index":197,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["client",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["client_credentials",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["client_id",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatUsersService.html":{}}}],["client_secret",{"_index":596,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["clientid",{"_index":211,"title":{},"body":{"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["clientsecret",{"_index":212,"title":{},"body":{"interfaces/AuthConfig.html":{},"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["color",{"_index":406,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["components/chat",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["components/user",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["config.ts",{"_index":209,"title":{},"body":{"interfaces/AuthConfig.html":{},"coverage.html":{}}}],["configured",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["connecting",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["const",{"_index":199,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["constant",{"_index":202,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["constants/auth/manage",{"_index":580,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["constructor",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["constructor(af",{"_index":421,"title":{},"body":{"injectables/ChatService.html":{}}}],["constructor(auth",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{}}}],["constructor(chatservice",{"_index":502,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["constructor(httpclient",{"_index":560,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["constructor(oauthservice",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(public",{"_index":361,"title":{},"body":{"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{}}}],["contact",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["content",{"_index":190,"title":{},"body":{"classes/AppPage.html":{},"injectables/ChatUsersService.html":{}}}],["context",{"_index":640,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["core",{"_index":654,"title":{},"body":{"dependencies.html":{}}}],["courier",{"_index":400,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["coverage",{"_index":616,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["coversation",{"_index":371,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["current",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{}}}],["currentdate",{"_index":479,"title":{},"body":{"injectables/ChatService.html":{}}}],["currentuser",{"_index":501,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["cursive",{"_index":394,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["custom",{"_index":403,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["customqueryparams",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["cuurent",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["data",{"_index":606,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["database",{"_index":428,"title":{},"body":{"injectables/ChatService.html":{}}}],["databaseurl",{"_index":728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date.now",{"_index":481,"title":{},"body":{"injectables/ChatService.html":{}}}],["date:\"dd",{"_index":379,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["declarations",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/ChatUsersComponent.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":203,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["defined",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["demands",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":119,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":351,"title":{},"body":{"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{}}}],["dev",{"_index":676,"title":{},"body":{"index.html":{}}}],["development",{"_index":673,"title":{},"body":{"index.html":{}}}],["directive",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["directives",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":686,"title":{},"body":{"index.html":{}}}],["directory",{"_index":691,"title":{},"body":{"index.html":{}}}],["displayname",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{}}}],["dist",{"_index":690,"title":{},"body":{"index.html":{}}}],["docs",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["docsicon",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":617,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["dummyclientsecret",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":651,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":703,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":178,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":185,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":182,"title":{},"body":{"classes/AppPage.html":{}}}],["e6fbbe",{"_index":412,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["element",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["element(by.css('app",{"_index":189,"title":{},"body":{"classes/AppPage.html":{}}}],["email",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":702,"title":{},"body":{"index.html":{}}}],["enforce",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["enter",{"_index":375,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["environment",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":608,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["error._body",{"_index":609,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["event.type",{"_index":584,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["execute",{"_index":699,"title":{},"body":{"index.html":{}}}],["exists",{"_index":433,"title":{},"body":{"injectables/ChatService.html":{}}}],["export",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{}}}],["exports",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["fabookreader",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["fadotcircle",{"_index":519,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["faexclamationtriangle",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["false",{"_index":514,"title":{},"body":{"components/ChatUsersComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":393,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["fasigninalt",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["fetchallusers",{"_index":559,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["fetches",{"_index":571,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["fetchusersurl",{"_index":213,"title":{},"body":{"interfaces/AuthConfig.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["files",{"_index":682,"title":{},"body":{"index.html":{}}}],["firebase",{"_index":436,"title":{},"body":{"injectables/ChatService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["first",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["fixed",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["flag",{"_index":693,"title":{},"body":{"index.html":{}}}],["font",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["fontawesome",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["fontawesomemodule",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["formsmodule",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["fortawesome/angular",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":653,"title":{},"body":{"dependencies.html":{}}}],["fortawesome/free",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/ChatUsersComponent.html":{},"dependencies.html":{}}}],["four",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["fromid",{"_index":482,"title":{},"body":{"injectables/ChatService.html":{}}}],["further",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["gchat",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["general",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["generate",{"_index":684,"title":{},"body":{"index.html":{}}}],["generated",{"_index":670,"title":{},"body":{"index.html":{}}}],["get(this.oauthservice.issuer",{"_index":603,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["getting",{"_index":666,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":180,"title":{},"body":{"classes/AppPage.html":{}}}],["getunreadmessages",{"_index":498,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["getunreadmessages(useremail",{"_index":505,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["getuserid",{"_index":449,"title":{},"body":{"injectables/ChatService.html":{}}}],["getuserprofile",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["go",{"_index":706,"title":{},"body":{"index.html":{}}}],["grant_type",{"_index":594,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["granttype",{"_index":214,"title":{},"body":{"interfaces/AuthConfig.html":{},"miscellaneous/variables.html":{}}}],["graph",{"_index":710,"title":{},"body":{"modules.html":{}}}],["header",{"_index":399,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["headers",{"_index":587,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["height",{"_index":388,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["help",{"_index":704,"title":{},"body":{"index.html":{}}}],["hh:mm",{"_index":382,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["home",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["html",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["http://localhost:4200",{"_index":678,"title":{},"body":{"index.html":{}}}],["httpbackend",{"_index":563,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["httpclient",{"_index":561,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["httpclient(this.backend",{"_index":582,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["httpclientmodule",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":577,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["https://gchat",{"_index":729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://gchat.au.auth0.com",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["https://gchat.au.auth0.com/api/v2",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["https://gchat.au.auth0.com/api/v2/users",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://gchat.au.auth0.com/oauth/token",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpwithoutinterceptor",{"_index":557,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["icons",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/ChatUsersComponent.html":{},"dependencies.html":{}}}],["id",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":618,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["idp",{"_index":573,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["img",{"_index":384,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["implements",{"_index":488,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["import",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{}}}],["important",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"miscellaneous/variables.html":{}}}],["imports",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["incoming",{"_index":352,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{}}}],["inherit",{"_index":392,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["initializing",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["injectable",{"_index":217,"title":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/ChatUsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/ChatUsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/ChatUsersService.html":{},"overview.html":{}}}],["input",{"_index":359,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["inputs",{"_index":343,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["inserted",{"_index":430,"title":{},"body":{"injectables/ChatService.html":{}}}],["interface",{"_index":205,"title":{"interfaces/AuthConfig.html":{}},"body":{"interfaces/AuthConfig.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":207,"title":{},"body":{"interfaces/AuthConfig.html":{}}}],["isauthenticated",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["ismenucollapsed",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["issenderorreceiver",{"_index":341,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["issenderorreceiver(message",{"_index":346,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["issuer",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["isuserexists",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["karma",{"_index":701,"title":{},"body":{"index.html":{}}}],["key",{"_index":376,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["legend",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["list",{"_index":544,"title":{},"body":{"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["list('users",{"_index":468,"title":{},"body":{"injectables/ChatService.html":{}}}],["list..please",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["literal",{"_index":425,"title":{},"body":{"injectables/ChatService.html":{},"miscellaneous/variables.html":{}}}],["loaddiscoverydocumentandtrylogin",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('id_token",{"_index":586,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["localstorage.setitem('id_token",{"_index":599,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["log",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["logged",{"_index":567,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["loggedinuser",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["loginto",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["logout",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatUsersService.html":{}}}],["logs",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["manage_auth",{"_index":579,"title":{},"body":{"injectables/ChatUsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["manage_auth.audience",{"_index":593,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["manage_auth.clientid",{"_index":592,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["manage_auth.clientsecret",{"_index":597,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["manage_auth.granttype",{"_index":595,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["manage_auth.oauthurl",{"_index":591,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["management",{"_index":569,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["mask",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["masktriangleicon",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["matching",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":350,"title":{},"body":{"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{}}}],["message.fromid",{"_index":370,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["message.message",{"_index":383,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["message.timestamp",{"_index":378,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["message.toid",{"_index":368,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["messages",{"_index":339,"title":{},"body":{"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{}}}],["messages[messages.length",{"_index":531,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["messagingsenderid",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["methods",{"_index":179,"title":{},"body":{"classes/AppPage.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["mind",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":715,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mmm",{"_index":380,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["module",{"_index":116,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":118,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":705,"title":{},"body":{"index.html":{}}}],["mute",{"_index":404,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["name",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["navigate",{"_index":677,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":181,"title":{},"body":{"classes/AppPage.html":{}}}],["nbsp",{"_index":546,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["nbsp;&nbsp;{{user.displayname",{"_index":545,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["nbsp;({{user.status",{"_index":547,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["needed",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["new",{"_index":401,"title":{},"body":{"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"coverage.html":{},"index.html":{}}}],["newly",{"_index":533,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["newmessage",{"_index":340,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["newmessage.fromid",{"_index":537,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["newmessage.toid",{"_index":538,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["ng",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngbmodule",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngmychat",{"_index":668,"title":{},"body":{"index.html":{}}}],["ngoninit",{"_index":499,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["number",{"_index":480,"title":{},"body":{"injectables/ChatService.html":{}}}],["oauth2",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/ChatUsersService.html":{},"dependencies.html":{}}}],["oauthevent",{"_index":578,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["oauthmodule",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["oauthmodule.forroot",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["oauthservice",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatUsersService.html":{}}}],["oauthurl",{"_index":215,"title":{},"body":{"interfaces/AuthConfig.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatUsersComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":356,"title":{},"body":{"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{}}}],["observable((observer",{"_index":466,"title":{},"body":{"injectables/ChatService.html":{}}}],["observer.complete",{"_index":472,"title":{},"body":{"injectables/ChatService.html":{}}}],["observer.next(snapshot.exists",{"_index":471,"title":{},"body":{"injectables/ChatService.html":{}}}],["offline",{"_index":440,"title":{},"body":{"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{}}}],["offline_access",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["oidc",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/ChatUsersService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["one",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["oninit",{"_index":489,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["online",{"_index":439,"title":{},"body":{"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{}}}],["online/offline",{"_index":445,"title":{},"body":{"injectables/ChatService.html":{}}}],["opacity",{"_index":395,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["openid",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["out",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":711,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":644,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["param",{"_index":367,"title":{},"body":{"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{}}}],["parameters",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["permissions",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["picture",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{}}}],["placeholder",{"_index":390,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["please",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["position",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["post",{"_index":590,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["practices",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["press",{"_index":374,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["private",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/ChatUsersService.html":{}}}],["prod",{"_index":692,"title":{},"body":{"index.html":{}}}],["production",{"_index":694,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["profile..please",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["profile.component",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["profile.component.html",{"_index":613,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.scss",{"_index":612,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts",{"_index":611,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:9",{"_index":614,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile/user",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profileobject",{"_index":429,"title":{},"body":{"injectables/ChatService.html":{}}}],["profileobject.displayname",{"_index":475,"title":{},"body":{"injectables/ChatService.html":{}}}],["profileobject.email",{"_index":474,"title":{},"body":{"injectables/ChatService.html":{}}}],["profileobject.picture",{"_index":477,"title":{},"body":{"injectables/ChatService.html":{}}}],["project",{"_index":669,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["projectid",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":184,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["protractor",{"_index":186,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["providedin",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/ChatUsersService.html":{}}}],["provider",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["query.once('value",{"_index":470,"title":{},"body":{"injectables/ChatService.html":{}}}],["readme",{"_index":708,"title":{},"body":{"index.html":{}}}],["realtime",{"_index":437,"title":{},"body":{"injectables/ChatService.html":{}}}],["received",{"_index":534,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["receiver",{"_index":410,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["recepient",{"_index":349,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["redirect",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["redirecturi",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["ref",{"_index":455,"title":{},"body":{"injectables/ChatService.html":{}}}],["ref.orderbychild('id').equalto(this.userid",{"_index":469,"title":{},"body":{"injectables/ChatService.html":{}}}],["ref.orderbychild('sorttime')).valuechanges",{"_index":456,"title":{},"body":{"injectables/ChatService.html":{}}}],["refresh",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["registerd",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["reload",{"_index":680,"title":{},"body":{"index.html":{}}}],["request",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["require",{"_index":641,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resourceserver",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["responsetype",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["result",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":187,"title":{},"body":{"classes/AppPage.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{}}}],["returns",{"_index":183,"title":{},"body":{"classes/AppPage.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["returnto",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["room",{"_index":334,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room'},{'name",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["room.component",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["room.component.html",{"_index":336,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room.component.scss",{"_index":335,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room.component.ts",{"_index":333,"title":{},"body":{"components/ChatRoomComponent.html":{},"coverage.html":{}}}],["room.component.ts:14",{"_index":345,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room.component.ts:15",{"_index":358,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room.component.ts:16",{"_index":357,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room.component.ts:17",{"_index":344,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room.component.ts:18",{"_index":355,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room.component.ts:27",{"_index":353,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room.component.ts:41",{"_index":347,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room/chat",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"components/ChatRoomComponent.html":{},"coverage.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/ChatUsersService.html":{}}}],["root'},{'name",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["router",{"_index":198,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule",{"_index":194,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":204,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":195,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"routes.html":{}}}],["routing.module",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":193,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":674,"title":{},"body":{"index.html":{}}}],["running",{"_index":695,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":360,"title":{},"body":{"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"dependencies.html":{}}}],["sar8qec0ecqt2dz3mad8e3n4pdgb8ul1",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["scaffolding",{"_index":683,"title":{},"body":{"index.html":{}}}],["scope",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["secret",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["security",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":508,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["selecteduser",{"_index":496,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["send",{"_index":377,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["sendaccesstoken",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["sender",{"_index":348,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["sendmessage",{"_index":342,"title":{},"body":{"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{}}}],["sendmessage(text",{"_index":434,"title":{},"body":{"injectables/ChatService.html":{}}}],["sends",{"_index":354,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["serve",{"_index":675,"title":{},"body":{"index.html":{}}}],["server",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["server.code",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["services/auth/auth.service",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{}}}],["services/chat",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatUsersComponent.html":{}}}],["services/chat/chat.service",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["set",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"miscellaneous/variables.html":{}}}],["sets",{"_index":200,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChatUsersComponent.html":{}}}],["setselecteduser",{"_index":500,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["setselecteduser(user",{"_index":511,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["setuserid(userid",{"_index":451,"title":{},"body":{"injectables/ChatService.html":{}}}],["setuserprofile(userprofile",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["showdebuginformation",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["sign",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["signinicon",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["size",{"_index":397,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["small",{"_index":398,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["snapshot",{"_index":464,"title":{},"body":{"injectables/ChatService.html":{}}}],["snapshot.ref.update",{"_index":465,"title":{},"body":{"injectables/ChatService.html":{}}}],["solid",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/ChatUsersComponent.html":{},"dependencies.html":{}}}],["sorttime",{"_index":485,"title":{},"body":{"injectables/ChatService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["spa",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["spa's",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["span')).gettext",{"_index":191,"title":{},"body":{"classes/AppPage.html":{}}}],["spas",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["spec\\.ts",{"_index":723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["src/.../auth.service.ts",{"_index":717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../manage",{"_index":721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":192,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:18",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/chat",{"_index":332,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"coverage.html":{}}}],["src/app/components/user",{"_index":610,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["src/app/constants/auth/manage",{"_index":627,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/models/auth/auth",{"_index":208,"title":{},"body":{"interfaces/AuthConfig.html":{},"coverage.html":{}}}],["src/app/services/auth/auth.service.ts",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/auth/auth.service.ts:116",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:125",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:43",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:86",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:90",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:99",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/chat",{"_index":554,"title":{},"body":{"injectables/ChatUsersService.html":{},"coverage.html":{}}}],["src/app/services/chat/chat.service.ts",{"_index":413,"title":{},"body":{"injectables/ChatService.html":{},"coverage.html":{}}}],["src/app/services/chat/chat.service.ts:10",{"_index":448,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat/chat.service.ts:101",{"_index":435,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat/chat.service.ts:13",{"_index":423,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat/chat.service.ts:15",{"_index":446,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat/chat.service.ts:20",{"_index":450,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat/chat.service.ts:24",{"_index":452,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat/chat.service.ts:36",{"_index":441,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat/chat.service.ts:54",{"_index":431,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat/chat.service.ts:77",{"_index":426,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat/chat.service.ts:9",{"_index":447,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/environments/environment.prod.ts",{"_index":637,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":638,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":639,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["started",{"_index":667,"title":{"index.html":{}},"body":{}}],["statements",{"_index":619,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":443,"title":{},"body":{"injectables/ChatService.html":{}}}],["storagebucket",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stored",{"_index":689,"title":{},"body":{"index.html":{}}}],["string",{"_index":216,"title":{},"body":{"interfaces/AuthConfig.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["style",{"_index":391,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["subscribe",{"_index":605,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["subscribe((token",{"_index":598,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["subscriber",{"_index":453,"title":{},"body":{"injectables/ChatService.html":{}}}],["such",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":709,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/ChatUsersComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["table",{"_index":643,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":642,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["test",{"_index":698,"title":{},"body":{"index.html":{}}}],["tests",{"_index":697,"title":{},"body":{"index.html":{}}}],["text",{"_index":408,"title":{},"body":{"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{}}}],["then((value",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.af",{"_index":467,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.af.database.ref('users').orderbychild('id').equalto(this.userid",{"_index":462,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.af.list('messages",{"_index":454,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.af.list('messages').push(message",{"_index":486,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.af.list('users').push",{"_index":473,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.af.list('users').valuechanges",{"_index":458,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.afservice.messages",{"_index":363,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["this.afservice.sendmessage(this.user.chatmessage",{"_index":364,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["this.afservice.userid",{"_index":369,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["this.allusers",{"_index":607,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["this.authtoken",{"_index":585,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["this.candisplaybadge",{"_index":530,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["this.chatservice.adduserinfo",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.chatservice.checkifuserexists().subscribe((isuserexists",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.chatservice.messages",{"_index":527,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["this.chatservice.updateuserstatus('offline",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.chatservice.updateuserstatus('online",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.chatservice.userid",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatUsersComponent.html":{}}}],["this.chatservice.users",{"_index":526,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["this.chatuserservice.fetchallusers",{"_index":528,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["this.chatusersservice.authenticate",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient",{"_index":589,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["this.httpwithoutinterceptor",{"_index":581,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["this.isauthenticated",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedinuser",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.messages",{"_index":362,"title":{},"body":{"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{}}}],["this.messages.subscribe((messages",{"_index":529,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["this.oauthservice",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.oauthservice.clientid",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.oauthservice.configure(authcodeflowconfig",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.oauthservice.events.subscribe((event",{"_index":583,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["this.oauthservice.getidentityclaims",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.oauthservice.hasvalidaccesstoken",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.oauthservice.initcodeflow",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.oauthservice.redirecturi",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.oauthservice.revoketokenandlogout",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.oauthservice.setstorage(localstorage",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.oauthservice.setupautomaticsilentrefresh",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.selecteduser",{"_index":535,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["this.selecteduser.id",{"_index":536,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["this.unreadmessages",{"_index":540,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["this.unreadmessages[newmessage.fromid",{"_index":539,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["this.unreadmessages[user.id",{"_index":542,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["this.unreadmessages[useremail",{"_index":543,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["this.user.chatmessage",{"_index":366,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["this.user.id",{"_index":365,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["this.userid",{"_index":476,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.useridentifier",{"_index":459,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.userprofile",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userprofile.email",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userprofile.name",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userprofile.picture",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userprofile.sub",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.users",{"_index":457,"title":{},"body":{"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{}}}],["thumb",{"_index":385,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["timestamp",{"_index":484,"title":{},"body":{"injectables/ChatService.html":{}}}],["titlecase",{"_index":373,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["toid",{"_index":483,"title":{},"body":{"injectables/ChatService.html":{}}}],["token",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatUsersComponent.html":{},"miscellaneous/variables.html":{}}}],["token.access_token",{"_index":600,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["top",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["true",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/ChatUsersComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":662,"title":{},"body":{"dependencies.html":{}}}],["tuzyy3x0w80olanwrdrmjwajo4dmg1yb7ryoadxynzx3gldbcgqrzk_83cddatkp",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":575,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["unit",{"_index":696,"title":{},"body":{"index.html":{}}}],["unread",{"_index":507,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["unreadmessages",{"_index":497,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["unreadmessages[user.id",{"_index":548,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["up",{"_index":201,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["updates",{"_index":442,"title":{},"body":{"injectables/ChatService.html":{}}}],["updateuserstatus",{"_index":419,"title":{},"body":{"injectables/ChatService.html":{}}}],["updateuserstatus(status",{"_index":438,"title":{},"body":{"injectables/ChatService.html":{}}}],["uppercase",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/UserProfileComponent.html":{}}}],["url",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":685,"title":{},"body":{"index.html":{}}}],["usecase",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["user.displayname",{"_index":372,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["user.name",{"_index":615,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user.status",{"_index":553,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["useremail",{"_index":509,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["userid",{"_index":420,"title":{},"body":{"injectables/ChatService.html":{}}}],["userid(userid",{"_index":460,"title":{},"body":{"injectables/ChatService.html":{}}}],["useridentifier",{"_index":415,"title":{},"body":{"injectables/ChatService.html":{}}}],["userprofile",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["userprofile(userprofile",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["userprofilecomponent",{"_index":109,"title":{"components/UserProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userquery",{"_index":461,"title":{},"body":{"injectables/ChatService.html":{}}}],["userquery.once('child_added",{"_index":463,"title":{},"body":{"injectables/ChatService.html":{}}}],["users",{"_index":416,"title":{},"body":{"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["users'},{'name",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["users.component",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["users.component.html",{"_index":491,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.scss",{"_index":490,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts",{"_index":487,"title":{},"body":{"components/ChatUsersComponent.html":{},"coverage.html":{}}}],["users.component.ts:16",{"_index":504,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:17",{"_index":513,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:18",{"_index":523,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:19",{"_index":515,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:20",{"_index":522,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:21",{"_index":524,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:22",{"_index":525,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:23",{"_index":521,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:24",{"_index":516,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:25",{"_index":520,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:27",{"_index":503,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:30",{"_index":517,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:31",{"_index":518,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:36",{"_index":510,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:81",{"_index":512,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:95",{"_index":506,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.service",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatUsersComponent.html":{}}}],["users.service.ts",{"_index":555,"title":{},"body":{"injectables/ChatUsersService.html":{},"coverage.html":{}}}],["users.service.ts:11",{"_index":574,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["users.service.ts:12",{"_index":576,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["users.service.ts:14",{"_index":564,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["users.service.ts:36",{"_index":565,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["users.service.ts:65",{"_index":570,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["users/chat",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"coverage.html":{}}}],["value",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/ChatUsersComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["variable",{"_index":629,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":716,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":671,"title":{},"body":{"index.html":{}}}],["via",{"_index":700,"title":{},"body":{"index.html":{}}}],["visibility",{"_index":444,"title":{},"body":{"injectables/ChatService.html":{}}}],["vital",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["vpasa7ll0a932iso5dmqn3b4knjqkr1j",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wait",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["webkit",{"_index":389,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["weight",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["welcome",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["width",{"_index":386,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["window.location.href",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["yy",{"_index":381,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["zone.js",{"_index":664,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                    Public\n                                chatUsersService\n                            \n                            \n                                    Public\n                                docsIcon\n                            \n                            \n                                    Public\n                                isMenuCollapsed\n                            \n                            \n                                    Public\n                                maskTriangleIcon\n                            \n                            \n                                    Public\n                                signInIcon\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, chatUsersService: ChatUsersService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chatUsersService\n                                                  \n                                                        \n                                                                        ChatUsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            chatUsersService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChatUsersService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            docsIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : faBookReader\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isMenuCollapsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            maskTriangleIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : faExclamationTriangle\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            signInIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : faSignInAlt\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport {\n  faBookReader,\n  faExclamationTriangle,\n  faSignInAlt,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { AuthService } from './services/auth/auth.service';\nimport { ChatUsersService } from './services/chat-users/chat-users.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  public isMenuCollapsed = true;\n\n  public signInIcon = faSignInAlt;\n  public maskTriangleIcon = faExclamationTriangle;\n  public docsIcon = faBookReader;\n\n  constructor(\n    public auth: AuthService,\n    public chatUsersService: ChatUsersService\n  ) { }\n}\n\n    \n\n    \n        \n  Home\n\n  \n  \n    &#9776;\n  \n\n  \n  \n    \n      \n        \n        '\n          \n          Browse Docs\n      \n    \n\n    \n      \n        \n        \n          \n          Login\n        \n      \n      \n\n        \n          Welcome, {{ (auth.userProfile.given_name || auth.userProfile.nickname) | uppercase}}!!\n        \n        Log Out\n      \n    \n  \n\n\n  \n    \n      \n      Please loginto start\n      connecting !!\n    \n  \n  \n    \n      Initializing user profile..Please wait\n    \n    \n      Initializing Contact List..Please wait\n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .gchat-mask {\n    position: fixed;\n    top: 50%;\n    font-weight: bold;\n    border: 2px solid;\n}\n.gchat-login {\n    padding: 1px 5px 4px 1px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Home        ☰                                \\'                    Browse Docs                                                        Login                                      Welcome, {{ (auth.userProfile.given_name || auth.userProfile.nickname) | uppercase}}!!                Log Out                              Please loginto start      connecting !!                  Initializing user profile..Please wait              Initializing Contact List..Please wait      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatRoomComponent', 'selector': 'app-chat-room'},{'name': 'ChatUsersComponent', 'selector': 'app-chat-users'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChatRoomComponent\n\nChatRoomComponent\n\nAppModule -->\n\nChatRoomComponent->AppModule\n\n\n\n\n\nChatUsersComponent\n\nChatUsersComponent\n\nAppModule -->\n\nChatUsersComponent->AppModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nAppModule -->\n\nUserProfileComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ChatRoomComponent\n                        \n                        \n                            ChatUsersComponent\n                        \n                        \n                            UserProfileComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AppComponent } from './app.component';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { OAuthModule } from 'angular-oauth2-oidc';\n\nimport { AngularFireAuthModule } from '@angular/fire/auth';\n\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { environment } from '../environments/environment';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { FormsModule } from '@angular/forms';\n\nimport { ChatRoomComponent } from '@components/chat-room/chat-room.component';\nimport { ChatUsersComponent } from '@components/chat-users/chat-users.component';\nimport { UserProfileComponent } from '@components/user-profile/user-profile.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserProfileComponent,\n    ChatUsersComponent,\n    ChatRoomComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    NgbModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule,\n    AngularFireAuthModule,\n    AngularFireDatabaseModule,\n    HttpClientModule,\n    OAuthModule.forRoot({\n      resourceServer: {\n        sendAccessToken: true,\n        allowedUrls: ['https://gchat.au.auth0.com']\n      }\n    }),\n    FontAwesomeModule,\n    NgbModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router'; // CLI imports router\n\nconst routes: Routes = []; // sets up routes constant where you define your routes\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthConfig.html":{"url":"interfaces/AuthConfig.html","title":"interface - AuthConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/auth/auth-config.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        audience\n                                \n                                \n                                        clientID\n                                \n                                \n                                        clientSecret\n                                \n                                \n                                        fetchUsersUrl\n                                \n                                \n                                        grantType\n                                \n                                \n                                        oauthUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        audience\n                                    \n                                \n                                \n                                    \n                                        audience:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientID\n                                    \n                                \n                                \n                                    \n                                        clientID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientSecret\n                                    \n                                \n                                \n                                    \n                                        clientSecret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fetchUsersUrl\n                                    \n                                \n                                \n                                    \n                                        fetchUsersUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        grantType\n                                    \n                                \n                                \n                                    \n                                        grantType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        oauthUrl\n                                    \n                                \n                                \n                                    \n                                        oauthUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AuthConfig {\n  clientID: string;\n  clientSecret: string;\n  fetchUsersUrl: string;\n  oauthUrl: string;\n  grantType: string;\n  audience: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loggedInUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAuthenticated\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userProfile\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(oauthService: OAuthService, chatUsersService: ChatUsersService, chatService: ChatService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth/auth.service.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        oauthService\n                                                  \n                                                        \n                                                                        OAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chatUsersService\n                                                  \n                                                        \n                                                                        ChatUsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chatService\n                                                  \n                                                        \n                                                                        ChatService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isAuthenticated\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isAuthenticated()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:125\n                \n            \n\n\n            \n                \n                    Returns if the cuurent user is authenticated.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:116\n                \n            \n\n\n            \n                \n                    Logs a user in.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:99\n                \n            \n\n\n            \n                \n                    Logs the current user out.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loggedInUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth.service.ts:43\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userProfile\n                    \n                \n\n                \n                    \n                        getuserProfile()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/auth/auth.service.ts:90\n                                \n                            \n\n                \n                    \n                        setuserProfile(userProfile: any)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/auth/auth.service.ts:86\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            userProfile\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AuthConfig, OAuthService } from 'angular-oauth2-oidc';\n\nimport { ChatUsersService } from '@services/chat-users/chat-users.service';\nimport { ChatService } from '@services/chat/chat.service';\n\nexport const authCodeFlowConfig: AuthConfig = {\n  // Url of the Identity Provider\n  issuer: 'https://gchat.au.auth0.com/',\n\n  // URL of the SPA to redirect the user to after login\n  redirectUri: window.location.href,\n\n  // The SPA's id. The SPA is registerd with this id at the auth-server\n  // clientId: 'server.code',\n  clientId: 'Sar8qeC0eCqT2DZ3maD8E3N4pdGB8uL1',\n\n  // Just needed if your auth server demands a secret. In general, this\n  // is a sign that the auth server is not configured with SPAs in mind\n  // and it might not enforce further best practices vital for security\n  // such applications.\n  // dummyClientSecret: 'secret',\n\n  responseType: 'code',\n\n  // set the scope for the permissions the client should request\n  // The first four are defined by OIDC.\n  // Important: Request offline_access to get a refresh token\n  // The api scope is a usecase specific one\n  scope: 'openid profile email offline_access',\n\n  showDebugInformation: true,\n  customQueryParams: {\n    // Your API's name\n    audience: 'https://gchat.au.auth0.com/api/v2/',\n  },\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private loggedInUser: object;\n\n  constructor(\n    private oauthService: OAuthService,\n    private chatUsersService: ChatUsersService,\n    private chatService: ChatService\n  ) {\n    this.oauthService.configure(authCodeFlowConfig);\n\n    this.oauthService.setStorage(localStorage);\n\n    this.oauthService\n      .loadDiscoveryDocumentAndTryLogin()\n      .then((value: boolean) => {\n        if (this.isAuthenticated()) {\n          this.userProfile = this.oauthService.getIdentityClaims();\n\n          this.chatService.userId = this.userProfile.sub;\n\n          this.chatUsersService.authenticate();\n\n          this.chatService.checkIfUserExists().subscribe((isUserExists: boolean) => {\n\n            if (isUserExists) {\n\n              this.chatService.updateUserStatus('online');\n\n            } else {\n\n              this.chatService.addUserInfo({\n                email: this.userProfile.email,\n                displayName: this.userProfile.name,\n                ... this.userProfile.picture ? { picture: this.userProfile.picture } : {}\n              });\n\n            }\n          });\n\n        }\n      });\n    this.oauthService.setupAutomaticSilentRefresh();\n  }\n\n  set userProfile(userProfile: any) {\n    this.loggedInUser = userProfile;\n  }\n\n  get userProfile(): any {\n    return this.loggedInUser;\n  }\n\n  /**\n   *\n   * Logs the current user out.\n   *\n   */\n  public logout(): void {\n    this.oauthService.revokeTokenAndLogout(\n      {\n        client_id: this.oauthService.clientId,\n        returnTo: this.oauthService.redirectUri,\n      },\n      true\n    );\n\n    this.chatService.updateUserStatus('offline');\n  }\n\n  /**\n   *\n   * Logs a user in.\n   *\n   */\n  public login(): void {\n    this.oauthService.initCodeFlow();\n  }\n\n  /**\n   *\n   * Returns if the cuurent user is authenticated.\n   *\n   */\n  public isAuthenticated(): boolean {\n    return this.oauthService.hasValidAccessToken();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatRoomComponent.html":{"url":"components/ChatRoomComponent.html","title":"component - ChatRoomComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChatRoomComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/chat-room/chat-room.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chat-room\n            \n\n            \n                styleUrls\n                ./chat-room.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./chat-room.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                afService\n                            \n                            \n                                    Public\n                                auth\n                            \n                            \n                                    Public\n                                chatbox\n                            \n                            \n                                    Public\n                                messages\n                            \n                            \n                                    Public\n                                newMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isSenderOrReceiver\n                            \n                            \n                                    Public\n                                sendMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, afService: ChatService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/chat-room/chat-room.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        afService\n                                                  \n                                                        \n                                                                        ChatService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/chat-room/chat-room.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isSenderOrReceiver\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isSenderOrReceiver(message)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat-room/chat-room.component.ts:41\n                \n            \n\n\n            \n                \n                    Returns if the current user is either a sender or a recepient of the message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The incoming message\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            sendMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat-room/chat-room.component.ts:27\n                \n            \n\n\n            \n                \n                    Sends a message to a user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            afService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChatService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-room/chat-room.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-room/chat-room.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            chatbox\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-room/chat-room.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            messages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-room/chat-room.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            newMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-room/chat-room.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { AuthService } from '@services/auth/auth.service';\nimport { ChatService } from '@services/chat/chat.service';\n\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-chat-room',\n  templateUrl: './chat-room.component.html',\n  styleUrls: ['./chat-room.component.scss'],\n})\nexport class ChatRoomComponent {\n  @Input() user: any;\n  public newMessage: string;\n  public messages: Observable;\n  public chatbox: any;\n  constructor(public auth: AuthService, public afService: ChatService) {\n    this.messages = this.afService.messages;\n  }\n\n  /**\n   *\n   * Sends a message to a user.\n   *\n   */\n  public sendMessage(): void {\n\n    this.afService.sendMessage(this.user.chatmessage, this.user.id);\n\n    this.user.chatmessage = '';\n  }\n\n  /**\n   *\n   * Returns if the current user is either a sender or a recepient of the message.\n   *\n   * @param message The incoming message\n   *\n   */\n  public isSenderOrReceiver(message): boolean {\n    return (\n      (message.toId === this.afService.userId &&\n        message.fromId === this.user.id) ||\n      (message.fromId === this.afService.userId && message.toId === this.user.id)\n    );\n  }\n}\n\n    \n\n    \n        Your Coversation with {{user.displayName | titlecase}}\n\n    \n    Press enter key to send your message\n\n\n    \n        \n\n            \n                {{message.timestamp | date:\"dd-MMM-yy hh:mm a\"}}\n                \n                \n                    \n                        \n                        {{message.message}}\n                    \n                \n            \n\n            \n                \n                    \n                        \n                            \n                        \n                        {{message.message}}\n                    \n                \n                {{message.timestamp | date:\"dd-MMM-yy hh:mm a\"}}\n                \n\n            \n\n        \n    \n\n\n\n    {{ user.displayName }}\n\n    \n\n    \n                \n                    ./chat-room.component.scss\n                \n                .img-thumb-you {\n    width: 30px;\n    height: 30px;\n}\ninput::-webkit-input-placeholder {\n    font-style: inherit;\n    font-family: cursive;\n    opacity: 0.5;\n    font-size: small;\n}\n.room-header {\n    font-family: Courier-New;\n    font-size: 1.1em;\n    font-weight: bold;\n}\n.custom-mute {\n    font-size: 0.7rem;\n    color: #b7b8b8 !important;\n}\n.chat-text {\n    font-size: 0.9em;\n    font-family: cursive;\n}\n.chat-receiver {\n    background: #e6fbbe;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Your Coversation with {{user.displayName | titlecase}}        Press enter key to send your message                                        {{message.timestamp | date:\"dd-MMM-yy hh:mm a\"}}                                                                                                    {{message.message}}                                                                                                                                                                                                    {{message.message}}                                                    {{message.timestamp | date:\"dd-MMM-yy hh:mm a\"}}                                            {{ user.displayName }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatRoomComponent', 'selector': 'app-chat-room'},{'name': 'ChatUsersComponent', 'selector': 'app-chat-users'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChatRoomComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChatService.html":{"url":"injectables/ChatService.html","title":"injectable - ChatService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ChatService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/chat/chat.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                af\n                            \n                            \n                                    Public\n                                messages\n                            \n                            \n                                    Private\n                                userIdentifier\n                            \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUserInfo\n                            \n                            \n                                    Public\n                                checkIfUserExists\n                            \n                            \n                                sendMessage\n                            \n                            \n                                updateUserStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userId\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(af: AngularFireDatabase)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/chat/chat.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        af\n                                                  \n                                                        \n                                                                    AngularFireDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addUserInfo\n                        \n                        \n                    \n                \n            \n            \n                \naddUserInfo(profileObject: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/chat/chat.service.ts:77\n                \n            \n\n\n            \n                \n                    Adds users into the database.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    profileObject\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The user profile to be inserted.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            checkIfUserExists\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfUserExists()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/chat/chat.service.ts:54\n                \n            \n\n\n            \n                \n                    Checks if user exists in the database\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsendMessage(text, userId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/chat/chat.service.ts:101\n                \n            \n\n\n            \n                \n                    Adds a message to the Firebase Realtime Database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the  text message.\n\n                                    \n                                \n                                \n                                    userId\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateUserStatus\n                        \n                        \n                    \n                \n            \n            \n                \nupdateUserStatus(status: \"online\" | \"offline\")\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/chat/chat.service.ts:36\n                \n            \n\n\n            \n                \n                    Updates current User Status visibility\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                            \"online\" | \"offline\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        online/offline\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            af\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AngularFireDatabase\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/chat/chat.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            messages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/chat/chat.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userIdentifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/chat/chat.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/chat/chat.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n\n                \n                    \n                        getuserId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/chat/chat.service.ts:20\n                                \n                            \n\n                \n                    \n                        setuserId(userId)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/chat/chat.service.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            userId\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { Observable, Subscriber } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ChatService {\n  public messages: Observable;\n  public users: Observable;\n\n\n  private userIdentifier: string;\n\n  constructor(public af: AngularFireDatabase) {\n    this.messages = this.af.list('messages', (ref) => ref.orderByChild('sortTime')).valueChanges();\n    this.users = this.af.list('users').valueChanges();\n  }\n\n  get userId(): string {\n    return this.userIdentifier;\n  }\n\n  set userId(userId) {\n    this.userIdentifier = userId;\n  }\n\n\n  /**\n   *\n   * Updates current User Status visibility\n   *\n   * @param status online/offline\n   *\n   */\n  updateUserStatus(status: 'online' | 'offline'): void {\n\n    const userQuery = this.af.database.ref('users').orderByChild('id').equalTo(this.userId);\n\n    userQuery.once('child_added', (snapshot) => {\n      snapshot.ref.update({\n        status\n      });\n    });\n\n  }\n\n  /**\n   *\n   * Checks if user exists in the database\n   *\n   *\n   */\n  public checkIfUserExists(): Observable {\n\n    return new Observable((observer: Subscriber) => {\n\n      this.af\n        .list('users', (ref) => ref.orderByChild('id').equalTo(this.userId))\n        .query.once('value', (snapshot) => {\n\n          observer.next(snapshot.exists());\n          observer.complete();\n        });\n\n    });\n\n  }\n\n  /**\n   *\n   * Adds users into the database.\n   *\n   * @param profileObject The user profile to be inserted.\n   *\n   */\n  addUserInfo(profileObject: {\n    email: string;\n    displayName: string;\n    picture?: string;\n  }): void {\n\n    this.af.list('users').push({\n      email: profileObject.email,\n      displayName: profileObject.displayName,\n      status: 'online',\n      id: this.userId,\n      picture: profileObject.picture || ''\n    });\n\n  }\n\n  /**\n   *\n   * Adds a message to the Firebase Realtime Database\n   *\n   * @param text the  text message.\n   * @param email the email address.\n   *\n   */\n  sendMessage(text, userId): void {\n\n    const currentDate: number = Date.now();\n\n    const message = {\n      fromId: this.userId,\n      message: text,\n      toId: userId,\n      timestamp: currentDate,\n      sortTime: -currentDate\n    };\n    this.af.list('messages').push(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatUsersComponent.html":{"url":"components/ChatUsersComponent.html","title":"component - ChatUsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChatUsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/chat-users/chat-users.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chat-users\n            \n\n            \n                styleUrls\n                ./chat-users.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./chat-users.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allUsers\n                            \n                            \n                                canDisplayBadge\n                            \n                            \n                                    Public\n                                chatbox\n                            \n                            \n                                    Public\n                                chatService\n                            \n                            \n                                    Public\n                                chatUserService\n                            \n                            \n                                    Public\n                                circleIcon\n                            \n                            \n                                    Public\n                                messages\n                            \n                            \n                                    Public\n                                newMessage\n                            \n                            \n                                selectedUser\n                            \n                            \n                                token\n                            \n                            \n                                    Public\n                                unreadMessages\n                            \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getUnreadMessages\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                setSelectedUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(chatService: ChatService, chatUserService: ChatUsersService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/chat-users/chat-users.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chatService\n                                                  \n                                                        \n                                                                        ChatService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chatUserService\n                                                  \n                                                        \n                                                                        ChatUsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentUser\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUnreadMessages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnreadMessages(userEmail)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat-users/chat-users.component.ts:95\n                \n            \n\n\n            \n                \n                    Returns Unread messages for the selected user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userEmail\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Returns unread messages for a user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat-users/chat-users.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setSelectedUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSelectedUser(user)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat-users/chat-users.component.ts:81\n                \n            \n\n\n            \n                \n                    Sets the selected User.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The user Object.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allUsers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canDisplayBadge\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            chatbox\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            chatService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChatService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            chatUserService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChatUsersService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            circleIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : faDotCircle\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            messages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            newMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unreadMessages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\nimport { faDotCircle } from '@fortawesome/free-solid-svg-icons';\n\nimport { ChatUsersService } from '@services/chat-users/chat-users.service';\nimport { ChatService } from '@services/chat/chat.service';\n\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-chat-users',\n  templateUrl: './chat-users.component.html',\n  styleUrls: ['./chat-users.component.scss'],\n})\nexport class ChatUsersComponent implements OnInit {\n  @Input() currentUser: any;\n  allUsers: any;\n  token: any;\n  canDisplayBadge = false;\n  public newMessage: string;\n  public unreadMessages: any = {};\n  public users: Observable;\n  public messages: Observable;\n  public chatbox: any;\n  public circleIcon = faDotCircle;\n\n  selectedUser: any;\n\n  constructor(\n    public chatService: ChatService,\n    public chatUserService: ChatUsersService\n  ) {\n    this.users = this.chatService.users;\n    this.messages = this.chatService.messages;\n  }\n  ngOnInit(): void {\n\n    this.chatUserService.fetchAllUsers();\n\n\n    this.messages.subscribe((messages) => {\n\n      if (this.canDisplayBadge) {\n\n        const newMessage = messages[messages.length - 1]; // The newly received message\n\n        if (\n          (this.selectedUser &&\n            this.selectedUser.id !== newMessage.fromId &&\n            newMessage.toId === this.chatService.userId) ||\n          (!this.selectedUser && newMessage.toId === this.chatService.userId)\n\n        ) {\n\n          this.unreadMessages[newMessage.fromId] = this.unreadMessages[\n            newMessage.fromId] ? this.unreadMessages[newMessage.fromId] + 1 : 1;\n\n        } else if (\n          this.selectedUser &&\n          this.selectedUser.id === newMessage.fromId\n        ) {\n\n          this.unreadMessages[newMessage.fromId] = 0;\n\n        }\n      } else {\n\n        this.canDisplayBadge = true;\n\n      }\n    });\n  }\n\n  /**\n   *\n   * Sets the selected User.\n   *\n   * @param user The user Object.\n   *\n   */\n  public setSelectedUser(user): void {\n\n    this.selectedUser = user;\n\n    this.unreadMessages[user.id] = '';\n\n  }\n\n  /**\n   *\n   * Returns Unread messages for the selected user.\n   *\n   * @param userEmail Returns unread messages for a user.\n   */\n  public getUnreadMessages(userEmail): any {\n\n    return this.unreadMessages[userEmail];\n\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        List Of Users\n        \n            \n                \n                    \n                    &nbsp;&nbsp;{{user.displayName | titlecase}}\n                    &nbsp;-&nbsp;({{user.status}})\n                \n                {{unreadMessages[user.id]}}\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./chat-users.component.scss\n                \n                .online {\n    color: #5fd85f;\n}\n.offline {\n    color: #c5b9b9;\n}\n.chat-users {\n    text-align: center;\n}\n.chat-users-header {\n    font-family: Courier-New;\n    font-size: 1.1em;\n    font-weight: bold;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            List Of Users                                                                              {{user.displayName | titlecase}}                     - ({{user.status}})                                {{unreadMessages[user.id]}}                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatRoomComponent', 'selector': 'app-chat-room'},{'name': 'ChatUsersComponent', 'selector': 'app-chat-users'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChatUsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChatUsersService.html":{"url":"injectables/ChatUsersService.html","title":"injectable - ChatUsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ChatUsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/chat-users/chat-users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                allUsers\n                            \n                            \n                                    Public\n                                authToken\n                            \n                            \n                                    Private\n                                httpWithoutInterceptor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                fetchAllUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, backend: HttpBackend, oauthService: OAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/chat-users/chat-users.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backend\n                                                  \n                                                        \n                                                                        HttpBackend\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        oauthService\n                                                  \n                                                        \n                                                                        OAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            authenticate\n                        \n                        \n                    \n                \n            \n            \n                \nauthenticate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/chat-users/chat-users.service.ts:36\n                \n            \n\n\n            \n                \n                    Authenticates the logged in user for auth0 management API's.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchAllUsers\n                        \n                        \n                    \n                \n            \n            \n                \nfetchAllUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/chat-users/chat-users.service.ts:65\n                \n            \n\n\n            \n                \n                    Fetches the list of all users available in the idp.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            allUsers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/chat-users/chat-users.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/chat-users/chat-users.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            httpWithoutInterceptor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/chat-users/chat-users.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpBackend, HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { OAuthEvent, OAuthService } from 'angular-oauth2-oidc';\n\nimport { MANAGE_AUTH } from '@constants/auth/manage-auth';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ChatUsersService {\n  public allUsers: any;\n  public authToken: string | undefined;\n\n  private httpWithoutInterceptor: HttpClient;\n\n  constructor(\n    private httpClient: HttpClient,\n    private backend: HttpBackend,\n    private oauthService: OAuthService\n  ) {\n    this.httpWithoutInterceptor = new HttpClient(this.backend);\n\n    this.oauthService.events.subscribe((event: OAuthEvent) => {\n      if (event.type === 'logout') {\n        this.authToken = undefined;\n        localStorage.removeItem('id_token');\n      }\n    });\n  }\n\n  /**\n   *\n   * Authenticates the logged in user for auth0 management API's.\n   *\n   */\n  authenticate(): void {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n\n    this.httpClient\n      .post(\n        MANAGE_AUTH.oauthUrl,\n        {\n          client_id: MANAGE_AUTH.clientID,\n          audience: MANAGE_AUTH.audience,\n          grant_type: MANAGE_AUTH.grantType,\n          client_secret: MANAGE_AUTH.clientSecret,\n        },\n        {\n          headers,\n        }\n      )\n      .subscribe((token: any) => {\n        localStorage.setItem('id_token', token.access_token);\n        this.authToken = token.access_token;\n      });\n  }\n\n  /**\n   *\n   * Fetches the list of all users available in the idp.\n   *\n   */\n  fetchAllUsers(): void {\n    const headers: HttpHeaders = new HttpHeaders({\n      Authorization: `Bearer ${this.authToken}`,\n    });\n\n    this.httpWithoutInterceptor\n      .get(this.oauthService.issuer + 'api/v2/users', {\n        headers,\n      })\n      .subscribe(\n        (data) => (this.allUsers = data),\n        (error) => (this.allUsers = error._body || error)\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfileComponent.html":{"url":"components/UserProfileComponent.html","title":"component - UserProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/user-profile/user-profile.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-profile\n            \n\n            \n                styleUrls\n                ./user-profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/user-profile/user-profile.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.scss'],\n})\nexport class UserProfileComponent {\n  @Input() user: any;\n}\n\n    \n\n    \n        \n    \n    \n        {{user.name | uppercase}}\n    \n\n    \n\n    \n                \n                    ./user-profile.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{user.name | uppercase}}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatRoomComponent', 'selector': 'app-chat-room'},{'name': 'ChatUsersComponent', 'selector': 'app-chat-users'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/chat-room/chat-room.component.ts\n            \n            component\n            ChatRoomComponent\n            \n                20 %\n                (2/10)\n            \n        \n        \n            \n                \n                src/app/components/chat-users/chat-users.component.ts\n            \n            component\n            ChatUsersComponent\n            \n                11 %\n                (2/18)\n            \n        \n        \n            \n                \n                src/app/components/user-profile/user-profile.component.ts\n            \n            component\n            UserProfileComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/constants/auth/manage-auth.ts\n            \n            variable\n            MANAGE_AUTH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/auth/auth-config.ts\n            \n            interface\n            AuthConfig\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            variable\n            authCodeFlowConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/chat-users/chat-users.service.ts\n            \n            injectable\n            ChatUsersService\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/services/chat/chat.service.ts\n            \n            injectable\n            ChatService\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.0.6\n        \n            @angular/common : ~10.0.6\n        \n            @angular/compiler : ~10.0.6\n        \n            @angular/core : ~10.0.6\n        \n            @angular/fire : ^6.0.2\n        \n            @angular/forms : ~10.0.6\n        \n            @angular/localize : ~10.0.6\n        \n            @angular/platform-browser : ~10.0.6\n        \n            @angular/platform-browser-dynamic : ~10.0.6\n        \n            @angular/router : ~10.0.6\n        \n            @fortawesome/angular-fontawesome : ^0.7.0\n        \n            @fortawesome/fontawesome-svg-core : ^1.2.28\n        \n            @fortawesome/free-solid-svg-icons : ^5.13.0\n        \n            @ng-bootstrap/ng-bootstrap : ^7.0.0\n        \n            angular-oauth2-oidc : ^10.0.3\n        \n            bootstrap : ^4.5.0\n        \n            firebase : ^7.13.1\n        \n            rxjs : ~6.5.5\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgMychat\nThis project was generated with Angular CLI version 10.0.5.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChatRoomComponent\n\nChatRoomComponent\n\nAppModule -->\n\nChatRoomComponent->AppModule\n\n\n\n\n\nChatUsersComponent\n\nChatUsersComponent\n\nAppModule -->\n\nChatUsersComponent->AppModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nAppModule -->\n\nUserProfileComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            authCodeFlowConfig   (src/.../auth.service.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            MANAGE_AUTH   (src/.../manage-auth.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/auth/auth.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            authCodeFlowConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  // Url of the Identity Provider\n  issuer: 'https://gchat.au.auth0.com/',\n\n  // URL of the SPA to redirect the user to after login\n  redirectUri: window.location.href,\n\n  // The SPA's id. The SPA is registerd with this id at the auth-server\n  // clientId: 'server.code',\n  clientId: 'Sar8qeC0eCqT2DZ3maD8E3N4pdGB8uL1',\n\n  // Just needed if your auth server demands a secret. In general, this\n  // is a sign that the auth server is not configured with SPAs in mind\n  // and it might not enforce further best practices vital for security\n  // such applications.\n  // dummyClientSecret: 'secret',\n\n  responseType: 'code',\n\n  // set the scope for the permissions the client should request\n  // The first four are defined by OIDC.\n  // Important: Request offline_access to get a refresh token\n  // The api scope is a usecase specific one\n  scope: 'openid profile email offline_access',\n\n  showDebugInformation: true,\n  customQueryParams: {\n    // Your API's name\n    audience: 'https://gchat.au.auth0.com/api/v2/',\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  firebase: {\n    apiKey: 'AIzaSyA5WkUYT4oJKfcKeuaZ3xAc9EigwBBR2Fc',\n    authDomain: 'gchat-project-6a119.firebaseapp.com',\n    databaseURL: 'https://gchat-project-6a119.firebaseio.com',\n    projectId: 'gchat-project-6a119',\n    storageBucket: 'gchat-project-6a119.appspot.com',\n    messagingSenderId: '171697051876',\n    appId: '1:171697051876:web:462ea814b69c258dbdb4f1'\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyA5WkUYT4oJKfcKeuaZ3xAc9EigwBBR2Fc',\n    authDomain: 'gchat-project-6a119.firebaseapp.com',\n    databaseURL: 'https://gchat-project-6a119.firebaseio.com',\n    projectId: 'gchat-project-6a119',\n    storageBucket: 'gchat-project-6a119.appspot.com',\n    messagingSenderId: '171697051876',\n    appId: '1:171697051876:web:462ea814b69c258dbdb4f1'\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/constants/auth/manage-auth.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MANAGE_AUTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  clientID: 'vPaSA7LL0a932iSo5DMQn3B4kNJQKr1J',\n  clientSecret:\n    'TUZyy3x0W80OlanWRdRMJWAJo4DmG1YB7RYoaDxynZx3GLDbcgqRzK_83cDdatKP',\n  fetchUsersUrl: 'https://gchat.au.auth0.com/api/v2/users',\n  oauthUrl: 'https://gchat.au.auth0.com/oauth/token',\n  grantType: 'client_credentials',\n  audience: 'https://gchat.au.auth0.com/api/v2/',\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
