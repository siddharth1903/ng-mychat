var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.612,1,0.831]],["body/components/AppComponent.html",[0,0.842,1,1.253,2,1.494,3,0.417,4,0.348,5,1.196,6,1.196,7,1.196,8,1.196,9,0.348,10,1.683,11,1.196,12,2.485,13,1.851,14,1.494,15,1.736,16,3.603,17,1.736,18,3.06,19,0.417,20,1.12,21,2.126,22,1.931,23,2.026,24,3.603,25,3.603,26,3.603,27,4.2,28,1.293,29,1.683,30,2.05,31,1.234,32,3.06,33,0.89,34,0.057,35,0.984,36,0.924,37,0.89,38,2.108,39,2.108,40,2.635,41,2.635,42,1.494,43,2.108,44,3.603,45,3.603,46,2.108,47,0.89,48,1.736,49,3.06,50,2.108,51,0.924,52,0.492,53,1.404,54,2.039,55,1.196,56,1.404,57,1.683,58,1.404,59,0.89,60,1.404,61,0.417,62,0.284,63,2.108,64,2.401,65,3.06,66,3.06,67,3.06,68,2.445,69,3.06,70,1.494,71,3.06,72,3.06,73,3.06,74,3.06,75,3.954,76,1.142,77,3.06,78,3.954,79,3.06,80,3.06,81,2.445,82,2.108,83,2.108,84,2.108,85,2.108,86,1.683,87,1.404,88,1.404,89,1.404,90,2.108,91,2.108,92,2.108,93,3.06,94,2.108,95,2.108,96,0.89,97,1.736,98,1.494,99,1.196,100,2.243,101,1.196,102,1.196,103,0.668,104,1.736,105,1.196,106,0.668,107,1.196,108,0.668,109,0.772,110,1.196,111,1.196,112,0.022,113,0.032,114,0.022]],["title/modules/AppModule.html",[115,1.487,116,1.487]],["body/modules/AppModule.html",[1,1.596,3,0.48,4,0.4,9,0.4,13,1.025,34,0.057,42,1.185,48,1.376,51,1.212,52,0.567,59,1.025,61,0.48,62,0.327,70,1.185,96,1.025,103,1.454,106,1.454,108,1.454,112,0.025,113,0.036,114,0.025,115,1.376,116,2.916,117,1.185,118,1.376,119,3.111,120,2.808,121,2.702,122,1.617,123,1.938,124,1.938,125,1.938,126,1.938,127,2.241,128,2.702,129,1.938,130,2.426,131,2.702,132,2.702,133,3.383,134,1.938,135,1.376,136,3.895,137,1.938,138,2.426,139,3.383,140,1.938,141,2.426,142,1.938,143,3.383,144,1.938,145,2.426,146,1.185,147,1.376,148,1.185,149,3.383,150,2.426,151,3.383,152,2.426,153,3.383,154,1.938,155,1.938,156,1.617,157,2.426,158,2.426,159,3.383,160,1.938,161,3.383,162,1.617,163,2.426,164,2.426,165,2.426,166,1.617,167,2.426,168,2.426,169,2.426,170,2.426,171,2.426,172,2.426,173,1.617]],["title/classes/AppPage.html",[62,0.353,174,1.747]],["body/classes/AppPage.html",[3,0.7,4,0.584,9,0.584,14,1.729,19,0.7,31,1.183,34,0.056,51,0.827,61,0.7,62,0.477,98,1.729,112,0.037,113,0.046,114,0.037,135,2.009,174,2.888,175,3.541,176,2.828,177,1.831,178,4.881,179,4.881,180,3.541,181,1.831,182,5.095,183,3.541,184,2.828,185,2.116,186,3.541,187,3.541,188,2.828,189,3.541]],["title/modules/AppRoutingModule.html",[115,1.487,127,1.28]],["body/modules/AppRoutingModule.html",[3,0.717,4,0.598,9,0.598,34,0.056,51,1.027,52,0.847,61,0.717,62,0.488,112,0.038,113,0.046,114,0.038,117,1.771,122,2.417,127,2.148,131,3.513,132,3.513,190,3.627,191,3.627,192,4.398,193,3.359,194,2.897,195,2.897,196,3.627,197,1.771,198,2.897,199,3.627,200,3.627,201,3.627,202,3.627]],["title/interfaces/AuthConfig.html",[203,1.487,204,1.28]],["body/interfaces/AuthConfig.html",[3,0.668,4,0.557,9,0.557,19,0.668,20,1.542,34,0.055,36,1.177,47,2.277,61,0.668,112,0.035,113,0.044,114,0.035,203,1.917,204,2.056,205,3.379,206,2.699,207,2.699,208,2.724,209,3.199,210,3.836,211,3.836,212,3.836,213,3.836]],["title/injectables/AuthService.html",[30,1.28,214,0.96]],["body/injectables/AuthService.html",[3,0.365,4,0.304,9,0.304,14,0.901,19,0.365,20,1.016,21,1.926,22,1.628,23,1.83,28,1.172,30,1.355,31,1.217,33,1.172,34,0.057,35,0.91,36,0.779,37,1.172,42,1.355,51,0.866,52,0.431,58,1.23,59,0.78,60,1.23,61,0.549,62,0.248,64,2.648,70,1.355,76,1.372,109,0.676,112,0.019,113,0.029,114,0.019,146,0.901,147,1.047,148,1.355,173,1.23,177,1.172,181,1.764,185,1.355,197,0.901,204,1.355,208,1.047,209,1.848,214,1.016,215,1.047,216,1.23,217,2.782,218,3.334,219,3.707,220,2.961,221,2.216,222,3.975,223,1.845,224,3.335,225,1.83,226,2.774,227,1.845,228,2.774,229,2.774,230,2.961,231,1.845,232,3.707,233,1.941,234,1.845,235,1.848,236,1.848,237,1.845,238,1.845,239,1.845,240,1.845,241,1.23,242,1.23,243,2.216,244,1.474,245,1.474,246,1.474,247,2.216,248,1.474,249,1.474,250,1.474,251,1.474,252,1.848,253,1.474,254,2.221,255,1.474,256,1.474,257,1.474,258,1.474,259,2.216,260,1.474,261,1.474,262,1.474,263,1.474,264,1.474,265,1.474,266,1.23,267,1.474,268,1.474,269,1.474,270,1.474,271,1.474,272,1.474,273,1.474,274,1.474,275,1.23,276,1.848,277,2.663,278,1.474,279,1.474,280,2.216,281,1.474,282,1.474,283,1.23,284,2.216,285,1.474,286,1.23,287,1.474,288,1.474,289,1.474,290,1.474,291,1.474,292,1.848,293,1.474,294,1.474,295,1.23,296,1.474,297,1.23,298,1.845,299,1.845,300,1.845,301,1.845,302,1.845,303,1.845,304,1.845,305,1.845,306,1.474,307,1.845,308,1.845,309,1.845,310,1.845,311,1.845,312,1.845,313,1.845,314,1.474,315,1.845,316,2.774,317,1.474,318,1.845,319,1.845,320,2.774,321,1.845,322,1.474,323,1.845,324,1.845,325,1.845,326,1.845,327,1.845,328,1.845]],["title/components/ChatRoomComponent.html",[0,0.612,103,0.831]],["body/components/ChatRoomComponent.html",[0,0.732,1,0.529,2,1.255,3,0.33,4,0.275,5,0.947,6,0.947,7,0.947,8,0.947,9,0.275,11,0.947,12,2.278,13,1.696,15,1.458,17,1.458,19,0.33,20,0.941,21,2.112,22,1.719,28,0.705,29,1.333,30,1.856,31,1.21,33,1.086,34,0.057,35,0.961,36,0.977,37,1.086,47,1.086,51,0.822,52,0.39,57,1.333,61,0.33,62,0.225,76,1.368,87,2.952,88,1.112,89,1.112,96,0.705,97,1.458,98,1.255,99,0.947,100,1.997,101,0.947,102,0.947,103,1.115,104,2.612,105,0.947,106,0.529,107,0.947,108,0.529,109,0.611,110,0.947,111,0.947,112,0.018,113,0.027,114,0.018,162,3.014,177,1.086,181,1.487,185,0.815,225,1.606,230,2.053,233,1.255,235,1.712,241,1.112,283,1.112,329,3.014,330,1.333,331,3.134,332,3.134,333,2.57,334,3.801,335,2.504,336,2.088,337,2.504,338,2.57,339,2.812,340,1.712,341,2.57,342,1.669,343,2.57,344,1.669,345,2.57,346,2.57,347,3.014,348,1.112,349,2.57,350,1.669,351,2.57,352,2.57,353,2.088,354,1.669,355,1.669,356,2.346,357,0.947,358,1.333,359,1.112,360,1.669,361,1.669,362,3.134,363,1.669,364,1.112,365,2.57,366,2.57,367,2.57,368,2.57,369,2.812,370,2.053,371,2.57,372,2.57,373,2.57,374,2.57,375,3.52,376,3.52,377,3.52,378,3.52,379,3.52,380,3.52,381,1.669,382,1.669,383,1.669,384,2.57,385,1.669,386,1.669,387,1.669,388,1.669,389,1.669,390,2.504,391,2.57,392,1.669,393,1.669,394,2.812,395,1.669,396,1.333,397,1.333,398,0.705,399,1.333,400,1.669,401,1.669,402,1.669,403,1.333,404,1.669,405,1.112,406,1.669,407,1.669,408,1.669,409,1.669]],["title/injectables/ChatService.html",[214,0.96,225,1.107]],["body/injectables/ChatService.html",[3,0.353,4,0.294,9,0.294,14,0.871,19,0.353,20,0.99,21,1.977,28,0.754,31,1.278,33,1.655,34,0.057,35,1.069,36,1.055,37,1.655,47,1.741,51,0.763,52,0.417,61,0.353,62,0.24,76,1.306,109,0.99,112,0.019,113,0.028,114,0.019,144,1.425,177,1.143,181,1.655,185,1.321,197,1.595,214,0.99,215,1.012,217,2.176,221,2.161,225,1.143,233,2.091,235,1.802,252,1.189,276,1.189,292,2.428,297,1.189,314,2.161,317,2.161,336,2.176,339,2.161,347,2.747,348,2.176,353,2.853,357,1.012,358,1.425,359,1.189,364,2.428,398,0.754,405,2.61,410,1.425,411,3.645,412,3.266,413,2.61,414,2.705,415,3.645,416,2.705,417,4.517,418,1.784,419,3.917,420,2.705,421,2.705,422,2.161,423,1.784,424,3.645,425,4.122,426,2.705,427,2.705,428,1.784,429,2.705,430,2.705,431,2.705,432,1.784,433,1.802,434,2.705,435,2.705,436,2.911,437,2.609,438,1.784,439,2.705,440,4.122,441,2.705,442,2.705,443,1.784,444,1.784,445,1.784,446,1.784,447,1.784,448,1.784,449,1.784,450,2.705,451,1.784,452,2.705,453,1.784,454,1.425,455,1.784,456,2.705,457,1.784,458,1.784,459,1.784,460,1.784,461,2.705,462,1.784,463,1.784,464,1.784,465,1.784,466,1.784,467,1.784,468,1.784,469,1.784,470,1.784,471,1.784,472,1.784,473,2.705,474,1.784,475,1.784,476,3.266,477,1.784,478,1.784,479,1.784,480,1.784,481,1.784,482,1.784,483,1.784]],["title/components/ChatUsersComponent.html",[0,0.612,106,0.831]],["body/components/ChatUsersComponent.html",[0,0.665,1,0.455,2,1.116,3,0.284,4,0.237,5,0.815,6,0.815,7,0.815,8,0.815,9,0.237,11,0.815,12,2.139,13,1.593,15,1.297,17,1.297,19,0.284,20,0.837,21,2.153,23,1.496,28,0.966,31,1.303,33,1.202,34,0.057,35,0.967,36,1.052,37,1.202,40,1.896,41,1.896,42,0.701,47,0.966,51,0.827,52,0.336,53,0.957,54,0.957,55,0.815,56,0.957,58,0.957,59,2.048,60,0.957,61,0.284,62,0.193,76,1.426,87,1.896,88,0.957,89,0.957,96,0.607,97,1.297,98,1.116,99,0.815,100,1.84,101,0.815,102,0.815,103,0.455,104,2.51,105,0.815,106,1.028,107,0.815,108,0.455,109,0.526,110,0.815,111,0.815,112,0.015,113,0.024,114,0.015,177,0.966,181,1.671,185,0.701,197,0.701,198,1.826,225,1.787,233,1.584,236,1.523,241,0.957,286,1.896,306,1.826,329,3.207,335,2.273,336,2.635,337,2.591,340,1.523,347,0.957,348,1.523,353,2.359,356,1.523,357,0.815,359,0.957,364,1.523,369,1.148,370,1.826,390,1.148,394,1.148,396,1.148,397,1.148,398,0.607,399,1.148,403,1.826,405,0.957,413,2.818,436,1.148,437,1.148,454,1.148,484,1.148,485,2.286,486,2.846,487,2.846,488,2.286,489,2.273,490,2.846,491,3.541,492,2.846,493,2.846,494,2.846,495,2.286,496,3.244,497,2.286,498,2.846,499,1.437,500,2.286,501,1.437,502,2.286,503,1.437,504,3.244,505,3.244,506,2.286,507,1.437,508,2.286,509,1.437,510,1.437,511,1.826,512,1.437,513,1.437,514,1.437,515,1.437,516,2.846,517,1.437,518,1.437,519,1.437,520,1.437,521,1.437,522,1.437,523,1.437,524,1.437,525,1.437,526,1.437,527,2.286,528,1.437,529,2.273,530,1.437,531,1.437,532,3.244,533,2.286,534,2.846,535,2.286,536,2.846,537,1.437,538,0.957,539,1.437,540,1.437,541,1.826,542,1.437,543,1.437,544,1.437,545,2.286,546,1.437,547,1.437,548,1.437,549,1.437,550,1.437]],["title/injectables/ChatUsersService.html",[23,1.107,214,0.96]],["body/injectables/ChatUsersService.html",[3,0.424,4,0.354,9,0.354,14,1.048,19,0.424,20,1.135,21,1.862,22,1.048,23,1.31,28,1.31,31,1.203,33,0.906,34,0.057,35,0.586,36,0.988,37,0.906,47,1.31,51,0.931,52,0.501,59,1.92,61,0.424,62,0.289,76,0.982,112,0.023,113,0.033,114,0.023,140,1.714,146,1.048,147,1.217,148,1.048,177,1.31,181,1.31,188,1.714,197,1.514,208,1.217,214,1.135,215,1.217,217,2.937,220,1.714,224,3.63,233,1.947,295,2.066,297,1.43,322,1.714,398,1.538,413,2.066,489,2.908,541,2.477,551,3.63,552,1.714,553,3.64,554,3.64,555,3.987,556,3.987,557,2.146,558,4.653,559,3.64,560,3.987,561,3.1,562,2.146,563,3.1,564,3.1,565,3.1,566,3.1,567,2.146,568,3.1,569,2.477,570,3.1,571,2.146,572,3.64,573,2.146,574,3.987,575,3.1,576,1.43,577,2.146,578,3.1,579,2.146,580,2.146,581,2.146,582,3.64,583,2.146,584,3.987,585,2.146,586,2.146,587,2.146,588,2.146,589,2.146,590,2.146,591,2.146,592,2.146,593,2.146,594,2.146,595,2.146,596,2.146,597,3.1,598,2.146,599,2.146,600,2.146,601,2.146,602,2.146,603,3.1,604,3.1,605,3.1,606,2.146]],["title/components/UserProfileComponent.html",[0,0.612,108,0.831]],["body/components/UserProfileComponent.html",[0,1.017,1,0.956,2,1.914,3,0.597,4,0.498,5,1.712,6,1.712,7,1.712,8,1.712,9,0.498,11,1.712,12,2.775,13,2.067,15,2.223,17,2.223,19,0.597,31,0.824,34,0.056,35,1.07,36,0.705,51,0.705,52,0.705,61,0.597,62,0.406,68,3.131,76,1.643,96,1.275,97,2.223,98,1.914,99,1.712,100,2.613,101,1.712,102,1.712,103,0.956,104,2.223,105,1.712,106,0.956,107,1.712,108,1.459,109,1.593,110,1.712,111,1.712,112,0.032,113,0.041,114,0.032,166,2.611,340,2.611,356,2.611,607,3.131,608,2.411,609,4.352,610,3.919,611,3.018,612,3.919]],["title/coverage.html",[613,2.85]],["body/coverage.html",[0,1.078,1,0.961,9,0.5,10,2.424,23,1.282,30,1.481,34,0.056,36,0.709,59,1.661,62,0.408,86,2.424,103,0.961,106,0.961,108,0.961,112,0.032,113,0.041,114,0.032,156,2.62,162,2.021,166,2.021,174,2.021,176,2.424,203,1.721,204,1.481,206,2.424,207,2.424,214,1.597,216,2.62,225,1.282,242,2.021,329,2.62,330,2.424,398,1.282,410,2.424,484,2.424,538,3.433,551,2.424,552,2.424,576,2.021,607,2.424,608,2.424,613,2.424,614,3.034,615,3.034,616,3.034,617,3.034,618,3.034,619,3.034,620,3.034,621,3.034,622,3.034,623,3.034,624,2.424,625,2.424,626,4.899,627,4.899,628,3.034,629,3.034,630,3.034,631,3.034,632,3.034,633,3.034,634,2.424,635,2.424,636,3.141,637,2.424,638,2.424,639,3.034,640,3.034]],["title/dependencies.html",[118,1.787,641,2.194]],["body/dependencies.html",[34,0.057,48,1.89,52,0.778,53,2.22,54,2.22,55,2.368,56,2.22,112,0.035,113,0.044,114,0.035,118,1.89,120,2.781,134,3.334,135,2.368,137,2.662,142,2.662,146,1.627,147,1.89,148,1.627,154,2.662,155,2.662,160,2.662,194,2.662,357,1.89,433,2.22,642,3.332,643,5.195,644,3.332,645,3.332,646,3.332,647,3.332,648,3.332,649,3.332,650,3.332,651,3.332,652,3.332,653,3.332,654,3.332,655,3.332,656,3.332,657,3.332,658,3.332,659,3.332,660,3.332,661,3.332,662,3.332]],["title/index.html",[19,0.434,663,2.194,664,2.194]],["body/index.html",[0,1.041,4,0.523,13,1.34,34,0.042,35,0.866,48,2.858,70,1.549,112,0.033,113,0.042,114,0.033,146,2.175,184,2.534,195,3.559,254,2.696,266,2.113,275,2.113,398,1.34,665,3.172,666,3.232,667,3.172,668,3.172,669,3.172,670,3.172,671,4.848,672,3.172,673,3.172,674,3.172,675,3.172,676,3.172,677,3.172,678,3.172,679,3.172,680,3.172,681,4.455,682,4.455,683,3.172,684,4.848,685,3.172,686,3.172,687,3.172,688,3.172,689,3.172,690,3.172,691,2.534,692,4.046,693,4.046,694,4.693,695,3.172,696,4.046,697,4.046,698,3.172,699,4.693,700,3.172,701,4.455,702,3.172,703,3.172,704,3.172,705,3.172]],["title/modules.html",[117,1.742]],["body/modules.html",[34,0.049,55,2.304,112,0.043,113,0.049,114,0.043,116,2.304,117,1.983,127,1.983,135,2.304,569,3.244,706,4.062,707,4.703,708,4.062]],["title/overview.html",[709,2.85]],["body/overview.html",[1,1.623,2,1.669,34,0.054,62,0.46,70,1.669,96,1.444,103,1.461,106,1.461,108,1.461,112,0.036,113,0.045,114,0.036,115,1.939,116,3.021,117,1.669,118,1.939,119,2.731,120,2.278,121,2.731,122,2.278,123,2.731,124,2.731,125,2.731,126,2.731,127,2.251,128,3.388,129,2.731,203,1.939,215,1.939,529,3.388,538,2.278,709,2.731,710,3.418,711,3.418,712,3.418]],["title/routes.html",[193,2.377]],["body/routes.html",[34,0.05,112,0.044,113,0.05,114,0.044,193,2.792]],["title/miscellaneous/variables.html",[713,1.752,714,2.516]],["body/miscellaneous/variables.html",[19,0.458,22,1.855,31,0.633,34,0.057,35,0.633,36,1.056,40,2.903,41,2.903,42,1.855,64,1.544,76,0.734,81,3.613,109,0.848,112,0.024,113,0.034,114,0.024,148,1.131,156,2.751,173,1.544,204,1.599,208,1.858,209,2.532,210,1.851,211,1.851,212,1.851,213,1.851,216,1.544,236,2.183,242,2.183,243,2.617,244,1.851,245,1.851,246,1.851,247,2.617,248,1.851,249,1.851,250,1.851,251,1.851,252,2.183,253,1.851,254,2.532,255,1.851,256,1.851,257,1.851,258,1.851,259,2.617,260,1.851,261,1.851,262,1.851,263,1.851,264,1.851,265,1.851,266,1.544,267,1.851,268,1.851,269,1.851,270,1.851,271,1.851,272,1.851,273,1.851,274,1.851,275,1.544,276,1.544,277,3.035,278,1.851,279,1.851,280,2.617,281,1.851,282,1.851,283,1.544,284,2.617,285,1.851,286,1.544,287,1.851,288,1.851,289,1.851,290,1.851,291,1.851,292,1.544,293,1.851,294,1.851,295,1.544,296,2.617,422,1.851,433,2.183,511,1.851,576,2.183,624,1.851,625,2.617,634,1.851,635,1.851,636,1.851,637,2.617,638,2.617,666,3.793,691,2.617,713,1.851,714,1.851,715,2.317,716,3.276,717,2.317,718,2.317,719,2.317,720,2.317,721,2.317,722,3.276,723,3.276,724,3.276,725,3.276,726,3.276,727,3.276,728,3.276,729,3.276,730,3.276,731,3.276,732,3.276,733,3.276,734,3.276,735,3.276,736,3.276,737,2.317,738,2.317,739,2.317,740,2.317,741,2.317]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":538,"title":{},"body":{"components/ChatUsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.10.3",{"_index":662,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":393,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["0.7.0",{"_index":649,"title":{},"body":{"dependencies.html":{}}}],["0.7rem",{"_index":402,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["0.9em",{"_index":406,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["0/1",{"_index":627,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":623,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":617,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":628,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":618,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":529,"title":{},"body":{"components/ChatUsersComponent.html":{},"overview.html":{}}}],["1.1em",{"_index":399,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["1.2.28",{"_index":652,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":655,"title":{},"body":{"dependencies.html":{}}}],["10.0.5",{"_index":669,"title":{},"body":{"index.html":{}}}],["10.0.6",{"_index":643,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":621,"title":{},"body":{"coverage.html":{}}}],["171697051876",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1:171697051876:web:462ea814b69c258dbdb4f1",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1px",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["2",{"_index":710,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":660,"title":{},"body":{"dependencies.html":{}}}],["2/10",{"_index":620,"title":{},"body":{"coverage.html":{}}}],["2/18",{"_index":622,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":631,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":619,"title":{},"body":{"coverage.html":{}}}],["28",{"_index":630,"title":{},"body":{"coverage.html":{}}}],["2px",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":712,"title":{},"body":{"overview.html":{}}}],["3/6",{"_index":629,"title":{},"body":{"coverage.html":{}}}],["30px",{"_index":384,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["4",{"_index":711,"title":{},"body":{"overview.html":{}}}],["4.5.0",{"_index":656,"title":{},"body":{"dependencies.html":{}}}],["4/10",{"_index":633,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":632,"title":{},"body":{"coverage.html":{}}}],["4px",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["5.13.0",{"_index":653,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["5fd85f",{"_index":546,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["5px",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["6.0.2",{"_index":646,"title":{},"body":{"dependencies.html":{}}}],["6.5.5",{"_index":658,"title":{},"body":{"dependencies.html":{}}}],["6a119",{"_index":730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6a119.appspot.com",{"_index":732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6a119.firebaseapp.com",{"_index":725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6a119.firebaseio.com",{"_index":728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.0.0",{"_index":654,"title":{},"body":{"dependencies.html":{}}}],["7.13.1",{"_index":657,"title":{},"body":{"dependencies.html":{}}}],["9776",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["accessors",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{}}}],["actual_component",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["address",{"_index":475,"title":{},"body":{"injectables/ChatService.html":{}}}],["adds",{"_index":424,"title":{},"body":{"injectables/ChatService.html":{}}}],["adduserinfo",{"_index":414,"title":{},"body":{"injectables/ChatService.html":{}}}],["adduserinfo(profileobject",{"_index":421,"title":{},"body":{"injectables/ChatService.html":{}}}],["af",{"_index":411,"title":{},"body":{"injectables/ChatService.html":{}}}],["afservice",{"_index":334,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["aizasya5wkuyt4ojkfckeuaz3xac9eigwbbr2fc",{"_index":723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["align",{"_index":548,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["allowedurls",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["allusers",{"_index":489,"title":{},"body":{"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["angular",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/ChatUsersService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":642,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":644,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChatUsersService.html":{}}}],["angular/compiler",{"_index":645,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/fire/auth",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/database",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChatService.html":{}}}],["angular/fire/firestore",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/forms",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":647,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":194,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["angularfireauthmodule",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiredatabase",{"_index":419,"title":{},"body":{"injectables/ChatService.html":{}}}],["angularfiredatabasemodule",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebase",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestoremodule",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["api",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["api's",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatUsersService.html":{},"miscellaneous/variables.html":{}}}],["api/v2/users",{"_index":601,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["apikey",{"_index":722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["app.component",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appid",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/json",{"_index":585,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["applications",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":116,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":174,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":127,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifacts",{"_index":685,"title":{},"body":{"index.html":{}}}],["audience",{"_index":208,"title":{},"body":{"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"injectables/ChatUsersService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatUsersService.html":{},"miscellaneous/variables.html":{}}}],["auth.ts",{"_index":625,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth.userprofile.given_name",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["auth.userprofile.nickname",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["auth0",{"_index":565,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["authcodeflowconfig",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authconfig",{"_index":204,"title":{"interfaces/AuthConfig.html":{}},"body":{"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authdomain",{"_index":724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticate",{"_index":555,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["authenticated",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticates",{"_index":563,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["authorization",{"_index":598,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["authservice",{"_index":30,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"coverage.html":{}}}],["authtoken",{"_index":553,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["automatically",{"_index":676,"title":{},"body":{"index.html":{}}}],["available",{"_index":569,"title":{},"body":{"injectables/ChatUsersService.html":{},"modules.html":{}}}],["b7b8b8",{"_index":404,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["backend",{"_index":559,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["background",{"_index":408,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["bearer",{"_index":599,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["best",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["bold",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["boolean",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{}}}],["bootstrap",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["border",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["browse",{"_index":707,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":186,"title":{},"body":{"classes/AppPage.html":{}}}],["browsermodule",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":684,"title":{},"body":{"index.html":{}}}],["c5b9b9",{"_index":547,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["candisplaybadge",{"_index":490,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["center",{"_index":549,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["change",{"_index":678,"title":{},"body":{"index.html":{}}}],["chat",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["chatbox",{"_index":335,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["chatroomcomponent",{"_index":103,"title":{"components/ChatRoomComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["chatservice",{"_index":225,"title":{"injectables/ChatService.html":{}},"body":{"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"coverage.html":{}}}],["chatuserscomponent",{"_index":106,"title":{"components/ChatUsersComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["chatuserservice",{"_index":491,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["chatusersservice",{"_index":23,"title":{"injectables/ChatUsersService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"coverage.html":{}}}],["check",{"_index":704,"title":{},"body":{"index.html":{}}}],["checkifuserexists",{"_index":415,"title":{},"body":{"injectables/ChatService.html":{}}}],["checks",{"_index":429,"title":{},"body":{"injectables/ChatService.html":{}}}],["circleicon",{"_index":492,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["class",{"_index":62,"title":{"classes/AppPage.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":175,"title":{},"body":{"classes/AppPage.html":{}}}],["cli",{"_index":195,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["client",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["client_credentials",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["client_id",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatUsersService.html":{}}}],["client_secret",{"_index":593,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["clientid",{"_index":209,"title":{},"body":{"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["clientsecret",{"_index":210,"title":{},"body":{"interfaces/AuthConfig.html":{},"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["color",{"_index":403,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["components/chat",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["components/user",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["config.ts",{"_index":207,"title":{},"body":{"interfaces/AuthConfig.html":{},"coverage.html":{}}}],["configured",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["connecting",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["const",{"_index":197,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["constant",{"_index":200,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["constants/auth/manage",{"_index":577,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["constructor",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["constructor(af",{"_index":418,"title":{},"body":{"injectables/ChatService.html":{}}}],["constructor(auth",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{}}}],["constructor(chatservice",{"_index":499,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["constructor(httpclient",{"_index":557,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["constructor(oauthservice",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(public",{"_index":358,"title":{},"body":{"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{}}}],["contact",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["content",{"_index":188,"title":{},"body":{"classes/AppPage.html":{},"injectables/ChatUsersService.html":{}}}],["context",{"_index":637,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["core",{"_index":651,"title":{},"body":{"dependencies.html":{}}}],["courier",{"_index":397,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["coverage",{"_index":613,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["coversation",{"_index":368,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["current",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{}}}],["currentdate",{"_index":476,"title":{},"body":{"injectables/ChatService.html":{}}}],["currentuser",{"_index":498,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["cursive",{"_index":391,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["custom",{"_index":400,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["customqueryparams",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["cuurent",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["data",{"_index":603,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["database",{"_index":425,"title":{},"body":{"injectables/ChatService.html":{}}}],["databaseurl",{"_index":726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date.now",{"_index":478,"title":{},"body":{"injectables/ChatService.html":{}}}],["date:\"dd",{"_index":376,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["declarations",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/ChatUsersComponent.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":201,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["defined",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["demands",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":118,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":348,"title":{},"body":{"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{}}}],["dev",{"_index":673,"title":{},"body":{"index.html":{}}}],["development",{"_index":670,"title":{},"body":{"index.html":{}}}],["directive",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["directives",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":683,"title":{},"body":{"index.html":{}}}],["directory",{"_index":688,"title":{},"body":{"index.html":{}}}],["displayname",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{}}}],["dist",{"_index":687,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":614,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["dummyclientsecret",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":648,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":700,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":176,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":183,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":180,"title":{},"body":{"classes/AppPage.html":{}}}],["e6fbbe",{"_index":409,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["element",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["element(by.css('app",{"_index":187,"title":{},"body":{"classes/AppPage.html":{}}}],["email",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":699,"title":{},"body":{"index.html":{}}}],["enforce",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["enter",{"_index":372,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["environment",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":605,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["error._body",{"_index":606,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["event.type",{"_index":581,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["execute",{"_index":696,"title":{},"body":{"index.html":{}}}],["exists",{"_index":430,"title":{},"body":{"injectables/ChatService.html":{}}}],["export",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{}}}],["exports",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["fadotcircle",{"_index":516,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["faexclamationtriangle",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["false",{"_index":511,"title":{},"body":{"components/ChatUsersComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":390,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["fasigninalt",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["fetchallusers",{"_index":556,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["fetches",{"_index":568,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["fetchusersurl",{"_index":211,"title":{},"body":{"interfaces/AuthConfig.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["files",{"_index":679,"title":{},"body":{"index.html":{}}}],["firebase",{"_index":433,"title":{},"body":{"injectables/ChatService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["first",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["fixed",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["flag",{"_index":690,"title":{},"body":{"index.html":{}}}],["font",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["fontawesome",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["fontawesomemodule",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["formsmodule",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["fortawesome/angular",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":650,"title":{},"body":{"dependencies.html":{}}}],["fortawesome/free",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/ChatUsersComponent.html":{},"dependencies.html":{}}}],["four",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["fromid",{"_index":479,"title":{},"body":{"injectables/ChatService.html":{}}}],["further",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["gchat",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["general",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["generate",{"_index":681,"title":{},"body":{"index.html":{}}}],["generated",{"_index":667,"title":{},"body":{"index.html":{}}}],["get(this.oauthservice.issuer",{"_index":600,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["getting",{"_index":663,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":178,"title":{},"body":{"classes/AppPage.html":{}}}],["getunreadmessages",{"_index":495,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["getunreadmessages(useremail",{"_index":502,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["getuserid",{"_index":446,"title":{},"body":{"injectables/ChatService.html":{}}}],["getuserprofile",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["go",{"_index":703,"title":{},"body":{"index.html":{}}}],["grant_type",{"_index":591,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["granttype",{"_index":212,"title":{},"body":{"interfaces/AuthConfig.html":{},"miscellaneous/variables.html":{}}}],["graph",{"_index":708,"title":{},"body":{"modules.html":{}}}],["header",{"_index":396,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["headers",{"_index":584,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["height",{"_index":385,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["help",{"_index":701,"title":{},"body":{"index.html":{}}}],["hh:mm",{"_index":379,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["html",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["http://localhost:4200",{"_index":675,"title":{},"body":{"index.html":{}}}],["httpbackend",{"_index":560,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["httpclient",{"_index":558,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["httpclient(this.backend",{"_index":579,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["httpclientmodule",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":574,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["https://gchat",{"_index":727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://gchat.au.auth0.com",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["https://gchat.au.auth0.com/api/v2",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["https://gchat.au.auth0.com/api/v2/users",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://gchat.au.auth0.com/oauth/token",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpwithoutinterceptor",{"_index":554,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["icons",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/ChatUsersComponent.html":{},"dependencies.html":{}}}],["id",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":615,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["idp",{"_index":570,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["img",{"_index":381,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["implements",{"_index":485,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["import",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{}}}],["important",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"miscellaneous/variables.html":{}}}],["imports",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["incoming",{"_index":349,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{}}}],["inherit",{"_index":389,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["initializing",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["injectable",{"_index":214,"title":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/ChatUsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/ChatUsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/ChatUsersService.html":{},"overview.html":{}}}],["input",{"_index":356,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["inputs",{"_index":340,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["inserted",{"_index":427,"title":{},"body":{"injectables/ChatService.html":{}}}],["interface",{"_index":203,"title":{"interfaces/AuthConfig.html":{}},"body":{"interfaces/AuthConfig.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":205,"title":{},"body":{"interfaces/AuthConfig.html":{}}}],["isauthenticated",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["ismenucollapsed",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["issenderorreceiver",{"_index":338,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["issenderorreceiver(message",{"_index":343,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["issuer",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["isuserexists",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["karma",{"_index":698,"title":{},"body":{"index.html":{}}}],["key",{"_index":373,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["legend",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["list",{"_index":541,"title":{},"body":{"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["list('users",{"_index":465,"title":{},"body":{"injectables/ChatService.html":{}}}],["list..please",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["literal",{"_index":422,"title":{},"body":{"injectables/ChatService.html":{},"miscellaneous/variables.html":{}}}],["loaddiscoverydocumentandtrylogin",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('id_token",{"_index":583,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["localstorage.setitem('id_token",{"_index":596,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["log",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["logged",{"_index":564,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["loggedinuser",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["loginto",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["logout",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatUsersService.html":{}}}],["logs",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["manage_auth",{"_index":576,"title":{},"body":{"injectables/ChatUsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["manage_auth.audience",{"_index":590,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["manage_auth.clientid",{"_index":589,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["manage_auth.clientsecret",{"_index":594,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["manage_auth.granttype",{"_index":592,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["manage_auth.oauthurl",{"_index":588,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["management",{"_index":566,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["mask",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["masktriangleicon",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["matching",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":347,"title":{},"body":{"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{}}}],["message.fromid",{"_index":367,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["message.message",{"_index":380,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["message.timestamp",{"_index":375,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["message.toid",{"_index":365,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["messages",{"_index":336,"title":{},"body":{"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{}}}],["messages[messages.length",{"_index":528,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["messagingsenderid",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["methods",{"_index":177,"title":{},"body":{"classes/AppPage.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["mind",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":713,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mmm",{"_index":377,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["module",{"_index":115,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":117,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":702,"title":{},"body":{"index.html":{}}}],["mute",{"_index":401,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["mychat",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["name",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["navigate",{"_index":674,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":179,"title":{},"body":{"classes/AppPage.html":{}}}],["nbsp",{"_index":543,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["nbsp;&nbsp;{{user.displayname",{"_index":542,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["nbsp;({{user.status",{"_index":544,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["needed",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["new",{"_index":398,"title":{},"body":{"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"coverage.html":{},"index.html":{}}}],["newly",{"_index":530,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["newmessage",{"_index":337,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["newmessage.fromid",{"_index":534,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["newmessage.toid",{"_index":535,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["ng",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngbmodule",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngmychat",{"_index":665,"title":{},"body":{"index.html":{}}}],["ngoninit",{"_index":496,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["number",{"_index":477,"title":{},"body":{"injectables/ChatService.html":{}}}],["oauth2",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/ChatUsersService.html":{},"dependencies.html":{}}}],["oauthevent",{"_index":575,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["oauthmodule",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["oauthmodule.forroot",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["oauthservice",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatUsersService.html":{}}}],["oauthurl",{"_index":213,"title":{},"body":{"interfaces/AuthConfig.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatUsersComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":353,"title":{},"body":{"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{}}}],["observable((observer",{"_index":463,"title":{},"body":{"injectables/ChatService.html":{}}}],["observer.complete",{"_index":469,"title":{},"body":{"injectables/ChatService.html":{}}}],["observer.next(snapshot.exists",{"_index":468,"title":{},"body":{"injectables/ChatService.html":{}}}],["offline",{"_index":437,"title":{},"body":{"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{}}}],["offline_access",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["oidc",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/ChatUsersService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["one",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["oninit",{"_index":486,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["online",{"_index":436,"title":{},"body":{"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{}}}],["online/offline",{"_index":442,"title":{},"body":{"injectables/ChatService.html":{}}}],["opacity",{"_index":392,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["openid",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["out",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":709,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":641,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["param",{"_index":364,"title":{},"body":{"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{}}}],["parameters",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["permissions",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["picture",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{}}}],["placeholder",{"_index":387,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["please",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["position",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["post",{"_index":587,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["practices",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["press",{"_index":371,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["private",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/ChatUsersService.html":{}}}],["prod",{"_index":689,"title":{},"body":{"index.html":{}}}],["production",{"_index":691,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["profile..please",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["profile.component",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["profile.component.html",{"_index":610,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.scss",{"_index":609,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts",{"_index":608,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:9",{"_index":611,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile/user",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profileobject",{"_index":426,"title":{},"body":{"injectables/ChatService.html":{}}}],["profileobject.displayname",{"_index":472,"title":{},"body":{"injectables/ChatService.html":{}}}],["profileobject.email",{"_index":471,"title":{},"body":{"injectables/ChatService.html":{}}}],["profileobject.picture",{"_index":474,"title":{},"body":{"injectables/ChatService.html":{}}}],["project",{"_index":666,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["projectid",{"_index":729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":182,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["protractor",{"_index":184,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["providedin",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/ChatUsersService.html":{}}}],["provider",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["query.once('value",{"_index":467,"title":{},"body":{"injectables/ChatService.html":{}}}],["readme",{"_index":705,"title":{},"body":{"index.html":{}}}],["realtime",{"_index":434,"title":{},"body":{"injectables/ChatService.html":{}}}],["received",{"_index":531,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["receiver",{"_index":407,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["recepient",{"_index":346,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["redirect",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["redirecturi",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["ref",{"_index":452,"title":{},"body":{"injectables/ChatService.html":{}}}],["ref.orderbychild('id').equalto(this.userid",{"_index":466,"title":{},"body":{"injectables/ChatService.html":{}}}],["ref.orderbychild('sorttime')).valuechanges",{"_index":453,"title":{},"body":{"injectables/ChatService.html":{}}}],["refresh",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["registerd",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["reload",{"_index":677,"title":{},"body":{"index.html":{}}}],["request",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["require",{"_index":638,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resourceserver",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["responsetype",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["result",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":185,"title":{},"body":{"classes/AppPage.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{}}}],["returns",{"_index":181,"title":{},"body":{"classes/AppPage.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["returnto",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["room",{"_index":331,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room'},{'name",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["room.component",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["room.component.html",{"_index":333,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room.component.scss",{"_index":332,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room.component.ts",{"_index":330,"title":{},"body":{"components/ChatRoomComponent.html":{},"coverage.html":{}}}],["room.component.ts:14",{"_index":342,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room.component.ts:15",{"_index":355,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room.component.ts:16",{"_index":354,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room.component.ts:17",{"_index":341,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room.component.ts:18",{"_index":352,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room.component.ts:27",{"_index":350,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room.component.ts:41",{"_index":344,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room/chat",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"components/ChatRoomComponent.html":{},"coverage.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/ChatUsersService.html":{}}}],["root'},{'name",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["router",{"_index":196,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule",{"_index":192,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":202,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":193,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"routes.html":{}}}],["routing.module",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":191,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":671,"title":{},"body":{"index.html":{}}}],["running",{"_index":692,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":357,"title":{},"body":{"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"dependencies.html":{}}}],["sar8qec0ecqt2dz3mad8e3n4pdgb8ul1",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["scaffolding",{"_index":680,"title":{},"body":{"index.html":{}}}],["scope",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["secret",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["security",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":505,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["selecteduser",{"_index":493,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["send",{"_index":374,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["sendaccesstoken",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["sender",{"_index":345,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["sendmessage",{"_index":339,"title":{},"body":{"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{}}}],["sendmessage(text",{"_index":431,"title":{},"body":{"injectables/ChatService.html":{}}}],["sends",{"_index":351,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["serve",{"_index":672,"title":{},"body":{"index.html":{}}}],["server",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["server.code",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["services/auth/auth.service",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{}}}],["services/chat",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatUsersComponent.html":{}}}],["services/chat/chat.service",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["set",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"miscellaneous/variables.html":{}}}],["sets",{"_index":198,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChatUsersComponent.html":{}}}],["setselecteduser",{"_index":497,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["setselecteduser(user",{"_index":508,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["setuserid(userid",{"_index":448,"title":{},"body":{"injectables/ChatService.html":{}}}],["setuserprofile(userprofile",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["showdebuginformation",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["sign",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["signinicon",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["size",{"_index":394,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["small",{"_index":395,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["snapshot",{"_index":461,"title":{},"body":{"injectables/ChatService.html":{}}}],["snapshot.ref.update",{"_index":462,"title":{},"body":{"injectables/ChatService.html":{}}}],["solid",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/ChatUsersComponent.html":{},"dependencies.html":{}}}],["sorttime",{"_index":482,"title":{},"body":{"injectables/ChatService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["spa",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["spa's",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["span')).gettext",{"_index":189,"title":{},"body":{"classes/AppPage.html":{}}}],["spas",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["spec\\.ts",{"_index":721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["src/.../auth.service.ts",{"_index":715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../manage",{"_index":719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":190,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:17",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/chat",{"_index":329,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"coverage.html":{}}}],["src/app/components/user",{"_index":607,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["src/app/constants/auth/manage",{"_index":624,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/models/auth/auth",{"_index":206,"title":{},"body":{"interfaces/AuthConfig.html":{},"coverage.html":{}}}],["src/app/services/auth/auth.service.ts",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/auth/auth.service.ts:116",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:125",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:43",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:86",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:90",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:99",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/chat",{"_index":551,"title":{},"body":{"injectables/ChatUsersService.html":{},"coverage.html":{}}}],["src/app/services/chat/chat.service.ts",{"_index":410,"title":{},"body":{"injectables/ChatService.html":{},"coverage.html":{}}}],["src/app/services/chat/chat.service.ts:10",{"_index":445,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat/chat.service.ts:101",{"_index":432,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat/chat.service.ts:13",{"_index":420,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat/chat.service.ts:15",{"_index":443,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat/chat.service.ts:20",{"_index":447,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat/chat.service.ts:24",{"_index":449,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat/chat.service.ts:36",{"_index":438,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat/chat.service.ts:54",{"_index":428,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat/chat.service.ts:77",{"_index":423,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat/chat.service.ts:9",{"_index":444,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/environments/environment.prod.ts",{"_index":634,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":635,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":636,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["started",{"_index":664,"title":{"index.html":{}},"body":{}}],["statements",{"_index":616,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":440,"title":{},"body":{"injectables/ChatService.html":{}}}],["storagebucket",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stored",{"_index":686,"title":{},"body":{"index.html":{}}}],["string",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthConfig.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["style",{"_index":388,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["subscribe",{"_index":602,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["subscribe((token",{"_index":595,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["subscriber",{"_index":450,"title":{},"body":{"injectables/ChatService.html":{}}}],["such",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":706,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/ChatUsersComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["table",{"_index":640,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":639,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["test",{"_index":695,"title":{},"body":{"index.html":{}}}],["tests",{"_index":694,"title":{},"body":{"index.html":{}}}],["text",{"_index":405,"title":{},"body":{"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{}}}],["then((value",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.af",{"_index":464,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.af.database.ref('users').orderbychild('id').equalto(this.userid",{"_index":459,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.af.list('messages",{"_index":451,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.af.list('messages').push(message",{"_index":483,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.af.list('users').push",{"_index":470,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.af.list('users').valuechanges",{"_index":455,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.afservice.messages",{"_index":360,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["this.afservice.sendmessage(this.user.chatmessage",{"_index":361,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["this.afservice.userid",{"_index":366,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["this.allusers",{"_index":604,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["this.authtoken",{"_index":582,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["this.candisplaybadge",{"_index":527,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["this.chatservice.adduserinfo",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.chatservice.checkifuserexists().subscribe((isuserexists",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.chatservice.messages",{"_index":524,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["this.chatservice.updateuserstatus('offline",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.chatservice.updateuserstatus('online",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.chatservice.userid",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatUsersComponent.html":{}}}],["this.chatservice.users",{"_index":523,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["this.chatuserservice.fetchallusers",{"_index":525,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["this.chatusersservice.authenticate",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient",{"_index":586,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["this.httpwithoutinterceptor",{"_index":578,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["this.isauthenticated",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedinuser",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.messages",{"_index":359,"title":{},"body":{"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{}}}],["this.messages.subscribe((messages",{"_index":526,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["this.oauthservice",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.oauthservice.clientid",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.oauthservice.configure(authcodeflowconfig",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.oauthservice.events.subscribe((event",{"_index":580,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["this.oauthservice.getidentityclaims",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.oauthservice.hasvalidaccesstoken",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.oauthservice.initcodeflow",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.oauthservice.redirecturi",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.oauthservice.revoketokenandlogout",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.oauthservice.setstorage(localstorage",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.oauthservice.setupautomaticsilentrefresh",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.selecteduser",{"_index":532,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["this.selecteduser.id",{"_index":533,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["this.unreadmessages",{"_index":537,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["this.unreadmessages[newmessage.fromid",{"_index":536,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["this.unreadmessages[user.id",{"_index":539,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["this.unreadmessages[useremail",{"_index":540,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["this.user.chatmessage",{"_index":363,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["this.user.id",{"_index":362,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["this.userid",{"_index":473,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.useridentifier",{"_index":456,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.userprofile",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userprofile.email",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userprofile.name",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userprofile.picture",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userprofile.sub",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.users",{"_index":454,"title":{},"body":{"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{}}}],["thumb",{"_index":382,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["timestamp",{"_index":481,"title":{},"body":{"injectables/ChatService.html":{}}}],["title",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["titlecase",{"_index":370,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["toid",{"_index":480,"title":{},"body":{"injectables/ChatService.html":{}}}],["token",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatUsersComponent.html":{},"miscellaneous/variables.html":{}}}],["token.access_token",{"_index":597,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["top",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["true",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/ChatUsersComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":659,"title":{},"body":{"dependencies.html":{}}}],["tuzyy3x0w80olanwrdrmjwajo4dmg1yb7ryoadxynzx3gldbcgqrzk_83cddatkp",{"_index":738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":572,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["unit",{"_index":693,"title":{},"body":{"index.html":{}}}],["unread",{"_index":504,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["unreadmessages",{"_index":494,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["unreadmessages[user.id",{"_index":545,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["up",{"_index":199,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["updates",{"_index":439,"title":{},"body":{"injectables/ChatService.html":{}}}],["updateuserstatus",{"_index":416,"title":{},"body":{"injectables/ChatService.html":{}}}],["updateuserstatus(status",{"_index":435,"title":{},"body":{"injectables/ChatService.html":{}}}],["uppercase",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/UserProfileComponent.html":{}}}],["url",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":682,"title":{},"body":{"index.html":{}}}],["usecase",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["user.displayname",{"_index":369,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["user.name",{"_index":612,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user.status",{"_index":550,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["useremail",{"_index":506,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["userid",{"_index":417,"title":{},"body":{"injectables/ChatService.html":{}}}],["userid(userid",{"_index":457,"title":{},"body":{"injectables/ChatService.html":{}}}],["useridentifier",{"_index":412,"title":{},"body":{"injectables/ChatService.html":{}}}],["userprofile",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["userprofile(userprofile",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["userprofilecomponent",{"_index":108,"title":{"components/UserProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userquery",{"_index":458,"title":{},"body":{"injectables/ChatService.html":{}}}],["userquery.once('child_added",{"_index":460,"title":{},"body":{"injectables/ChatService.html":{}}}],["users",{"_index":413,"title":{},"body":{"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["users'},{'name",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["users.component",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["users.component.html",{"_index":488,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.scss",{"_index":487,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts",{"_index":484,"title":{},"body":{"components/ChatUsersComponent.html":{},"coverage.html":{}}}],["users.component.ts:16",{"_index":501,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:17",{"_index":510,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:18",{"_index":520,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:19",{"_index":512,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:20",{"_index":519,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:21",{"_index":521,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:22",{"_index":522,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:23",{"_index":518,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:24",{"_index":513,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:25",{"_index":517,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:27",{"_index":500,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:30",{"_index":514,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:31",{"_index":515,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:36",{"_index":507,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:81",{"_index":509,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:95",{"_index":503,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.service",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatUsersComponent.html":{}}}],["users.service.ts",{"_index":552,"title":{},"body":{"injectables/ChatUsersService.html":{},"coverage.html":{}}}],["users.service.ts:11",{"_index":571,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["users.service.ts:12",{"_index":573,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["users.service.ts:14",{"_index":561,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["users.service.ts:36",{"_index":562,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["users.service.ts:65",{"_index":567,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["users/chat",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"coverage.html":{}}}],["value",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/ChatUsersComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["variable",{"_index":626,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":714,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":668,"title":{},"body":{"index.html":{}}}],["via",{"_index":697,"title":{},"body":{"index.html":{}}}],["visibility",{"_index":441,"title":{},"body":{"injectables/ChatService.html":{}}}],["vital",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["vpasa7ll0a932iso5dmqn3b4knjqkr1j",{"_index":737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wait",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["webkit",{"_index":386,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["weight",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["welcome",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["width",{"_index":383,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["window.location.href",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["yy",{"_index":378,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["zone.js",{"_index":661,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                    Public\n                                chatUsersService\n                            \n                            \n                                    Public\n                                isMenuCollapsed\n                            \n                            \n                                    Public\n                                maskTriangleIcon\n                            \n                            \n                                    Public\n                                signInIcon\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, chatUsersService: ChatUsersService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chatUsersService\n                                                  \n                                                        \n                                                                        ChatUsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            chatUsersService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChatUsersService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isMenuCollapsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            maskTriangleIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : faExclamationTriangle\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            signInIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : faSignInAlt\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ng-mychat'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport {\n  faExclamationTriangle,\n  faSignInAlt,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { AuthService } from './services/auth/auth.service';\nimport { ChatUsersService } from './services/chat-users/chat-users.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'ng-mychat';\n  public isMenuCollapsed = true;\n\n  public signInIcon = faSignInAlt;\n  public maskTriangleIcon = faExclamationTriangle;\n\n  constructor(\n    public auth: AuthService,\n    public chatUsersService: ChatUsersService\n  ) { }\n}\n\n    \n\n    \n        \n  {{title}}\n\n  \n  \n    &#9776;\n  \n\n  \n  \n    \n    \n      \n        \n        \n          \n          Login\n        \n      \n      \n\n        \n          Welcome, {{ (auth.userProfile.given_name || auth.userProfile.nickname) | uppercase}}!!\n        \n        Log Out\n      \n    \n  \n\n\n  \n    \n      \n      Please loginto start\n      connecting !!\n    \n  \n  \n    \n      Initializing user profile..Please wait\n    \n    \n      Initializing Contact List..Please wait\n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .gchat-mask {\n    position: fixed;\n    top: 50%;\n    font-weight: bold;\n    border: 2px solid;\n}\n.gchat-login {\n    padding: 1px 5px 4px 1px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{title}}        ☰                                                        Login                                      Welcome, {{ (auth.userProfile.given_name || auth.userProfile.nickname) | uppercase}}!!                Log Out                              Please loginto start      connecting !!                  Initializing user profile..Please wait              Initializing Contact List..Please wait      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatRoomComponent', 'selector': 'app-chat-room'},{'name': 'ChatUsersComponent', 'selector': 'app-chat-users'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChatRoomComponent\n\nChatRoomComponent\n\nAppModule -->\n\nChatRoomComponent->AppModule\n\n\n\n\n\nChatUsersComponent\n\nChatUsersComponent\n\nAppModule -->\n\nChatUsersComponent->AppModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nAppModule -->\n\nUserProfileComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ChatRoomComponent\n                        \n                        \n                            ChatUsersComponent\n                        \n                        \n                            UserProfileComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AppComponent } from './app.component';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { OAuthModule } from 'angular-oauth2-oidc';\n\nimport { AngularFireAuthModule } from '@angular/fire/auth';\n\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { environment } from '../environments/environment';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { FormsModule } from '@angular/forms';\n\nimport { ChatRoomComponent } from '@components/chat-room/chat-room.component';\nimport { ChatUsersComponent } from '@components/chat-users/chat-users.component';\nimport { UserProfileComponent } from '@components/user-profile/user-profile.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserProfileComponent,\n    ChatUsersComponent,\n    ChatRoomComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    NgbModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule,\n    AngularFireAuthModule,\n    AngularFireDatabaseModule,\n    HttpClientModule,\n    OAuthModule.forRoot({\n      resourceServer: {\n        sendAccessToken: true,\n        allowedUrls: ['https://gchat.au.auth0.com']\n      }\n    }),\n    FontAwesomeModule,\n    NgbModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router'; // CLI imports router\n\nconst routes: Routes = []; // sets up routes constant where you define your routes\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthConfig.html":{"url":"interfaces/AuthConfig.html","title":"interface - AuthConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/auth/auth-config.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        audience\n                                \n                                \n                                        clientID\n                                \n                                \n                                        clientSecret\n                                \n                                \n                                        fetchUsersUrl\n                                \n                                \n                                        grantType\n                                \n                                \n                                        oauthUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        audience\n                                    \n                                \n                                \n                                    \n                                        audience:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientID\n                                    \n                                \n                                \n                                    \n                                        clientID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientSecret\n                                    \n                                \n                                \n                                    \n                                        clientSecret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fetchUsersUrl\n                                    \n                                \n                                \n                                    \n                                        fetchUsersUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        grantType\n                                    \n                                \n                                \n                                    \n                                        grantType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        oauthUrl\n                                    \n                                \n                                \n                                    \n                                        oauthUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AuthConfig {\n  clientID: string;\n  clientSecret: string;\n  fetchUsersUrl: string;\n  oauthUrl: string;\n  grantType: string;\n  audience: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loggedInUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAuthenticated\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userProfile\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(oauthService: OAuthService, chatUsersService: ChatUsersService, chatService: ChatService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth/auth.service.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        oauthService\n                                                  \n                                                        \n                                                                        OAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chatUsersService\n                                                  \n                                                        \n                                                                        ChatUsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chatService\n                                                  \n                                                        \n                                                                        ChatService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isAuthenticated\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isAuthenticated()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:125\n                \n            \n\n\n            \n                \n                    Returns if the cuurent user is authenticated.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:116\n                \n            \n\n\n            \n                \n                    Logs a user in.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:99\n                \n            \n\n\n            \n                \n                    Logs the current user out.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loggedInUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth.service.ts:43\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userProfile\n                    \n                \n\n                \n                    \n                        getuserProfile()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/auth/auth.service.ts:90\n                                \n                            \n\n                \n                    \n                        setuserProfile(userProfile: any)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/auth/auth.service.ts:86\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            userProfile\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AuthConfig, OAuthService } from 'angular-oauth2-oidc';\n\nimport { ChatUsersService } from '@services/chat-users/chat-users.service';\nimport { ChatService } from '@services/chat/chat.service';\n\nexport const authCodeFlowConfig: AuthConfig = {\n  // Url of the Identity Provider\n  issuer: 'https://gchat.au.auth0.com/',\n\n  // URL of the SPA to redirect the user to after login\n  redirectUri: window.location.href,\n\n  // The SPA's id. The SPA is registerd with this id at the auth-server\n  // clientId: 'server.code',\n  clientId: 'Sar8qeC0eCqT2DZ3maD8E3N4pdGB8uL1',\n\n  // Just needed if your auth server demands a secret. In general, this\n  // is a sign that the auth server is not configured with SPAs in mind\n  // and it might not enforce further best practices vital for security\n  // such applications.\n  // dummyClientSecret: 'secret',\n\n  responseType: 'code',\n\n  // set the scope for the permissions the client should request\n  // The first four are defined by OIDC.\n  // Important: Request offline_access to get a refresh token\n  // The api scope is a usecase specific one\n  scope: 'openid profile email offline_access',\n\n  showDebugInformation: true,\n  customQueryParams: {\n    // Your API's name\n    audience: 'https://gchat.au.auth0.com/api/v2/',\n  },\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private loggedInUser: object;\n\n  constructor(\n    private oauthService: OAuthService,\n    private chatUsersService: ChatUsersService,\n    private chatService: ChatService\n  ) {\n    this.oauthService.configure(authCodeFlowConfig);\n\n    this.oauthService.setStorage(localStorage);\n\n    this.oauthService\n      .loadDiscoveryDocumentAndTryLogin()\n      .then((value: boolean) => {\n        if (this.isAuthenticated()) {\n          this.userProfile = this.oauthService.getIdentityClaims();\n\n          this.chatService.userId = this.userProfile.sub;\n\n          this.chatUsersService.authenticate();\n\n          this.chatService.checkIfUserExists().subscribe((isUserExists: boolean) => {\n\n            if (isUserExists) {\n\n              this.chatService.updateUserStatus('online');\n\n            } else {\n\n              this.chatService.addUserInfo({\n                email: this.userProfile.email,\n                displayName: this.userProfile.name,\n                ... this.userProfile.picture ? { picture: this.userProfile.picture } : {}\n              });\n\n            }\n          });\n\n        }\n      });\n    this.oauthService.setupAutomaticSilentRefresh();\n  }\n\n  set userProfile(userProfile: any) {\n    this.loggedInUser = userProfile;\n  }\n\n  get userProfile(): any {\n    return this.loggedInUser;\n  }\n\n  /**\n   *\n   * Logs the current user out.\n   *\n   */\n  public logout(): void {\n    this.oauthService.revokeTokenAndLogout(\n      {\n        client_id: this.oauthService.clientId,\n        returnTo: this.oauthService.redirectUri,\n      },\n      true\n    );\n\n    this.chatService.updateUserStatus('offline');\n  }\n\n  /**\n   *\n   * Logs a user in.\n   *\n   */\n  public login(): void {\n    this.oauthService.initCodeFlow();\n  }\n\n  /**\n   *\n   * Returns if the cuurent user is authenticated.\n   *\n   */\n  public isAuthenticated(): boolean {\n    return this.oauthService.hasValidAccessToken();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatRoomComponent.html":{"url":"components/ChatRoomComponent.html","title":"component - ChatRoomComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChatRoomComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/chat-room/chat-room.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chat-room\n            \n\n            \n                styleUrls\n                ./chat-room.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./chat-room.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                afService\n                            \n                            \n                                    Public\n                                auth\n                            \n                            \n                                    Public\n                                chatbox\n                            \n                            \n                                    Public\n                                messages\n                            \n                            \n                                    Public\n                                newMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isSenderOrReceiver\n                            \n                            \n                                    Public\n                                sendMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, afService: ChatService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/chat-room/chat-room.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        afService\n                                                  \n                                                        \n                                                                        ChatService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/chat-room/chat-room.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isSenderOrReceiver\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isSenderOrReceiver(message)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat-room/chat-room.component.ts:41\n                \n            \n\n\n            \n                \n                    Returns if the current user is either a sender or a recepient of the message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The incoming message\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            sendMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat-room/chat-room.component.ts:27\n                \n            \n\n\n            \n                \n                    Sends a message to a user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            afService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChatService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-room/chat-room.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-room/chat-room.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            chatbox\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-room/chat-room.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            messages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-room/chat-room.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            newMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-room/chat-room.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { AuthService } from '@services/auth/auth.service';\nimport { ChatService } from '@services/chat/chat.service';\n\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-chat-room',\n  templateUrl: './chat-room.component.html',\n  styleUrls: ['./chat-room.component.scss'],\n})\nexport class ChatRoomComponent {\n  @Input() user: any;\n  public newMessage: string;\n  public messages: Observable;\n  public chatbox: any;\n  constructor(public auth: AuthService, public afService: ChatService) {\n    this.messages = this.afService.messages;\n  }\n\n  /**\n   *\n   * Sends a message to a user.\n   *\n   */\n  public sendMessage(): void {\n\n    this.afService.sendMessage(this.user.chatmessage, this.user.id);\n\n    this.user.chatmessage = '';\n  }\n\n  /**\n   *\n   * Returns if the current user is either a sender or a recepient of the message.\n   *\n   * @param message The incoming message\n   *\n   */\n  public isSenderOrReceiver(message): boolean {\n    return (\n      (message.toId === this.afService.userId &&\n        message.fromId === this.user.id) ||\n      (message.fromId === this.afService.userId && message.toId === this.user.id)\n    );\n  }\n}\n\n    \n\n    \n        Your Coversation with {{user.displayName | titlecase}}\n\n    \n    Press enter key to send your message\n\n\n    \n        \n\n            \n                {{message.timestamp | date:\"dd-MMM-yy hh:mm a\"}}\n                \n                \n                    \n                        \n                        {{message.message}}\n                    \n                \n            \n\n            \n                \n                    \n                        \n                            \n                        \n                        {{message.message}}\n                    \n                \n                {{message.timestamp | date:\"dd-MMM-yy hh:mm a\"}}\n                \n\n            \n\n        \n    \n\n\n\n    {{ user.displayName }}\n\n    \n\n    \n                \n                    ./chat-room.component.scss\n                \n                .img-thumb-you {\n    width: 30px;\n    height: 30px;\n}\ninput::-webkit-input-placeholder {\n    font-style: inherit;\n    font-family: cursive;\n    opacity: 0.5;\n    font-size: small;\n}\n.room-header {\n    font-family: Courier-New;\n    font-size: 1.1em;\n    font-weight: bold;\n}\n.custom-mute {\n    font-size: 0.7rem;\n    color: #b7b8b8 !important;\n}\n.chat-text {\n    font-size: 0.9em;\n    font-family: cursive;\n}\n.chat-receiver {\n    background: #e6fbbe;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Your Coversation with {{user.displayName | titlecase}}        Press enter key to send your message                                        {{message.timestamp | date:\"dd-MMM-yy hh:mm a\"}}                                                                                                    {{message.message}}                                                                                                                                                                                                    {{message.message}}                                                    {{message.timestamp | date:\"dd-MMM-yy hh:mm a\"}}                                            {{ user.displayName }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatRoomComponent', 'selector': 'app-chat-room'},{'name': 'ChatUsersComponent', 'selector': 'app-chat-users'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChatRoomComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChatService.html":{"url":"injectables/ChatService.html","title":"injectable - ChatService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ChatService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/chat/chat.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                af\n                            \n                            \n                                    Public\n                                messages\n                            \n                            \n                                    Private\n                                userIdentifier\n                            \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUserInfo\n                            \n                            \n                                    Public\n                                checkIfUserExists\n                            \n                            \n                                sendMessage\n                            \n                            \n                                updateUserStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userId\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(af: AngularFireDatabase)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/chat/chat.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        af\n                                                  \n                                                        \n                                                                    AngularFireDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addUserInfo\n                        \n                        \n                    \n                \n            \n            \n                \naddUserInfo(profileObject: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/chat/chat.service.ts:77\n                \n            \n\n\n            \n                \n                    Adds users into the database.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    profileObject\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The user profile to be inserted.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            checkIfUserExists\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfUserExists()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/chat/chat.service.ts:54\n                \n            \n\n\n            \n                \n                    Checks if user exists in the database\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsendMessage(text, userId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/chat/chat.service.ts:101\n                \n            \n\n\n            \n                \n                    Adds a message to the Firebase Realtime Database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the  text message.\n\n                                    \n                                \n                                \n                                    userId\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateUserStatus\n                        \n                        \n                    \n                \n            \n            \n                \nupdateUserStatus(status: \"online\" | \"offline\")\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/chat/chat.service.ts:36\n                \n            \n\n\n            \n                \n                    Updates current User Status visibility\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                            \"online\" | \"offline\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        online/offline\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            af\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AngularFireDatabase\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/chat/chat.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            messages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/chat/chat.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userIdentifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/chat/chat.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/chat/chat.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n\n                \n                    \n                        getuserId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/chat/chat.service.ts:20\n                                \n                            \n\n                \n                    \n                        setuserId(userId)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/chat/chat.service.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            userId\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { Observable, Subscriber } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ChatService {\n  public messages: Observable;\n  public users: Observable;\n\n\n  private userIdentifier: string;\n\n  constructor(public af: AngularFireDatabase) {\n    this.messages = this.af.list('messages', (ref) => ref.orderByChild('sortTime')).valueChanges();\n    this.users = this.af.list('users').valueChanges();\n  }\n\n  get userId(): string {\n    return this.userIdentifier;\n  }\n\n  set userId(userId) {\n    this.userIdentifier = userId;\n  }\n\n\n  /**\n   *\n   * Updates current User Status visibility\n   *\n   * @param status online/offline\n   *\n   */\n  updateUserStatus(status: 'online' | 'offline'): void {\n\n    const userQuery = this.af.database.ref('users').orderByChild('id').equalTo(this.userId);\n\n    userQuery.once('child_added', (snapshot) => {\n      snapshot.ref.update({\n        status\n      });\n    });\n\n  }\n\n  /**\n   *\n   * Checks if user exists in the database\n   *\n   *\n   */\n  public checkIfUserExists(): Observable {\n\n    return new Observable((observer: Subscriber) => {\n\n      this.af\n        .list('users', (ref) => ref.orderByChild('id').equalTo(this.userId))\n        .query.once('value', (snapshot) => {\n\n          observer.next(snapshot.exists());\n          observer.complete();\n        });\n\n    });\n\n  }\n\n  /**\n   *\n   * Adds users into the database.\n   *\n   * @param profileObject The user profile to be inserted.\n   *\n   */\n  addUserInfo(profileObject: {\n    email: string;\n    displayName: string;\n    picture?: string;\n  }): void {\n\n    this.af.list('users').push({\n      email: profileObject.email,\n      displayName: profileObject.displayName,\n      status: 'online',\n      id: this.userId,\n      picture: profileObject.picture || ''\n    });\n\n  }\n\n  /**\n   *\n   * Adds a message to the Firebase Realtime Database\n   *\n   * @param text the  text message.\n   * @param email the email address.\n   *\n   */\n  sendMessage(text, userId): void {\n\n    const currentDate: number = Date.now();\n\n    const message = {\n      fromId: this.userId,\n      message: text,\n      toId: userId,\n      timestamp: currentDate,\n      sortTime: -currentDate\n    };\n    this.af.list('messages').push(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatUsersComponent.html":{"url":"components/ChatUsersComponent.html","title":"component - ChatUsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChatUsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/chat-users/chat-users.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chat-users\n            \n\n            \n                styleUrls\n                ./chat-users.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./chat-users.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allUsers\n                            \n                            \n                                canDisplayBadge\n                            \n                            \n                                    Public\n                                chatbox\n                            \n                            \n                                    Public\n                                chatService\n                            \n                            \n                                    Public\n                                chatUserService\n                            \n                            \n                                    Public\n                                circleIcon\n                            \n                            \n                                    Public\n                                messages\n                            \n                            \n                                    Public\n                                newMessage\n                            \n                            \n                                selectedUser\n                            \n                            \n                                token\n                            \n                            \n                                    Public\n                                unreadMessages\n                            \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getUnreadMessages\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                setSelectedUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(chatService: ChatService, chatUserService: ChatUsersService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/chat-users/chat-users.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chatService\n                                                  \n                                                        \n                                                                        ChatService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chatUserService\n                                                  \n                                                        \n                                                                        ChatUsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentUser\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUnreadMessages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnreadMessages(userEmail)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat-users/chat-users.component.ts:95\n                \n            \n\n\n            \n                \n                    Returns Unread messages for the selected user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userEmail\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Returns unread messages for a user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat-users/chat-users.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setSelectedUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSelectedUser(user)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat-users/chat-users.component.ts:81\n                \n            \n\n\n            \n                \n                    Sets the selected User.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The user Object.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allUsers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canDisplayBadge\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            chatbox\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            chatService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChatService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            chatUserService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChatUsersService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            circleIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : faDotCircle\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            messages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            newMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unreadMessages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\nimport { faDotCircle } from '@fortawesome/free-solid-svg-icons';\n\nimport { ChatUsersService } from '@services/chat-users/chat-users.service';\nimport { ChatService } from '@services/chat/chat.service';\n\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-chat-users',\n  templateUrl: './chat-users.component.html',\n  styleUrls: ['./chat-users.component.scss'],\n})\nexport class ChatUsersComponent implements OnInit {\n  @Input() currentUser: any;\n  allUsers: any;\n  token: any;\n  canDisplayBadge = false;\n  public newMessage: string;\n  public unreadMessages: any = {};\n  public users: Observable;\n  public messages: Observable;\n  public chatbox: any;\n  public circleIcon = faDotCircle;\n\n  selectedUser: any;\n\n  constructor(\n    public chatService: ChatService,\n    public chatUserService: ChatUsersService\n  ) {\n    this.users = this.chatService.users;\n    this.messages = this.chatService.messages;\n  }\n  ngOnInit(): void {\n\n    this.chatUserService.fetchAllUsers();\n\n\n    this.messages.subscribe((messages) => {\n\n      if (this.canDisplayBadge) {\n\n        const newMessage = messages[messages.length - 1]; // The newly received message\n\n        if (\n          (this.selectedUser &&\n            this.selectedUser.id !== newMessage.fromId &&\n            newMessage.toId === this.chatService.userId) ||\n          (!this.selectedUser && newMessage.toId === this.chatService.userId)\n\n        ) {\n\n          this.unreadMessages[newMessage.fromId] = this.unreadMessages[\n            newMessage.fromId] ? this.unreadMessages[newMessage.fromId] + 1 : 1;\n\n        } else if (\n          this.selectedUser &&\n          this.selectedUser.id === newMessage.fromId\n        ) {\n\n          this.unreadMessages[newMessage.fromId] = 0;\n\n        }\n      } else {\n\n        this.canDisplayBadge = true;\n\n      }\n    });\n  }\n\n  /**\n   *\n   * Sets the selected User.\n   *\n   * @param user The user Object.\n   *\n   */\n  public setSelectedUser(user): void {\n\n    this.selectedUser = user;\n\n    this.unreadMessages[user.id] = '';\n\n  }\n\n  /**\n   *\n   * Returns Unread messages for the selected user.\n   *\n   * @param userEmail Returns unread messages for a user.\n   */\n  public getUnreadMessages(userEmail): any {\n\n    return this.unreadMessages[userEmail];\n\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        List Of Users\n        \n            \n                \n                    \n                    &nbsp;&nbsp;{{user.displayName | titlecase}}\n                    &nbsp;-&nbsp;({{user.status}})\n                \n                {{unreadMessages[user.id]}}\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./chat-users.component.scss\n                \n                .online {\n    color: #5fd85f;\n}\n.offline {\n    color: #c5b9b9;\n}\n.chat-users {\n    text-align: center;\n}\n.chat-users-header {\n    font-family: Courier-New;\n    font-size: 1.1em;\n    font-weight: bold;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            List Of Users                                                                              {{user.displayName | titlecase}}                     - ({{user.status}})                                {{unreadMessages[user.id]}}                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatRoomComponent', 'selector': 'app-chat-room'},{'name': 'ChatUsersComponent', 'selector': 'app-chat-users'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChatUsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChatUsersService.html":{"url":"injectables/ChatUsersService.html","title":"injectable - ChatUsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ChatUsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/chat-users/chat-users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                allUsers\n                            \n                            \n                                    Public\n                                authToken\n                            \n                            \n                                    Private\n                                httpWithoutInterceptor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                fetchAllUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, backend: HttpBackend, oauthService: OAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/chat-users/chat-users.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backend\n                                                  \n                                                        \n                                                                        HttpBackend\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        oauthService\n                                                  \n                                                        \n                                                                        OAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            authenticate\n                        \n                        \n                    \n                \n            \n            \n                \nauthenticate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/chat-users/chat-users.service.ts:36\n                \n            \n\n\n            \n                \n                    Authenticates the logged in user for auth0 management API's.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchAllUsers\n                        \n                        \n                    \n                \n            \n            \n                \nfetchAllUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/chat-users/chat-users.service.ts:65\n                \n            \n\n\n            \n                \n                    Fetches the list of all users available in the idp.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            allUsers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/chat-users/chat-users.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/chat-users/chat-users.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            httpWithoutInterceptor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/chat-users/chat-users.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpBackend, HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { OAuthEvent, OAuthService } from 'angular-oauth2-oidc';\n\nimport { MANAGE_AUTH } from '@constants/auth/manage-auth';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ChatUsersService {\n  public allUsers: any;\n  public authToken: string | undefined;\n\n  private httpWithoutInterceptor: HttpClient;\n\n  constructor(\n    private httpClient: HttpClient,\n    private backend: HttpBackend,\n    private oauthService: OAuthService\n  ) {\n    this.httpWithoutInterceptor = new HttpClient(this.backend);\n\n    this.oauthService.events.subscribe((event: OAuthEvent) => {\n      if (event.type === 'logout') {\n        this.authToken = undefined;\n        localStorage.removeItem('id_token');\n      }\n    });\n  }\n\n  /**\n   *\n   * Authenticates the logged in user for auth0 management API's.\n   *\n   */\n  authenticate(): void {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n\n    this.httpClient\n      .post(\n        MANAGE_AUTH.oauthUrl,\n        {\n          client_id: MANAGE_AUTH.clientID,\n          audience: MANAGE_AUTH.audience,\n          grant_type: MANAGE_AUTH.grantType,\n          client_secret: MANAGE_AUTH.clientSecret,\n        },\n        {\n          headers,\n        }\n      )\n      .subscribe((token: any) => {\n        localStorage.setItem('id_token', token.access_token);\n        this.authToken = token.access_token;\n      });\n  }\n\n  /**\n   *\n   * Fetches the list of all users available in the idp.\n   *\n   */\n  fetchAllUsers(): void {\n    const headers: HttpHeaders = new HttpHeaders({\n      Authorization: `Bearer ${this.authToken}`,\n    });\n\n    this.httpWithoutInterceptor\n      .get(this.oauthService.issuer + 'api/v2/users', {\n        headers,\n      })\n      .subscribe(\n        (data) => (this.allUsers = data),\n        (error) => (this.allUsers = error._body || error)\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfileComponent.html":{"url":"components/UserProfileComponent.html","title":"component - UserProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/user-profile/user-profile.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-profile\n            \n\n            \n                styleUrls\n                ./user-profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/user-profile/user-profile.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.scss'],\n})\nexport class UserProfileComponent {\n  @Input() user: any;\n}\n\n    \n\n    \n        \n    \n    \n        {{user.name | uppercase}}\n    \n\n    \n\n    \n                \n                    ./user-profile.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{user.name | uppercase}}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatRoomComponent', 'selector': 'app-chat-room'},{'name': 'ChatUsersComponent', 'selector': 'app-chat-users'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/chat-room/chat-room.component.ts\n            \n            component\n            ChatRoomComponent\n            \n                20 %\n                (2/10)\n            \n        \n        \n            \n                \n                src/app/components/chat-users/chat-users.component.ts\n            \n            component\n            ChatUsersComponent\n            \n                11 %\n                (2/18)\n            \n        \n        \n            \n                \n                src/app/components/user-profile/user-profile.component.ts\n            \n            component\n            UserProfileComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/constants/auth/manage-auth.ts\n            \n            variable\n            MANAGE_AUTH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/auth/auth-config.ts\n            \n            interface\n            AuthConfig\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            variable\n            authCodeFlowConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/chat-users/chat-users.service.ts\n            \n            injectable\n            ChatUsersService\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/services/chat/chat.service.ts\n            \n            injectable\n            ChatService\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.0.6\n        \n            @angular/common : ~10.0.6\n        \n            @angular/compiler : ~10.0.6\n        \n            @angular/core : ~10.0.6\n        \n            @angular/fire : ^6.0.2\n        \n            @angular/forms : ~10.0.6\n        \n            @angular/localize : ~10.0.6\n        \n            @angular/platform-browser : ~10.0.6\n        \n            @angular/platform-browser-dynamic : ~10.0.6\n        \n            @angular/router : ~10.0.6\n        \n            @fortawesome/angular-fontawesome : ^0.7.0\n        \n            @fortawesome/fontawesome-svg-core : ^1.2.28\n        \n            @fortawesome/free-solid-svg-icons : ^5.13.0\n        \n            @ng-bootstrap/ng-bootstrap : ^7.0.0\n        \n            angular-oauth2-oidc : ^10.0.3\n        \n            bootstrap : ^4.5.0\n        \n            firebase : ^7.13.1\n        \n            rxjs : ~6.5.5\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgMychat\nThis project was generated with Angular CLI version 10.0.5.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChatRoomComponent\n\nChatRoomComponent\n\nAppModule -->\n\nChatRoomComponent->AppModule\n\n\n\n\n\nChatUsersComponent\n\nChatUsersComponent\n\nAppModule -->\n\nChatUsersComponent->AppModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nAppModule -->\n\nUserProfileComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            authCodeFlowConfig   (src/.../auth.service.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            MANAGE_AUTH   (src/.../manage-auth.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/auth/auth.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            authCodeFlowConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  // Url of the Identity Provider\n  issuer: 'https://gchat.au.auth0.com/',\n\n  // URL of the SPA to redirect the user to after login\n  redirectUri: window.location.href,\n\n  // The SPA's id. The SPA is registerd with this id at the auth-server\n  // clientId: 'server.code',\n  clientId: 'Sar8qeC0eCqT2DZ3maD8E3N4pdGB8uL1',\n\n  // Just needed if your auth server demands a secret. In general, this\n  // is a sign that the auth server is not configured with SPAs in mind\n  // and it might not enforce further best practices vital for security\n  // such applications.\n  // dummyClientSecret: 'secret',\n\n  responseType: 'code',\n\n  // set the scope for the permissions the client should request\n  // The first four are defined by OIDC.\n  // Important: Request offline_access to get a refresh token\n  // The api scope is a usecase specific one\n  scope: 'openid profile email offline_access',\n\n  showDebugInformation: true,\n  customQueryParams: {\n    // Your API's name\n    audience: 'https://gchat.au.auth0.com/api/v2/',\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  firebase: {\n    apiKey: 'AIzaSyA5WkUYT4oJKfcKeuaZ3xAc9EigwBBR2Fc',\n    authDomain: 'gchat-project-6a119.firebaseapp.com',\n    databaseURL: 'https://gchat-project-6a119.firebaseio.com',\n    projectId: 'gchat-project-6a119',\n    storageBucket: 'gchat-project-6a119.appspot.com',\n    messagingSenderId: '171697051876',\n    appId: '1:171697051876:web:462ea814b69c258dbdb4f1'\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyA5WkUYT4oJKfcKeuaZ3xAc9EigwBBR2Fc',\n    authDomain: 'gchat-project-6a119.firebaseapp.com',\n    databaseURL: 'https://gchat-project-6a119.firebaseio.com',\n    projectId: 'gchat-project-6a119',\n    storageBucket: 'gchat-project-6a119.appspot.com',\n    messagingSenderId: '171697051876',\n    appId: '1:171697051876:web:462ea814b69c258dbdb4f1'\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/constants/auth/manage-auth.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MANAGE_AUTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  clientID: 'vPaSA7LL0a932iSo5DMQn3B4kNJQKr1J',\n  clientSecret:\n    'TUZyy3x0W80OlanWRdRMJWAJo4DmG1YB7RYoaDxynZx3GLDbcgqRzK_83cDdatKP',\n  fetchUsersUrl: 'https://gchat.au.auth0.com/api/v2/users',\n  oauthUrl: 'https://gchat.au.auth0.com/oauth/token',\n  grantType: 'client_credentials',\n  audience: 'https://gchat.au.auth0.com/api/v2/',\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
