var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.612,1,0.831]],["body/components/AppComponent.html",[0,0.837,1,1.247,2,1.483,3,0.413,4,0.344,5,1.184,6,1.184,7,1.184,8,1.184,9,0.344,10,1.667,11,1.184,12,2.477,13,1.844,14,1.483,15,1.724,16,3.583,17,1.724,18,3.038,19,0.413,20,1.112,21,2.159,22,1.922,23,2.021,24,3.583,25,3.583,26,3.583,27,3.583,28,1.284,29,1.667,30,2.042,31,1.23,32,3.038,33,0.881,34,0.057,35,0.978,36,0.837,37,0.881,38,2.086,39,2.086,40,2.622,41,2.622,42,3.583,43,1.483,44,2.086,45,3.583,46,2.086,47,3.583,48,2.086,49,0.919,50,0.487,51,1.39,52,2.024,53,1.184,54,1.39,55,1.667,56,1.39,57,0.881,58,1.39,59,0.413,60,0.281,61,3.038,62,2.086,63,2.427,64,3.038,65,2.387,66,3.038,67,3.038,68,3.038,69,2.427,70,3.038,71,1.483,72,3.038,73,3.038,74,3.038,75,3.038,76,3.936,77,1.135,78,3.038,79,3.936,80,3.038,81,3.038,82,2.427,83,2.086,84,2.086,85,2.086,86,2.086,87,1.667,88,1.39,89,1.39,90,1.39,91,2.086,92,2.086,93,2.086,94,3.038,95,2.086,96,2.086,97,0.881,98,1.724,99,1.483,100,1.184,101,2.233,102,1.184,103,1.184,104,0.661,105,1.724,106,1.184,107,0.661,108,1.184,109,0.661,110,0.764,111,1.184,112,1.184,113,0.022,114,0.032,115,0.022]],["title/modules/AppModule.html",[116,1.487,117,1.487]],["body/modules/AppModule.html",[1,1.603,3,0.491,4,0.41,9,0.41,13,1.05,34,0.057,43,1.213,49,1.205,50,0.58,57,1.05,59,0.491,60,0.334,71,1.213,97,1.05,104,1.465,107,1.465,109,1.465,113,0.026,114,0.036,115,0.026,116,1.41,117,2.925,118,1.213,119,1.41,120,3.151,121,2.837,122,2.748,123,1.656,124,1.985,125,1.985,126,1.985,127,1.985,128,2.258,129,2.748,130,1.985,131,2.485,132,2.748,133,2.748,134,3.44,135,1.985,136,1.41,137,3.44,138,2.485,139,1.656,140,1.985,141,2.485,142,3.44,143,1.985,144,2.485,145,1.985,146,3.44,147,1.985,148,2.485,149,1.213,150,1.41,151,1.213,152,3.44,153,1.985,154,1.985,155,1.656,156,2.485,157,2.485,158,3.44,159,1.985,160,3.44,161,1.656,162,2.485,163,2.485,164,2.485,165,1.656,166,2.485,167,2.485,168,2.485,169,2.485,170,2.485,171,2.485,172,1.656]],["title/classes/AppPage.html",[60,0.353,173,1.747]],["body/classes/AppPage.html",[3,0.7,4,0.584,9,0.584,14,1.728,19,0.7,31,1.183,34,0.056,49,0.827,59,0.7,60,0.476,99,1.728,113,0.037,114,0.046,115,0.037,136,2.008,173,2.887,174,3.539,175,2.827,176,1.831,177,4.88,178,4.88,179,3.539,180,1.831,181,5.095,182,3.539,183,2.827,184,2.116,185,3.539,186,3.539,187,2.827,188,3.539]],["title/modules/AppRoutingModule.html",[116,1.487,128,1.28]],["body/modules/AppRoutingModule.html",[3,0.717,4,0.598,9,0.598,34,0.056,49,1.027,50,0.847,59,0.717,60,0.488,113,0.038,114,0.046,115,0.038,118,1.77,123,2.416,128,2.147,132,3.513,133,3.513,189,3.626,190,3.626,191,4.397,192,3.359,193,2.896,194,2.896,195,3.626,196,1.77,197,2.896,198,3.626,199,3.626,200,3.626,201,3.626]],["title/interfaces/AuthConfig.html",[202,1.487,203,1.28]],["body/interfaces/AuthConfig.html",[3,0.668,4,0.557,9,0.557,19,0.668,20,1.541,34,0.055,36,1.177,59,0.668,113,0.035,114,0.044,115,0.035,202,1.916,203,2.055,204,3.378,205,2.698,206,2.698,207,2.724,208,3.199,209,3.835,210,3.835,211,3.835,212,3.835,213,2.632]],["title/injectables/AuthService.html",[30,1.28,214,0.96]],["body/injectables/AuthService.html",[3,0.364,4,0.304,9,0.304,14,0.9,19,0.364,20,1.015,21,1.925,22,1.626,23,1.829,28,1.171,30,1.353,31,1.216,33,1.171,34,0.057,35,0.909,36,0.778,37,1.171,43,1.353,49,0.865,50,0.43,56,1.228,57,0.779,58,1.228,59,0.548,60,0.248,65,2.647,71,1.353,77,1.372,110,0.675,113,0.019,114,0.029,115,0.019,149,0.9,150,1.046,151,1.353,172,1.228,176,1.171,180,1.763,184,1.353,196,0.9,203,1.353,207,1.046,208,1.847,214,1.015,215,1.046,216,1.228,217,2.781,218,3.331,219,3.705,220,2.959,221,2.214,222,3.972,223,1.843,224,3.334,225,1.829,226,2.772,227,1.843,228,2.772,229,2.772,230,2.959,231,1.843,232,3.705,233,1.94,234,1.843,235,1.847,236,1.847,237,1.843,238,1.843,239,1.843,240,1.843,241,1.228,242,1.228,243,2.214,244,1.472,245,1.472,246,1.472,247,2.214,248,1.472,249,1.472,250,1.472,251,1.472,252,1.847,253,1.472,254,2.219,255,1.472,256,1.472,257,1.472,258,1.472,259,2.214,260,1.472,261,1.472,262,1.472,263,1.472,264,1.472,265,1.472,266,1.228,267,1.472,268,1.472,269,1.472,270,1.472,271,1.472,272,1.472,273,1.472,274,1.472,275,1.228,276,1.847,277,2.661,278,1.472,279,1.472,280,2.214,281,1.472,282,1.472,283,1.228,284,2.214,285,1.472,286,1.228,287,1.472,288,1.472,289,1.472,290,1.472,291,1.472,292,1.847,293,1.472,294,1.472,295,1.228,296,1.472,297,1.228,298,1.843,299,1.843,300,1.843,301,1.843,302,1.843,303,1.843,304,1.843,305,1.843,306,1.472,307,1.843,308,1.843,309,1.843,310,1.843,311,1.843,312,1.843,313,1.843,314,1.472,315,1.843,316,2.772,317,1.472,318,1.843,319,1.843,320,2.772,321,1.843,322,1.472,323,1.843,324,1.843,325,1.843,326,1.843,327,1.843,328,1.843]],["title/components/ChatRoomComponent.html",[0,0.612,104,0.831]],["body/components/ChatRoomComponent.html",[0,0.731,1,0.528,2,1.253,3,0.33,4,0.275,5,0.945,6,0.945,7,0.945,8,0.945,9,0.275,11,0.945,12,2.277,13,1.695,15,1.456,17,1.456,19,0.33,20,0.94,21,2.112,22,1.718,28,0.704,29,1.331,30,1.855,31,1.209,33,1.085,34,0.057,35,0.96,36,0.977,37,1.085,49,0.822,50,0.389,55,1.331,59,0.33,60,0.224,77,1.368,88,2.951,89,1.11,90,1.11,97,0.704,98,1.456,99,1.253,100,0.945,101,1.996,102,0.945,103,0.945,104,1.114,105,2.611,106,0.945,107,0.528,108,0.945,109,0.528,110,0.61,111,0.945,112,0.945,113,0.018,114,0.027,115,0.018,161,3.013,176,1.085,180,1.486,184,0.814,213,1.253,225,1.605,230,2.051,233,1.253,235,1.711,241,1.11,283,1.11,329,3.013,330,1.331,331,3.131,332,3.131,333,2.567,334,3.799,335,2.501,336,2.086,337,2.501,338,2.567,339,2.81,340,1.711,341,2.567,342,1.667,343,2.567,344,1.667,345,2.567,346,2.567,347,3.013,348,1.11,349,2.567,350,1.667,351,2.567,352,2.567,353,2.086,354,1.667,355,1.667,356,2.344,357,0.945,358,1.331,359,1.11,360,1.667,361,1.667,362,3.131,363,1.667,364,1.11,365,2.567,366,2.567,367,2.567,368,2.567,369,2.81,370,2.051,371,2.567,372,2.567,373,2.567,374,2.567,375,3.518,376,3.518,377,3.518,378,3.518,379,3.518,380,3.518,381,1.667,382,1.667,383,1.667,384,2.567,385,1.667,386,1.667,387,1.667,388,1.667,389,1.667,390,2.501,391,2.567,392,1.667,393,1.667,394,2.81,395,1.667,396,1.331,397,1.331,398,0.704,399,1.331,400,1.667,401,1.667,402,1.667,403,1.331,404,1.667,405,1.11,406,1.667,407,1.667,408,1.667,409,1.667]],["title/injectables/ChatService.html",[214,0.96,225,1.107]],["body/injectables/ChatService.html",[3,0.352,4,0.294,9,0.294,14,0.87,19,0.352,20,0.989,21,1.976,28,0.753,31,1.277,33,1.654,34,0.057,35,1.069,36,1.055,37,1.654,49,0.762,50,0.416,59,0.352,60,0.24,77,1.305,110,0.989,113,0.019,114,0.028,115,0.019,147,1.423,176,1.141,180,1.654,184,1.319,196,1.593,213,2.012,214,0.989,215,1.011,217,2.174,221,2.158,225,1.141,233,2.09,235,1.8,252,1.187,276,1.187,292,2.427,297,1.187,314,2.158,317,2.158,336,2.174,339,2.158,347,2.745,348,2.174,353,2.852,357,1.011,358,1.423,359,1.187,364,2.427,398,0.753,405,2.608,410,1.423,411,3.642,412,3.264,413,2.608,414,2.702,415,3.642,416,2.702,417,4.515,418,1.782,419,3.915,420,2.702,421,2.702,422,2.158,423,1.782,424,3.642,425,4.12,426,2.702,427,2.702,428,1.782,429,2.702,430,2.702,431,2.702,432,1.782,433,1.8,434,2.702,435,2.702,436,2.909,437,2.607,438,1.782,439,2.702,440,4.12,441,2.702,442,2.702,443,1.782,444,1.782,445,1.782,446,1.782,447,1.782,448,1.782,449,1.782,450,2.702,451,1.782,452,2.702,453,1.782,454,1.423,455,1.782,456,2.702,457,1.782,458,1.782,459,1.782,460,1.782,461,2.702,462,1.782,463,1.782,464,1.782,465,1.782,466,1.782,467,1.782,468,1.782,469,1.782,470,1.782,471,1.782,472,1.782,473,2.702,474,1.782,475,1.782,476,3.264,477,1.782,478,1.782,479,1.782,480,1.782,481,1.782,482,1.782,483,1.782]],["title/components/ChatUsersComponent.html",[0,0.612,107,0.831]],["body/components/ChatUsersComponent.html",[0,0.665,1,0.455,2,1.116,3,0.284,4,0.237,5,0.815,6,0.815,7,0.815,8,0.815,9,0.237,11,0.815,12,2.139,13,1.593,15,1.296,17,1.296,19,0.284,20,0.837,21,2.153,23,1.496,28,0.965,31,1.303,33,1.202,34,0.057,35,0.966,36,1.052,37,1.202,40,1.896,41,1.896,43,0.701,49,0.827,50,0.335,51,0.957,52,0.957,53,0.815,54,0.957,56,0.957,57,2.048,58,0.957,59,0.284,60,0.193,77,1.426,88,1.896,89,0.957,90,0.957,97,0.607,98,1.296,99,1.116,100,0.815,101,1.84,102,0.815,103,0.815,104,0.455,105,2.51,106,0.815,107,1.027,108,0.815,109,0.455,110,0.526,111,0.815,112,0.815,113,0.015,114,0.024,115,0.015,176,0.965,180,1.67,184,0.701,196,0.701,197,1.825,213,1.116,225,1.786,233,1.584,236,1.522,241,0.957,286,1.896,306,1.825,329,3.207,335,2.273,336,2.634,337,2.591,340,1.522,347,0.957,348,1.522,353,2.359,356,1.522,357,0.815,359,0.957,364,1.522,369,1.147,370,1.825,390,1.147,394,1.147,396,1.147,397,1.147,398,0.607,399,1.147,403,1.825,405,0.957,413,2.817,436,1.147,437,1.147,454,1.147,484,1.147,485,2.285,486,2.845,487,2.845,488,2.285,489,2.273,490,2.845,491,3.54,492,2.845,493,2.845,494,2.845,495,2.285,496,3.243,497,2.285,498,2.845,499,1.436,500,2.285,501,1.436,502,2.285,503,1.436,504,3.243,505,3.243,506,2.285,507,1.436,508,2.285,509,1.436,510,1.436,511,1.825,512,1.436,513,1.436,514,1.436,515,1.436,516,2.845,517,1.436,518,1.436,519,1.436,520,1.436,521,1.436,522,1.436,523,1.436,524,1.436,525,1.436,526,1.436,527,2.285,528,1.436,529,1.436,530,1.436,531,3.243,532,2.285,533,2.845,534,2.285,535,2.845,536,1.436,537,1.825,538,0.957,539,1.436,540,1.436,541,1.825,542,1.436,543,1.436,544,1.436,545,2.285,546,1.436,547,1.436,548,1.436,549,1.436,550,1.436]],["title/injectables/ChatUsersService.html",[23,1.107,214,0.96]],["body/injectables/ChatUsersService.html",[3,0.424,4,0.353,9,0.353,14,1.046,19,0.424,20,1.134,21,1.861,22,1.046,23,1.309,28,1.309,31,1.203,33,0.905,34,0.057,35,0.585,36,0.987,37,0.905,49,0.931,50,0.501,57,1.919,59,0.424,60,0.288,77,0.981,113,0.023,114,0.033,115,0.023,143,1.712,149,1.046,150,1.216,151,1.046,176,1.309,180,1.309,187,1.712,196,1.512,207,1.216,213,1.512,214,1.134,215,1.216,217,2.936,220,1.712,224,3.629,233,1.946,295,2.064,297,1.428,322,1.712,398,1.537,413,2.064,489,2.906,541,2.474,551,3.629,552,1.712,553,3.638,554,3.638,555,3.985,556,3.985,557,2.143,558,4.652,559,3.638,560,3.985,561,3.098,562,2.143,563,3.098,564,3.098,565,3.098,566,3.098,567,2.143,568,3.098,569,2.474,570,3.098,571,2.143,572,3.638,573,2.143,574,3.985,575,3.098,576,1.428,577,2.143,578,3.098,579,2.143,580,2.143,581,2.143,582,3.638,583,2.143,584,3.985,585,2.143,586,2.143,587,2.143,588,2.143,589,2.143,590,2.143,591,2.143,592,2.143,593,2.143,594,2.143,595,2.143,596,2.143,597,3.098,598,2.143,599,2.143,600,2.143,601,2.143,602,2.143,603,3.098,604,3.098,605,3.098,606,2.143]],["title/components/UserProfileComponent.html",[0,0.612,109,0.831]],["body/components/UserProfileComponent.html",[0,1.016,1,0.956,2,1.913,3,0.597,4,0.497,5,1.711,6,1.711,7,1.711,8,1.711,9,0.497,11,1.711,12,2.775,13,2.066,15,2.222,17,2.222,19,0.597,31,0.823,34,0.056,35,1.069,36,0.705,49,0.705,50,0.705,59,0.597,60,0.406,69,3.129,77,1.642,97,1.274,98,2.222,99,1.913,100,1.711,101,2.612,102,1.711,103,1.711,104,0.956,105,2.222,106,1.711,107,0.956,108,1.711,109,1.459,110,1.593,111,1.711,112,1.711,113,0.032,114,0.041,115,0.032,165,2.61,340,2.61,356,2.61,607,3.129,608,2.41,609,4.351,610,3.917,611,3.016,612,3.917]],["title/coverage.html",[613,2.85]],["body/coverage.html",[0,1.078,1,0.961,9,0.5,10,2.422,23,1.281,30,1.48,34,0.056,36,0.708,57,1.66,60,0.408,87,2.422,104,0.961,107,0.961,109,0.961,113,0.032,114,0.041,115,0.032,155,2.619,161,2.02,165,2.02,173,2.02,175,2.422,202,1.72,203,1.48,205,2.422,206,2.422,214,1.597,216,2.619,225,1.281,242,2.02,329,2.619,330,2.422,398,1.281,410,2.422,484,2.422,538,3.433,551,2.422,552,2.422,576,2.02,607,2.422,608,2.422,613,2.422,614,3.032,615,3.032,616,3.032,617,3.032,618,3.032,619,3.032,620,3.032,621,3.032,622,3.032,623,3.032,624,2.422,625,2.422,626,4.898,627,4.898,628,3.032,629,3.032,630,3.032,631,3.032,632,3.032,633,3.032,634,2.422,635,2.422,636,3.14,637,2.422,638,2.422,639,3.032,640,3.032]],["title/dependencies.html",[119,1.787,641,2.194]],["body/dependencies.html",[34,0.057,50,0.778,51,2.219,52,2.219,53,2.367,54,2.219,113,0.035,114,0.044,115,0.035,119,1.889,121,2.78,135,3.333,136,2.367,139,2.219,140,2.66,145,2.66,149,1.626,150,1.889,151,1.626,153,2.66,154,2.66,159,2.66,193,2.66,357,1.889,433,2.219,642,3.33,643,5.195,644,3.33,645,3.33,646,3.33,647,3.33,648,3.33,649,3.33,650,3.33,651,3.33,652,3.33,653,3.33,654,3.33,655,3.33,656,3.33,657,3.33,658,3.33,659,3.33,660,3.33,661,3.33,662,3.33]],["title/index.html",[19,0.434,663,2.194,664,2.194]],["body/index.html",[0,1.04,4,0.523,13,1.339,34,0.042,35,0.865,71,1.548,113,0.033,114,0.042,115,0.033,139,3.356,149,2.175,183,2.532,194,3.558,254,2.695,266,2.112,275,2.112,398,1.339,665,3.17,666,3.231,667,3.17,668,3.17,669,3.17,670,3.17,671,4.847,672,3.17,673,3.17,674,3.17,675,3.17,676,3.17,677,3.17,678,3.17,679,3.17,680,3.17,681,4.454,682,4.454,683,3.17,684,4.847,685,3.17,686,3.17,687,3.17,688,3.17,689,3.17,690,3.17,691,2.532,692,4.044,693,4.044,694,4.692,695,3.17,696,4.044,697,4.044,698,3.17,699,4.692,700,3.17,701,4.454,702,3.17,703,3.17,704,3.17,705,3.17]],["title/modules.html",[118,1.742]],["body/modules.html",[34,0.049,53,2.304,63,3.757,113,0.043,114,0.049,115,0.043,117,2.304,118,1.983,128,1.983,136,2.304,569,3.244,706,4.061,707,4.061]],["title/overview.html",[708,2.85]],["body/overview.html",[1,1.622,2,1.668,34,0.054,60,0.46,71,1.668,97,1.443,104,1.461,107,1.461,109,1.461,113,0.036,114,0.045,115,0.036,116,1.938,117,3.021,118,1.668,119,1.938,120,2.729,121,2.276,122,2.729,123,2.276,124,2.729,125,2.729,126,2.729,127,2.729,128,2.251,129,3.387,130,2.729,202,1.938,215,1.938,537,3.387,538,2.276,708,2.729,709,3.417,710,3.417,711,3.417]],["title/routes.html",[192,2.377]],["body/routes.html",[34,0.05,113,0.044,114,0.05,115,0.044,192,2.792]],["title/miscellaneous/variables.html",[712,1.752,713,2.516]],["body/miscellaneous/variables.html",[19,0.458,22,1.854,31,0.632,34,0.057,35,0.632,36,1.056,40,2.902,41,2.902,43,1.854,65,1.542,77,0.733,82,3.611,110,0.847,113,0.024,114,0.034,115,0.024,151,1.13,155,2.75,172,1.542,203,1.598,207,1.857,208,2.53,209,1.849,210,1.849,211,1.849,212,1.849,216,1.542,236,2.181,242,2.181,243,2.615,244,1.849,245,1.849,246,1.849,247,2.615,248,1.849,249,1.849,250,1.849,251,1.849,252,2.181,253,1.849,254,2.53,255,1.849,256,1.849,257,1.849,258,1.849,259,2.615,260,1.849,261,1.849,262,1.849,263,1.849,264,1.849,265,1.849,266,1.542,267,1.849,268,1.849,269,1.849,270,1.849,271,1.849,272,1.849,273,1.849,274,1.849,275,1.542,276,1.542,277,3.033,278,1.849,279,1.849,280,2.615,281,1.849,282,1.849,283,1.542,284,2.615,285,1.849,286,1.542,287,1.849,288,1.849,289,1.849,290,1.849,291,1.849,292,1.542,293,1.849,294,1.849,295,1.542,296,2.615,422,1.849,433,2.181,511,1.849,576,2.181,624,1.849,625,2.615,634,1.849,635,1.849,636,1.849,637,2.615,638,2.615,666,3.792,691,2.615,712,1.849,713,1.849,714,2.315,715,3.273,716,2.315,717,2.315,718,2.315,719,2.315,720,2.315,721,3.273,722,3.273,723,3.273,724,3.273,725,3.273,726,3.273,727,3.273,728,3.273,729,3.273,730,3.273,731,3.273,732,3.273,733,3.273,734,3.273,735,3.273,736,2.315,737,2.315,738,2.315,739,2.315,740,2.315]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":538,"title":{},"body":{"components/ChatUsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.10.3",{"_index":662,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":393,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["0.7.0",{"_index":649,"title":{},"body":{"dependencies.html":{}}}],["0.7rem",{"_index":402,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["0.9em",{"_index":406,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["0/1",{"_index":627,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":623,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":617,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":628,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":618,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":537,"title":{},"body":{"components/ChatUsersComponent.html":{},"overview.html":{}}}],["1.1em",{"_index":399,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["1.2.28",{"_index":652,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":655,"title":{},"body":{"dependencies.html":{}}}],["10.0.5",{"_index":669,"title":{},"body":{"index.html":{}}}],["10.0.6",{"_index":643,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":621,"title":{},"body":{"coverage.html":{}}}],["171697051876",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1:171697051876:web:462ea814b69c258dbdb4f1",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1px",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["2",{"_index":709,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":660,"title":{},"body":{"dependencies.html":{}}}],["2/10",{"_index":620,"title":{},"body":{"coverage.html":{}}}],["2/18",{"_index":622,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":631,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":619,"title":{},"body":{"coverage.html":{}}}],["28",{"_index":630,"title":{},"body":{"coverage.html":{}}}],["2px",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":711,"title":{},"body":{"overview.html":{}}}],["3/6",{"_index":629,"title":{},"body":{"coverage.html":{}}}],["30px",{"_index":384,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["4",{"_index":710,"title":{},"body":{"overview.html":{}}}],["4.5.0",{"_index":656,"title":{},"body":{"dependencies.html":{}}}],["4/10",{"_index":633,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":632,"title":{},"body":{"coverage.html":{}}}],["4px",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["5.13.0",{"_index":653,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["5fd85f",{"_index":546,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["5px",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["6.0.2",{"_index":646,"title":{},"body":{"dependencies.html":{}}}],["6.5.5",{"_index":658,"title":{},"body":{"dependencies.html":{}}}],["6a119",{"_index":729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6a119.appspot.com",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6a119.firebaseapp.com",{"_index":724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6a119.firebaseio.com",{"_index":727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.0.0",{"_index":654,"title":{},"body":{"dependencies.html":{}}}],["7.13.1",{"_index":657,"title":{},"body":{"dependencies.html":{}}}],["9776",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["accessors",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{}}}],["actual_component",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["address",{"_index":475,"title":{},"body":{"injectables/ChatService.html":{}}}],["adds",{"_index":424,"title":{},"body":{"injectables/ChatService.html":{}}}],["adduserinfo",{"_index":414,"title":{},"body":{"injectables/ChatService.html":{}}}],["adduserinfo(profileobject",{"_index":421,"title":{},"body":{"injectables/ChatService.html":{}}}],["af",{"_index":411,"title":{},"body":{"injectables/ChatService.html":{}}}],["afservice",{"_index":334,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["aizasya5wkuyt4ojkfckeuaz3xac9eigwbbr2fc",{"_index":722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["align",{"_index":548,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["allowedurls",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["allusers",{"_index":489,"title":{},"body":{"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["angular",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/ChatUsersService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":642,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":644,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChatUsersService.html":{}}}],["angular/compiler",{"_index":645,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/fire/database",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChatService.html":{}}}],["angular/forms",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":647,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":193,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["angularfiredatabase",{"_index":419,"title":{},"body":{"injectables/ChatService.html":{}}}],["angularfiredatabasemodule",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebase",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["api",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["api's",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatUsersService.html":{},"miscellaneous/variables.html":{}}}],["api/v2/users",{"_index":601,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["apikey",{"_index":721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["app.component",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appid",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/json",{"_index":585,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["applications",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":117,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":173,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":128,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifacts",{"_index":685,"title":{},"body":{"index.html":{}}}],["audience",{"_index":207,"title":{},"body":{"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"injectables/ChatUsersService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatUsersService.html":{},"miscellaneous/variables.html":{}}}],["auth.ts",{"_index":625,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth.userprofile.given_name",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["auth.userprofile.nickname",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["auth0",{"_index":565,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["authcodeflowconfig",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authconfig",{"_index":203,"title":{"interfaces/AuthConfig.html":{}},"body":{"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authdomain",{"_index":723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticate",{"_index":555,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["authenticated",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticates",{"_index":563,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["authorization",{"_index":598,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["authservice",{"_index":30,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"coverage.html":{}}}],["authtoken",{"_index":553,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["automatically",{"_index":676,"title":{},"body":{"index.html":{}}}],["available",{"_index":569,"title":{},"body":{"injectables/ChatUsersService.html":{},"modules.html":{}}}],["b7b8b8",{"_index":404,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["backend",{"_index":559,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["background",{"_index":408,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["bearer",{"_index":599,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["best",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["bold",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["boolean",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{}}}],["bootstrap",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["border",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["browse",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"modules.html":{}}}],["browser",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":185,"title":{},"body":{"classes/AppPage.html":{}}}],["browsermodule",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":684,"title":{},"body":{"index.html":{}}}],["c5b9b9",{"_index":547,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["candisplaybadge",{"_index":490,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["center",{"_index":549,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["change",{"_index":678,"title":{},"body":{"index.html":{}}}],["chat",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["chatbox",{"_index":335,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["chatroomcomponent",{"_index":104,"title":{"components/ChatRoomComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["chatservice",{"_index":225,"title":{"injectables/ChatService.html":{}},"body":{"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"coverage.html":{}}}],["chatuserscomponent",{"_index":107,"title":{"components/ChatUsersComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["chatuserservice",{"_index":491,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["chatusersservice",{"_index":23,"title":{"injectables/ChatUsersService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"coverage.html":{}}}],["check",{"_index":704,"title":{},"body":{"index.html":{}}}],["checkifuserexists",{"_index":415,"title":{},"body":{"injectables/ChatService.html":{}}}],["checks",{"_index":429,"title":{},"body":{"injectables/ChatService.html":{}}}],["circleicon",{"_index":492,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["class",{"_index":60,"title":{"classes/AppPage.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":174,"title":{},"body":{"classes/AppPage.html":{}}}],["cli",{"_index":194,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["client",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["client_credentials",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["client_id",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatUsersService.html":{}}}],["client_secret",{"_index":593,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["clientid",{"_index":208,"title":{},"body":{"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["clientsecret",{"_index":209,"title":{},"body":{"interfaces/AuthConfig.html":{},"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["color",{"_index":403,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["components/chat",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["components/user",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["config.ts",{"_index":206,"title":{},"body":{"interfaces/AuthConfig.html":{},"coverage.html":{}}}],["configured",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["connecting",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["const",{"_index":196,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["constant",{"_index":199,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["constants/auth/manage",{"_index":577,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["constructor",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["constructor(af",{"_index":418,"title":{},"body":{"injectables/ChatService.html":{}}}],["constructor(auth",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{}}}],["constructor(chatservice",{"_index":499,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["constructor(httpclient",{"_index":557,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["constructor(oauthservice",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(public",{"_index":358,"title":{},"body":{"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{}}}],["contact",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["content",{"_index":187,"title":{},"body":{"classes/AppPage.html":{},"injectables/ChatUsersService.html":{}}}],["context",{"_index":637,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["core",{"_index":651,"title":{},"body":{"dependencies.html":{}}}],["courier",{"_index":397,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["coverage",{"_index":613,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["coversation",{"_index":368,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["current",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{}}}],["currentdate",{"_index":476,"title":{},"body":{"injectables/ChatService.html":{}}}],["currentuser",{"_index":498,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["cursive",{"_index":391,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["custom",{"_index":400,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["customqueryparams",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["cuurent",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["data",{"_index":603,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["database",{"_index":425,"title":{},"body":{"injectables/ChatService.html":{}}}],["databaseurl",{"_index":725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date.now",{"_index":478,"title":{},"body":{"injectables/ChatService.html":{}}}],["date:\"dd",{"_index":376,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["declarations",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/ChatUsersComponent.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":200,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["defined",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["demands",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":119,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":348,"title":{},"body":{"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{}}}],["dev",{"_index":673,"title":{},"body":{"index.html":{}}}],["development",{"_index":670,"title":{},"body":{"index.html":{}}}],["directive",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["directives",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":683,"title":{},"body":{"index.html":{}}}],["directory",{"_index":688,"title":{},"body":{"index.html":{}}}],["displayname",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{}}}],["dist",{"_index":687,"title":{},"body":{"index.html":{}}}],["docs",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["docsicon",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":614,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["dummyclientsecret",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":648,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":700,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":175,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":182,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":179,"title":{},"body":{"classes/AppPage.html":{}}}],["e6fbbe",{"_index":409,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["element",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["element(by.css('app",{"_index":186,"title":{},"body":{"classes/AppPage.html":{}}}],["email",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":699,"title":{},"body":{"index.html":{}}}],["enforce",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["enter",{"_index":372,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["environment",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":605,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["error._body",{"_index":606,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["event.type",{"_index":581,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["execute",{"_index":696,"title":{},"body":{"index.html":{}}}],["exists",{"_index":430,"title":{},"body":{"injectables/ChatService.html":{}}}],["export",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{}}}],["exports",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["fabookreader",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["fadotcircle",{"_index":516,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["faexclamationtriangle",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["false",{"_index":511,"title":{},"body":{"components/ChatUsersComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":390,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["fasigninalt",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["fetchallusers",{"_index":556,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["fetches",{"_index":568,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["fetchusersurl",{"_index":210,"title":{},"body":{"interfaces/AuthConfig.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["files",{"_index":679,"title":{},"body":{"index.html":{}}}],["firebase",{"_index":433,"title":{},"body":{"injectables/ChatService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["first",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["fixed",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["flag",{"_index":690,"title":{},"body":{"index.html":{}}}],["font",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["fontawesome",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["fontawesomemodule",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["formsmodule",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["fortawesome/angular",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":650,"title":{},"body":{"dependencies.html":{}}}],["fortawesome/free",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/ChatUsersComponent.html":{},"dependencies.html":{}}}],["four",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["fromid",{"_index":479,"title":{},"body":{"injectables/ChatService.html":{}}}],["further",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["gchat",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["general",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["generate",{"_index":681,"title":{},"body":{"index.html":{}}}],["generated",{"_index":667,"title":{},"body":{"index.html":{}}}],["get(this.oauthservice.issuer",{"_index":600,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["getting",{"_index":663,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":177,"title":{},"body":{"classes/AppPage.html":{}}}],["getunreadmessages",{"_index":495,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["getunreadmessages(useremail",{"_index":502,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["getuserid",{"_index":446,"title":{},"body":{"injectables/ChatService.html":{}}}],["getuserprofile",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["go",{"_index":703,"title":{},"body":{"index.html":{}}}],["grant_type",{"_index":591,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["granttype",{"_index":211,"title":{},"body":{"interfaces/AuthConfig.html":{},"miscellaneous/variables.html":{}}}],["graph",{"_index":707,"title":{},"body":{"modules.html":{}}}],["header",{"_index":396,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["headers",{"_index":584,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["height",{"_index":385,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["help",{"_index":701,"title":{},"body":{"index.html":{}}}],["hh:mm",{"_index":379,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["home",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["html",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["http://localhost:4200",{"_index":675,"title":{},"body":{"index.html":{}}}],["httpbackend",{"_index":560,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["httpclient",{"_index":558,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["httpclient(this.backend",{"_index":579,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["httpclientmodule",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":574,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["https://gchat",{"_index":726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://gchat.au.auth0.com",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["https://gchat.au.auth0.com/api/v2",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["https://gchat.au.auth0.com/api/v2/users",{"_index":738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://gchat.au.auth0.com/oauth/token",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpwithoutinterceptor",{"_index":554,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["icons",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/ChatUsersComponent.html":{},"dependencies.html":{}}}],["id",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":615,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["idp",{"_index":570,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["img",{"_index":381,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["implements",{"_index":485,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["import",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{}}}],["important",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"miscellaneous/variables.html":{}}}],["imports",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["incoming",{"_index":349,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{}}}],["inherit",{"_index":389,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["initializing",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["injectable",{"_index":214,"title":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/ChatUsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/ChatUsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/ChatUsersService.html":{},"overview.html":{}}}],["input",{"_index":356,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["inputs",{"_index":340,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["inserted",{"_index":427,"title":{},"body":{"injectables/ChatService.html":{}}}],["interface",{"_index":202,"title":{"interfaces/AuthConfig.html":{}},"body":{"interfaces/AuthConfig.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":204,"title":{},"body":{"interfaces/AuthConfig.html":{}}}],["isauthenticated",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["ismenucollapsed",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["issenderorreceiver",{"_index":338,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["issenderorreceiver(message",{"_index":343,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["issuer",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["isuserexists",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["karma",{"_index":698,"title":{},"body":{"index.html":{}}}],["key",{"_index":373,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["legend",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["list",{"_index":541,"title":{},"body":{"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["list('users",{"_index":465,"title":{},"body":{"injectables/ChatService.html":{}}}],["list..please",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["literal",{"_index":422,"title":{},"body":{"injectables/ChatService.html":{},"miscellaneous/variables.html":{}}}],["loaddiscoverydocumentandtrylogin",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('id_token",{"_index":583,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["localstorage.setitem('id_token",{"_index":596,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["log",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["logged",{"_index":564,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["loggedinuser",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["loginto",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["logout",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatUsersService.html":{}}}],["logs",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["manage_auth",{"_index":576,"title":{},"body":{"injectables/ChatUsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["manage_auth.audience",{"_index":590,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["manage_auth.clientid",{"_index":589,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["manage_auth.clientsecret",{"_index":594,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["manage_auth.granttype",{"_index":592,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["manage_auth.oauthurl",{"_index":588,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["management",{"_index":566,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["mask",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["masktriangleicon",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["matching",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":347,"title":{},"body":{"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{}}}],["message.fromid",{"_index":367,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["message.message",{"_index":380,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["message.timestamp",{"_index":375,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["message.toid",{"_index":365,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["messages",{"_index":336,"title":{},"body":{"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{}}}],["messages[0",{"_index":528,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["messagingsenderid",{"_index":732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["methods",{"_index":176,"title":{},"body":{"classes/AppPage.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["mind",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":712,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mmm",{"_index":377,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["module",{"_index":116,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":118,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":702,"title":{},"body":{"index.html":{}}}],["mute",{"_index":401,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["name",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["navigate",{"_index":674,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":178,"title":{},"body":{"classes/AppPage.html":{}}}],["nbsp",{"_index":543,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["nbsp;&nbsp;{{user.displayname",{"_index":542,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["nbsp;({{user.status",{"_index":544,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["needed",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["new",{"_index":398,"title":{},"body":{"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"coverage.html":{},"index.html":{}}}],["newly",{"_index":529,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["newmessage",{"_index":337,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["newmessage.fromid",{"_index":533,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["newmessage.toid",{"_index":534,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["ng",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngbcollapsemodule",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["ngbmodule",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngmychat",{"_index":665,"title":{},"body":{"index.html":{}}}],["ngoninit",{"_index":496,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["number",{"_index":477,"title":{},"body":{"injectables/ChatService.html":{}}}],["oauth2",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/ChatUsersService.html":{},"dependencies.html":{}}}],["oauthevent",{"_index":575,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["oauthmodule",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["oauthmodule.forroot",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["oauthservice",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatUsersService.html":{}}}],["oauthurl",{"_index":212,"title":{},"body":{"interfaces/AuthConfig.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatUsersComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":353,"title":{},"body":{"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{}}}],["observable((observer",{"_index":463,"title":{},"body":{"injectables/ChatService.html":{}}}],["observer.complete",{"_index":469,"title":{},"body":{"injectables/ChatService.html":{}}}],["observer.next(snapshot.exists",{"_index":468,"title":{},"body":{"injectables/ChatService.html":{}}}],["offline",{"_index":437,"title":{},"body":{"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{}}}],["offline_access",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["oidc",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/ChatUsersService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["one",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["oninit",{"_index":486,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["online",{"_index":436,"title":{},"body":{"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{}}}],["online/offline",{"_index":442,"title":{},"body":{"injectables/ChatService.html":{}}}],["opacity",{"_index":392,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["openid",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["out",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":708,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":641,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["param",{"_index":364,"title":{},"body":{"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{}}}],["parameters",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["permissions",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["picture",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{}}}],["placeholder",{"_index":387,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["please",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["position",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["post",{"_index":587,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["practices",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["press",{"_index":371,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["private",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/ChatUsersService.html":{}}}],["prod",{"_index":689,"title":{},"body":{"index.html":{}}}],["production",{"_index":691,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["profile..please",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["profile.component",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["profile.component.html",{"_index":610,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.scss",{"_index":609,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts",{"_index":608,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:9",{"_index":611,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile/user",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profileobject",{"_index":426,"title":{},"body":{"injectables/ChatService.html":{}}}],["profileobject.displayname",{"_index":472,"title":{},"body":{"injectables/ChatService.html":{}}}],["profileobject.email",{"_index":471,"title":{},"body":{"injectables/ChatService.html":{}}}],["profileobject.picture",{"_index":474,"title":{},"body":{"injectables/ChatService.html":{}}}],["project",{"_index":666,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["projectid",{"_index":728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":181,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["protractor",{"_index":183,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["providedin",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/ChatUsersService.html":{}}}],["provider",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["query.once('value",{"_index":467,"title":{},"body":{"injectables/ChatService.html":{}}}],["readme",{"_index":705,"title":{},"body":{"index.html":{}}}],["realtime",{"_index":434,"title":{},"body":{"injectables/ChatService.html":{}}}],["received",{"_index":530,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["receiver",{"_index":407,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["recepient",{"_index":346,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["redirect",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["redirecturi",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["ref",{"_index":452,"title":{},"body":{"injectables/ChatService.html":{}}}],["ref.orderbychild('id').equalto(this.userid",{"_index":466,"title":{},"body":{"injectables/ChatService.html":{}}}],["ref.orderbychild('sorttime')).valuechanges",{"_index":453,"title":{},"body":{"injectables/ChatService.html":{}}}],["refresh",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["registerd",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["reload",{"_index":677,"title":{},"body":{"index.html":{}}}],["request",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["require",{"_index":638,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resourceserver",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["responsetype",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["result",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":184,"title":{},"body":{"classes/AppPage.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{}}}],["returns",{"_index":180,"title":{},"body":{"classes/AppPage.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["returnto",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["room",{"_index":331,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room'},{'name",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["room.component",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["room.component.html",{"_index":333,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room.component.scss",{"_index":332,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room.component.ts",{"_index":330,"title":{},"body":{"components/ChatRoomComponent.html":{},"coverage.html":{}}}],["room.component.ts:14",{"_index":342,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room.component.ts:15",{"_index":355,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room.component.ts:16",{"_index":354,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room.component.ts:17",{"_index":341,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room.component.ts:18",{"_index":352,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room.component.ts:27",{"_index":350,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room.component.ts:41",{"_index":344,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["room/chat",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"components/ChatRoomComponent.html":{},"coverage.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/ChatUsersService.html":{}}}],["root'},{'name",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["router",{"_index":195,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule",{"_index":191,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":201,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":192,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"routes.html":{}}}],["routing.module",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":190,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":671,"title":{},"body":{"index.html":{}}}],["running",{"_index":692,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":357,"title":{},"body":{"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"dependencies.html":{}}}],["sar8qec0ecqt2dz3mad8e3n4pdgb8ul1",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["scaffolding",{"_index":680,"title":{},"body":{"index.html":{}}}],["scope",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["secret",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["security",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":505,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["selecteduser",{"_index":493,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["send",{"_index":374,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["sendaccesstoken",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["sender",{"_index":345,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["sendmessage",{"_index":339,"title":{},"body":{"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{}}}],["sendmessage(text",{"_index":431,"title":{},"body":{"injectables/ChatService.html":{}}}],["sends",{"_index":351,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["serve",{"_index":672,"title":{},"body":{"index.html":{}}}],["server",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["server.code",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["services/auth/auth.service",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{}}}],["services/chat",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatUsersComponent.html":{}}}],["services/chat/chat.service",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["set",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"miscellaneous/variables.html":{}}}],["sets",{"_index":197,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChatUsersComponent.html":{}}}],["setselecteduser",{"_index":497,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["setselecteduser(user",{"_index":508,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["setuserid(userid",{"_index":448,"title":{},"body":{"injectables/ChatService.html":{}}}],["setuserprofile(userprofile",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["showdebuginformation",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["sign",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["signinicon",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["size",{"_index":394,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["small",{"_index":395,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["snapshot",{"_index":461,"title":{},"body":{"injectables/ChatService.html":{}}}],["snapshot.ref.update",{"_index":462,"title":{},"body":{"injectables/ChatService.html":{}}}],["solid",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/ChatUsersComponent.html":{},"dependencies.html":{}}}],["sorttime",{"_index":482,"title":{},"body":{"injectables/ChatService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["spa",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["spa's",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["span')).gettext",{"_index":188,"title":{},"body":{"classes/AppPage.html":{}}}],["spas",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["spec\\.ts",{"_index":720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["src/.../auth.service.ts",{"_index":714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../manage",{"_index":718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":189,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:18",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/chat",{"_index":329,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"coverage.html":{}}}],["src/app/components/user",{"_index":607,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["src/app/constants/auth/manage",{"_index":624,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/models/auth/auth",{"_index":205,"title":{},"body":{"interfaces/AuthConfig.html":{},"coverage.html":{}}}],["src/app/services/auth/auth.service.ts",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/auth/auth.service.ts:116",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:125",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:43",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:86",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:90",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:99",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/chat",{"_index":551,"title":{},"body":{"injectables/ChatUsersService.html":{},"coverage.html":{}}}],["src/app/services/chat/chat.service.ts",{"_index":410,"title":{},"body":{"injectables/ChatService.html":{},"coverage.html":{}}}],["src/app/services/chat/chat.service.ts:10",{"_index":445,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat/chat.service.ts:101",{"_index":432,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat/chat.service.ts:13",{"_index":420,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat/chat.service.ts:15",{"_index":443,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat/chat.service.ts:20",{"_index":447,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat/chat.service.ts:24",{"_index":449,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat/chat.service.ts:36",{"_index":438,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat/chat.service.ts:54",{"_index":428,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat/chat.service.ts:77",{"_index":423,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat/chat.service.ts:9",{"_index":444,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/environments/environment.prod.ts",{"_index":634,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":635,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":636,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["started",{"_index":664,"title":{"index.html":{}},"body":{}}],["statements",{"_index":616,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":440,"title":{},"body":{"injectables/ChatService.html":{}}}],["storagebucket",{"_index":730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stored",{"_index":686,"title":{},"body":{"index.html":{}}}],["string",{"_index":213,"title":{},"body":{"interfaces/AuthConfig.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["style",{"_index":388,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["subscribe",{"_index":602,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["subscribe((token",{"_index":595,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["subscriber",{"_index":450,"title":{},"body":{"injectables/ChatService.html":{}}}],["such",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":706,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/ChatUsersComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["table",{"_index":640,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":639,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["test",{"_index":695,"title":{},"body":{"index.html":{}}}],["tests",{"_index":694,"title":{},"body":{"index.html":{}}}],["text",{"_index":405,"title":{},"body":{"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{}}}],["then((value",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.af",{"_index":464,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.af.database.ref('users').orderbychild('id').equalto(this.userid",{"_index":459,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.af.list('messages",{"_index":451,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.af.list('messages').push(message",{"_index":483,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.af.list('users').push",{"_index":470,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.af.list('users').valuechanges",{"_index":455,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.afservice.messages",{"_index":360,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["this.afservice.sendmessage(this.user.chatmessage",{"_index":361,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["this.afservice.userid",{"_index":366,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["this.allusers",{"_index":604,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["this.authtoken",{"_index":582,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["this.candisplaybadge",{"_index":527,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["this.chatservice.adduserinfo",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.chatservice.checkifuserexists().subscribe((isuserexists",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.chatservice.messages",{"_index":524,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["this.chatservice.updateuserstatus('offline",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.chatservice.updateuserstatus('online",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.chatservice.userid",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatUsersComponent.html":{}}}],["this.chatservice.users",{"_index":523,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["this.chatuserservice.fetchallusers",{"_index":525,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["this.chatusersservice.authenticate",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient",{"_index":586,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["this.httpwithoutinterceptor",{"_index":578,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["this.isauthenticated",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedinuser",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.messages",{"_index":359,"title":{},"body":{"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{}}}],["this.messages.subscribe((messages",{"_index":526,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["this.oauthservice",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.oauthservice.clientid",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.oauthservice.configure(authcodeflowconfig",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.oauthservice.events.subscribe((event",{"_index":580,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["this.oauthservice.getidentityclaims",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.oauthservice.hasvalidaccesstoken",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.oauthservice.initcodeflow",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.oauthservice.redirecturi",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.oauthservice.revoketokenandlogout",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.oauthservice.setstorage(localstorage",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.oauthservice.setupautomaticsilentrefresh",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.selecteduser",{"_index":531,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["this.selecteduser.id",{"_index":532,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["this.unreadmessages",{"_index":536,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["this.unreadmessages[newmessage.fromid",{"_index":535,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["this.unreadmessages[user.id",{"_index":539,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["this.unreadmessages[useremail",{"_index":540,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["this.user.chatmessage",{"_index":363,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["this.user.id",{"_index":362,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["this.userid",{"_index":473,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.useridentifier",{"_index":456,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.userprofile",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userprofile.email",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userprofile.name",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userprofile.picture",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userprofile.sub",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.users",{"_index":454,"title":{},"body":{"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{}}}],["thumb",{"_index":382,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["timestamp",{"_index":481,"title":{},"body":{"injectables/ChatService.html":{}}}],["titlecase",{"_index":370,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["toid",{"_index":480,"title":{},"body":{"injectables/ChatService.html":{}}}],["token",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatUsersComponent.html":{},"miscellaneous/variables.html":{}}}],["token.access_token",{"_index":597,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["top",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["true",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/ChatUsersComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":659,"title":{},"body":{"dependencies.html":{}}}],["tuzyy3x0w80olanwrdrmjwajo4dmg1yb7ryoadxynzx3gldbcgqrzk_83cddatkp",{"_index":737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":572,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["unit",{"_index":693,"title":{},"body":{"index.html":{}}}],["unread",{"_index":504,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["unreadmessages",{"_index":494,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["unreadmessages[user.id",{"_index":545,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["up",{"_index":198,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["updates",{"_index":439,"title":{},"body":{"injectables/ChatService.html":{}}}],["updateuserstatus",{"_index":416,"title":{},"body":{"injectables/ChatService.html":{}}}],["updateuserstatus(status",{"_index":435,"title":{},"body":{"injectables/ChatService.html":{}}}],["uppercase",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/UserProfileComponent.html":{}}}],["url",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":682,"title":{},"body":{"index.html":{}}}],["usecase",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["user.displayname",{"_index":369,"title":{},"body":{"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["user.name",{"_index":612,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user.status",{"_index":550,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["useremail",{"_index":506,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["userid",{"_index":417,"title":{},"body":{"injectables/ChatService.html":{}}}],["userid(userid",{"_index":457,"title":{},"body":{"injectables/ChatService.html":{}}}],["useridentifier",{"_index":412,"title":{},"body":{"injectables/ChatService.html":{}}}],["userprofile",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["userprofile(userprofile",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["userprofilecomponent",{"_index":109,"title":{"components/UserProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userquery",{"_index":458,"title":{},"body":{"injectables/ChatService.html":{}}}],["userquery.once('child_added",{"_index":460,"title":{},"body":{"injectables/ChatService.html":{}}}],["users",{"_index":413,"title":{},"body":{"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["users'},{'name",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["users.component",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["users.component.html",{"_index":488,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.scss",{"_index":487,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts",{"_index":484,"title":{},"body":{"components/ChatUsersComponent.html":{},"coverage.html":{}}}],["users.component.ts:16",{"_index":501,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:17",{"_index":510,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:18",{"_index":520,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:19",{"_index":512,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:20",{"_index":519,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:21",{"_index":521,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:22",{"_index":522,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:23",{"_index":518,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:24",{"_index":513,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:25",{"_index":517,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:27",{"_index":500,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:30",{"_index":514,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:31",{"_index":515,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:36",{"_index":507,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:81",{"_index":509,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.component.ts:95",{"_index":503,"title":{},"body":{"components/ChatUsersComponent.html":{}}}],["users.service",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatUsersComponent.html":{}}}],["users.service.ts",{"_index":552,"title":{},"body":{"injectables/ChatUsersService.html":{},"coverage.html":{}}}],["users.service.ts:11",{"_index":571,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["users.service.ts:12",{"_index":573,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["users.service.ts:14",{"_index":561,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["users.service.ts:36",{"_index":562,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["users.service.ts:65",{"_index":567,"title":{},"body":{"injectables/ChatUsersService.html":{}}}],["users/chat",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{},"coverage.html":{}}}],["value",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/ChatUsersComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["variable",{"_index":626,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":713,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":668,"title":{},"body":{"index.html":{}}}],["via",{"_index":697,"title":{},"body":{"index.html":{}}}],["visibility",{"_index":441,"title":{},"body":{"injectables/ChatService.html":{}}}],["vital",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatRoomComponent.html":{},"injectables/ChatService.html":{},"components/ChatUsersComponent.html":{},"injectables/ChatUsersService.html":{}}}],["vpasa7ll0a932iso5dmqn3b4knjqkr1j",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wait",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["webkit",{"_index":386,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["weight",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/ChatRoomComponent.html":{},"components/ChatUsersComponent.html":{}}}],["welcome",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["width",{"_index":383,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["window.location.href",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["yy",{"_index":378,"title":{},"body":{"components/ChatRoomComponent.html":{}}}],["zone.js",{"_index":661,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                    Public\n                                chatUsersService\n                            \n                            \n                                    Public\n                                docsIcon\n                            \n                            \n                                    Public\n                                isMenuCollapsed\n                            \n                            \n                                    Public\n                                maskTriangleIcon\n                            \n                            \n                                    Public\n                                signInIcon\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, chatUsersService: ChatUsersService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chatUsersService\n                                                  \n                                                        \n                                                                        ChatUsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            chatUsersService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChatUsersService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            docsIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : faBookReader\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isMenuCollapsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            maskTriangleIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : faExclamationTriangle\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            signInIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : faSignInAlt\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport {\n  faBookReader,\n  faExclamationTriangle,\n  faSignInAlt,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { AuthService } from './services/auth/auth.service';\nimport { ChatUsersService } from './services/chat-users/chat-users.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  public isMenuCollapsed = true;\n\n  public signInIcon = faSignInAlt;\n  public maskTriangleIcon = faExclamationTriangle;\n  public docsIcon = faBookReader;\n\n  constructor(\n    public auth: AuthService,\n    public chatUsersService: ChatUsersService\n  ) { }\n}\n\n    \n\n    \n        \n  Home\n\n  \n  \n    &#9776;\n  \n\n  \n  \n    \n      \n        \n        '\n          \n          Browse Docs\n      \n    \n\n    \n      \n        \n        \n          \n          Login\n        \n      \n      \n\n        \n          Welcome, {{ (auth.userProfile.given_name || auth.userProfile.nickname) | uppercase}}!!\n        \n        Log Out\n      \n    \n  \n\n\n  \n    \n      \n      Please loginto start\n      connecting !!\n    \n  \n  \n    \n      Initializing user profile..Please wait\n    \n    \n      Initializing Contact List..Please wait\n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .gchat-mask {\n    position: fixed;\n    top: 50%;\n    font-weight: bold;\n    border: 2px solid;\n}\n.gchat-login {\n    padding: 1px 5px 4px 1px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Home        ☰                                \\'                    Browse Docs                                                        Login                                      Welcome, {{ (auth.userProfile.given_name || auth.userProfile.nickname) | uppercase}}!!                Log Out                              Please loginto start      connecting !!                  Initializing user profile..Please wait              Initializing Contact List..Please wait      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatRoomComponent', 'selector': 'app-chat-room'},{'name': 'ChatUsersComponent', 'selector': 'app-chat-users'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChatRoomComponent\n\nChatRoomComponent\n\nAppModule -->\n\nChatRoomComponent->AppModule\n\n\n\n\n\nChatUsersComponent\n\nChatUsersComponent\n\nAppModule -->\n\nChatUsersComponent->AppModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nAppModule -->\n\nUserProfileComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ChatRoomComponent\n                        \n                        \n                            ChatUsersComponent\n                        \n                        \n                            UserProfileComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { NgbCollapseModule, NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AppComponent } from './app.component';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { OAuthModule } from 'angular-oauth2-oidc';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { environment } from '../environments/environment';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { FormsModule } from '@angular/forms';\n\nimport { ChatRoomComponent } from '@components/chat-room/chat-room.component';\nimport { ChatUsersComponent } from '@components/chat-users/chat-users.component';\nimport { UserProfileComponent } from '@components/user-profile/user-profile.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserProfileComponent,\n    ChatUsersComponent,\n    ChatRoomComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireDatabaseModule,\n    HttpClientModule,\n    OAuthModule.forRoot({\n      resourceServer: {\n        sendAccessToken: true,\n        allowedUrls: ['https://gchat.au.auth0.com']\n      }\n    }),\n    FontAwesomeModule,\n    NgbCollapseModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router'; // CLI imports router\n\nconst routes: Routes = []; // sets up routes constant where you define your routes\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthConfig.html":{"url":"interfaces/AuthConfig.html","title":"interface - AuthConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/auth/auth-config.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        audience\n                                \n                                \n                                        clientID\n                                \n                                \n                                        clientSecret\n                                \n                                \n                                        fetchUsersUrl\n                                \n                                \n                                        grantType\n                                \n                                \n                                        oauthUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        audience\n                                    \n                                \n                                \n                                    \n                                        audience:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientID\n                                    \n                                \n                                \n                                    \n                                        clientID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientSecret\n                                    \n                                \n                                \n                                    \n                                        clientSecret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fetchUsersUrl\n                                    \n                                \n                                \n                                    \n                                        fetchUsersUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        grantType\n                                    \n                                \n                                \n                                    \n                                        grantType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        oauthUrl\n                                    \n                                \n                                \n                                    \n                                        oauthUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AuthConfig {\n  clientID: string;\n  clientSecret: string;\n  fetchUsersUrl: string;\n  oauthUrl: string;\n  grantType: string;\n  audience: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loggedInUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAuthenticated\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userProfile\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(oauthService: OAuthService, chatUsersService: ChatUsersService, chatService: ChatService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth/auth.service.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        oauthService\n                                                  \n                                                        \n                                                                        OAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chatUsersService\n                                                  \n                                                        \n                                                                        ChatUsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chatService\n                                                  \n                                                        \n                                                                        ChatService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isAuthenticated\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isAuthenticated()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:125\n                \n            \n\n\n            \n                \n                    Returns if the cuurent user is authenticated.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:116\n                \n            \n\n\n            \n                \n                    Logs a user in.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:99\n                \n            \n\n\n            \n                \n                    Logs the current user out.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loggedInUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth.service.ts:43\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userProfile\n                    \n                \n\n                \n                    \n                        getuserProfile()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/auth/auth.service.ts:90\n                                \n                            \n\n                \n                    \n                        setuserProfile(userProfile: any)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/auth/auth.service.ts:86\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            userProfile\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AuthConfig, OAuthService } from 'angular-oauth2-oidc';\n\nimport { ChatUsersService } from '@services/chat-users/chat-users.service';\nimport { ChatService } from '@services/chat/chat.service';\n\nexport const authCodeFlowConfig: AuthConfig = {\n  // Url of the Identity Provider\n  issuer: 'https://gchat.au.auth0.com/',\n\n  // URL of the SPA to redirect the user to after login\n  redirectUri: window.location.href,\n\n  // The SPA's id. The SPA is registerd with this id at the auth-server\n  // clientId: 'server.code',\n  clientId: 'Sar8qeC0eCqT2DZ3maD8E3N4pdGB8uL1',\n\n  // Just needed if your auth server demands a secret. In general, this\n  // is a sign that the auth server is not configured with SPAs in mind\n  // and it might not enforce further best practices vital for security\n  // such applications.\n  // dummyClientSecret: 'secret',\n\n  responseType: 'code',\n\n  // set the scope for the permissions the client should request\n  // The first four are defined by OIDC.\n  // Important: Request offline_access to get a refresh token\n  // The api scope is a usecase specific one\n  scope: 'openid profile email offline_access',\n\n  showDebugInformation: true,\n  customQueryParams: {\n    // Your API's name\n    audience: 'https://gchat.au.auth0.com/api/v2/',\n  },\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private loggedInUser: object;\n\n  constructor(\n    private oauthService: OAuthService,\n    private chatUsersService: ChatUsersService,\n    private chatService: ChatService\n  ) {\n    this.oauthService.configure(authCodeFlowConfig);\n\n    this.oauthService.setStorage(localStorage);\n\n    this.oauthService\n      .loadDiscoveryDocumentAndTryLogin()\n      .then((value: boolean) => {\n        if (this.isAuthenticated()) {\n          this.userProfile = this.oauthService.getIdentityClaims();\n\n          this.chatService.userId = this.userProfile.sub;\n\n          this.chatUsersService.authenticate();\n\n          this.chatService.checkIfUserExists().subscribe((isUserExists: boolean) => {\n\n            if (isUserExists) {\n\n              this.chatService.updateUserStatus('online');\n\n            } else {\n\n              this.chatService.addUserInfo({\n                email: this.userProfile.email,\n                displayName: this.userProfile.name,\n                ... this.userProfile.picture ? { picture: this.userProfile.picture } : {}\n              });\n\n            }\n          });\n\n        }\n      });\n    this.oauthService.setupAutomaticSilentRefresh();\n  }\n\n  set userProfile(userProfile: any) {\n    this.loggedInUser = userProfile;\n  }\n\n  get userProfile(): any {\n    return this.loggedInUser;\n  }\n\n  /**\n   *\n   * Logs the current user out.\n   *\n   */\n  public logout(): void {\n    this.oauthService.revokeTokenAndLogout(\n      {\n        client_id: this.oauthService.clientId,\n        returnTo: this.oauthService.redirectUri,\n      },\n      true\n    );\n\n    this.chatService.updateUserStatus('offline');\n  }\n\n  /**\n   *\n   * Logs a user in.\n   *\n   */\n  public login(): void {\n    this.oauthService.initCodeFlow();\n  }\n\n  /**\n   *\n   * Returns if the cuurent user is authenticated.\n   *\n   */\n  public isAuthenticated(): boolean {\n    return this.oauthService.hasValidAccessToken();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatRoomComponent.html":{"url":"components/ChatRoomComponent.html","title":"component - ChatRoomComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChatRoomComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/chat-room/chat-room.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chat-room\n            \n\n            \n                styleUrls\n                ./chat-room.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./chat-room.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                afService\n                            \n                            \n                                    Public\n                                auth\n                            \n                            \n                                    Public\n                                chatbox\n                            \n                            \n                                    Public\n                                messages\n                            \n                            \n                                    Public\n                                newMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isSenderOrReceiver\n                            \n                            \n                                    Public\n                                sendMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, afService: ChatService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/chat-room/chat-room.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        afService\n                                                  \n                                                        \n                                                                        ChatService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/chat-room/chat-room.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isSenderOrReceiver\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isSenderOrReceiver(message)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat-room/chat-room.component.ts:41\n                \n            \n\n\n            \n                \n                    Returns if the current user is either a sender or a recepient of the message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The incoming message\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            sendMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat-room/chat-room.component.ts:27\n                \n            \n\n\n            \n                \n                    Sends a message to a user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            afService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChatService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-room/chat-room.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-room/chat-room.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            chatbox\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-room/chat-room.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            messages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-room/chat-room.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            newMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-room/chat-room.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { AuthService } from '@services/auth/auth.service';\nimport { ChatService } from '@services/chat/chat.service';\n\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-chat-room',\n  templateUrl: './chat-room.component.html',\n  styleUrls: ['./chat-room.component.scss'],\n})\nexport class ChatRoomComponent {\n  @Input() user: any;\n  public newMessage: string;\n  public messages: Observable;\n  public chatbox: any;\n  constructor(public auth: AuthService, public afService: ChatService) {\n    this.messages = this.afService.messages;\n  }\n\n  /**\n   *\n   * Sends a message to a user.\n   *\n   */\n  public sendMessage(): void {\n\n    this.afService.sendMessage(this.user.chatmessage, this.user.id);\n\n    this.user.chatmessage = '';\n  }\n\n  /**\n   *\n   * Returns if the current user is either a sender or a recepient of the message.\n   *\n   * @param message The incoming message\n   *\n   */\n  public isSenderOrReceiver(message): boolean {\n    return (\n      (message.toId === this.afService.userId &&\n        message.fromId === this.user.id) ||\n      (message.fromId === this.afService.userId && message.toId === this.user.id)\n    );\n  }\n}\n\n    \n\n    \n        Your Coversation with {{user.displayName | titlecase}}\n\n    \n    Press enter key to send your message\n\n\n    \n        \n\n            \n                {{message.timestamp | date:\"dd-MMM-yy hh:mm a\"}}\n                \n                \n                    \n                        \n                        {{message.message}}\n                    \n                \n            \n\n            \n                \n                    \n                        \n                            \n                        \n                        {{message.message}}\n                    \n                \n                {{message.timestamp | date:\"dd-MMM-yy hh:mm a\"}}\n                \n\n            \n\n        \n    \n\n\n\n    {{ user.displayName }}\n\n    \n\n    \n                \n                    ./chat-room.component.scss\n                \n                .img-thumb-you {\n    width: 30px;\n    height: 30px;\n}\ninput::-webkit-input-placeholder {\n    font-style: inherit;\n    font-family: cursive;\n    opacity: 0.5;\n    font-size: small;\n}\n.room-header {\n    font-family: Courier-New;\n    font-size: 1.1em;\n    font-weight: bold;\n}\n.custom-mute {\n    font-size: 0.7rem;\n    color: #b7b8b8 !important;\n}\n.chat-text {\n    font-size: 0.9em;\n    font-family: cursive;\n}\n.chat-receiver {\n    background: #e6fbbe;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Your Coversation with {{user.displayName | titlecase}}        Press enter key to send your message                                        {{message.timestamp | date:\"dd-MMM-yy hh:mm a\"}}                                                                                                    {{message.message}}                                                                                                                                                                                                    {{message.message}}                                                    {{message.timestamp | date:\"dd-MMM-yy hh:mm a\"}}                                            {{ user.displayName }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatRoomComponent', 'selector': 'app-chat-room'},{'name': 'ChatUsersComponent', 'selector': 'app-chat-users'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChatRoomComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChatService.html":{"url":"injectables/ChatService.html","title":"injectable - ChatService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ChatService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/chat/chat.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                af\n                            \n                            \n                                    Public\n                                messages\n                            \n                            \n                                    Private\n                                userIdentifier\n                            \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUserInfo\n                            \n                            \n                                    Public\n                                checkIfUserExists\n                            \n                            \n                                sendMessage\n                            \n                            \n                                updateUserStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userId\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(af: AngularFireDatabase)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/chat/chat.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        af\n                                                  \n                                                        \n                                                                    AngularFireDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addUserInfo\n                        \n                        \n                    \n                \n            \n            \n                \naddUserInfo(profileObject: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/chat/chat.service.ts:77\n                \n            \n\n\n            \n                \n                    Adds users into the database.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    profileObject\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The user profile to be inserted.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            checkIfUserExists\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfUserExists()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/chat/chat.service.ts:54\n                \n            \n\n\n            \n                \n                    Checks if user exists in the database\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsendMessage(text, userId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/chat/chat.service.ts:101\n                \n            \n\n\n            \n                \n                    Adds a message to the Firebase Realtime Database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the  text message.\n\n                                    \n                                \n                                \n                                    userId\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateUserStatus\n                        \n                        \n                    \n                \n            \n            \n                \nupdateUserStatus(status: \"online\" | \"offline\")\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/chat/chat.service.ts:36\n                \n            \n\n\n            \n                \n                    Updates current User Status visibility\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                            \"online\" | \"offline\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        online/offline\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            af\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AngularFireDatabase\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/chat/chat.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            messages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/chat/chat.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userIdentifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/chat/chat.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/chat/chat.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n\n                \n                    \n                        getuserId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/chat/chat.service.ts:20\n                                \n                            \n\n                \n                    \n                        setuserId(userId)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/chat/chat.service.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            userId\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { Observable, Subscriber } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ChatService {\n  public messages: Observable;\n  public users: Observable;\n\n\n  private userIdentifier: string;\n\n  constructor(public af: AngularFireDatabase) {\n    this.messages = this.af.list('messages', (ref) => ref.orderByChild('sortTime')).valueChanges();\n    this.users = this.af.list('users').valueChanges();\n  }\n\n  get userId(): string {\n    return this.userIdentifier;\n  }\n\n  set userId(userId) {\n    this.userIdentifier = userId;\n  }\n\n\n  /**\n   *\n   * Updates current User Status visibility\n   *\n   * @param status online/offline\n   *\n   */\n  updateUserStatus(status: 'online' | 'offline'): void {\n\n    const userQuery = this.af.database.ref('users').orderByChild('id').equalTo(this.userId);\n\n    userQuery.once('child_added', (snapshot) => {\n      snapshot.ref.update({\n        status\n      });\n    });\n\n  }\n\n  /**\n   *\n   * Checks if user exists in the database\n   *\n   *\n   */\n  public checkIfUserExists(): Observable {\n\n    return new Observable((observer: Subscriber) => {\n\n      this.af\n        .list('users', (ref) => ref.orderByChild('id').equalTo(this.userId))\n        .query.once('value', (snapshot) => {\n\n          observer.next(snapshot.exists());\n          observer.complete();\n        });\n\n    });\n\n  }\n\n  /**\n   *\n   * Adds users into the database.\n   *\n   * @param profileObject The user profile to be inserted.\n   *\n   */\n  addUserInfo(profileObject: {\n    email: string;\n    displayName: string;\n    picture?: string;\n  }): void {\n\n    this.af.list('users').push({\n      email: profileObject.email,\n      displayName: profileObject.displayName,\n      status: 'online',\n      id: this.userId,\n      picture: profileObject.picture || ''\n    });\n\n  }\n\n  /**\n   *\n   * Adds a message to the Firebase Realtime Database\n   *\n   * @param text the  text message.\n   * @param email the email address.\n   *\n   */\n  sendMessage(text, userId): void {\n\n    const currentDate: number = Date.now();\n\n    const message = {\n      fromId: this.userId,\n      message: text,\n      toId: userId,\n      timestamp: currentDate,\n      sortTime: -currentDate\n    };\n    this.af.list('messages').push(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatUsersComponent.html":{"url":"components/ChatUsersComponent.html","title":"component - ChatUsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChatUsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/chat-users/chat-users.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chat-users\n            \n\n            \n                styleUrls\n                ./chat-users.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./chat-users.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allUsers\n                            \n                            \n                                canDisplayBadge\n                            \n                            \n                                    Public\n                                chatbox\n                            \n                            \n                                    Public\n                                chatService\n                            \n                            \n                                    Public\n                                chatUserService\n                            \n                            \n                                    Public\n                                circleIcon\n                            \n                            \n                                    Public\n                                messages\n                            \n                            \n                                    Public\n                                newMessage\n                            \n                            \n                                selectedUser\n                            \n                            \n                                token\n                            \n                            \n                                    Public\n                                unreadMessages\n                            \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getUnreadMessages\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                setSelectedUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(chatService: ChatService, chatUserService: ChatUsersService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/chat-users/chat-users.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chatService\n                                                  \n                                                        \n                                                                        ChatService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chatUserService\n                                                  \n                                                        \n                                                                        ChatUsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentUser\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUnreadMessages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnreadMessages(userEmail)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat-users/chat-users.component.ts:95\n                \n            \n\n\n            \n                \n                    Returns Unread messages for the selected user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userEmail\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Returns unread messages for a user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat-users/chat-users.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setSelectedUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSelectedUser(user)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat-users/chat-users.component.ts:81\n                \n            \n\n\n            \n                \n                    Sets the selected User.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The user Object.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allUsers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canDisplayBadge\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            chatbox\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            chatService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChatService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            chatUserService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChatUsersService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            circleIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : faDotCircle\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            messages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            newMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unreadMessages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-users/chat-users.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\nimport { faDotCircle } from '@fortawesome/free-solid-svg-icons';\n\nimport { ChatUsersService } from '@services/chat-users/chat-users.service';\nimport { ChatService } from '@services/chat/chat.service';\n\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-chat-users',\n  templateUrl: './chat-users.component.html',\n  styleUrls: ['./chat-users.component.scss'],\n})\nexport class ChatUsersComponent implements OnInit {\n  @Input() currentUser: any;\n  allUsers: any;\n  token: any;\n  canDisplayBadge = false;\n  public newMessage: string;\n  public unreadMessages: any = {};\n  public users: Observable;\n  public messages: Observable;\n  public chatbox: any;\n  public circleIcon = faDotCircle;\n\n  selectedUser: any;\n\n  constructor(\n    public chatService: ChatService,\n    public chatUserService: ChatUsersService\n  ) {\n    this.users = this.chatService.users;\n    this.messages = this.chatService.messages;\n  }\n  ngOnInit(): void {\n\n    this.chatUserService.fetchAllUsers();\n\n\n    this.messages.subscribe((messages) => {\n\n      if (this.canDisplayBadge) {\n\n        const newMessage = messages[0]; // The newly received message\n\n        if (\n          (this.selectedUser &&\n            this.selectedUser.id !== newMessage.fromId &&\n            newMessage.toId === this.chatService.userId) ||\n          (!this.selectedUser && newMessage.toId === this.chatService.userId)\n\n        ) {\n\n          this.unreadMessages[newMessage.fromId] = this.unreadMessages[\n            newMessage.fromId] ? this.unreadMessages[newMessage.fromId] + 1 : 1;\n\n        } else if (\n          this.selectedUser &&\n          this.selectedUser.id === newMessage.fromId\n        ) {\n\n          this.unreadMessages[newMessage.fromId] = 0;\n\n        }\n      } else {\n\n        this.canDisplayBadge = true;\n\n      }\n    });\n  }\n\n  /**\n   *\n   * Sets the selected User.\n   *\n   * @param user The user Object.\n   *\n   */\n  public setSelectedUser(user): void {\n\n    this.selectedUser = user;\n\n    this.unreadMessages[user.id] = '';\n\n  }\n\n  /**\n   *\n   * Returns Unread messages for the selected user.\n   *\n   * @param userEmail Returns unread messages for a user.\n   */\n  public getUnreadMessages(userEmail): any {\n\n    return this.unreadMessages[userEmail];\n\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        List Of Users\n        \n            \n                \n                    \n                    &nbsp;&nbsp;{{user.displayName | titlecase}}\n                    &nbsp;-&nbsp;({{user.status}})\n                \n                {{unreadMessages[user.id]}}\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./chat-users.component.scss\n                \n                .online {\n    color: #5fd85f;\n}\n.offline {\n    color: #c5b9b9;\n}\n.chat-users {\n    text-align: center;\n}\n.chat-users-header {\n    font-family: Courier-New;\n    font-size: 1.1em;\n    font-weight: bold;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            List Of Users                                                                              {{user.displayName | titlecase}}                     - ({{user.status}})                                {{unreadMessages[user.id]}}                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatRoomComponent', 'selector': 'app-chat-room'},{'name': 'ChatUsersComponent', 'selector': 'app-chat-users'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChatUsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChatUsersService.html":{"url":"injectables/ChatUsersService.html","title":"injectable - ChatUsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ChatUsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/chat-users/chat-users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                allUsers\n                            \n                            \n                                    Public\n                                authToken\n                            \n                            \n                                    Private\n                                httpWithoutInterceptor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                fetchAllUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, backend: HttpBackend, oauthService: OAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/chat-users/chat-users.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backend\n                                                  \n                                                        \n                                                                        HttpBackend\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        oauthService\n                                                  \n                                                        \n                                                                        OAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            authenticate\n                        \n                        \n                    \n                \n            \n            \n                \nauthenticate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/chat-users/chat-users.service.ts:36\n                \n            \n\n\n            \n                \n                    Authenticates the logged in user for auth0 management API's.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchAllUsers\n                        \n                        \n                    \n                \n            \n            \n                \nfetchAllUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/chat-users/chat-users.service.ts:65\n                \n            \n\n\n            \n                \n                    Fetches the list of all users available in the idp.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            allUsers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/chat-users/chat-users.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/chat-users/chat-users.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            httpWithoutInterceptor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/chat-users/chat-users.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpBackend, HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { OAuthEvent, OAuthService } from 'angular-oauth2-oidc';\n\nimport { MANAGE_AUTH } from '@constants/auth/manage-auth';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ChatUsersService {\n  public allUsers: any;\n  public authToken: string | undefined;\n\n  private httpWithoutInterceptor: HttpClient;\n\n  constructor(\n    private httpClient: HttpClient,\n    private backend: HttpBackend,\n    private oauthService: OAuthService\n  ) {\n    this.httpWithoutInterceptor = new HttpClient(this.backend);\n\n    this.oauthService.events.subscribe((event: OAuthEvent) => {\n      if (event.type === 'logout') {\n        this.authToken = undefined;\n        localStorage.removeItem('id_token');\n      }\n    });\n  }\n\n  /**\n   *\n   * Authenticates the logged in user for auth0 management API's.\n   *\n   */\n  authenticate(): void {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n\n    this.httpClient\n      .post(\n        MANAGE_AUTH.oauthUrl,\n        {\n          client_id: MANAGE_AUTH.clientID,\n          audience: MANAGE_AUTH.audience,\n          grant_type: MANAGE_AUTH.grantType,\n          client_secret: MANAGE_AUTH.clientSecret,\n        },\n        {\n          headers,\n        }\n      )\n      .subscribe((token: any) => {\n        localStorage.setItem('id_token', token.access_token);\n        this.authToken = token.access_token;\n      });\n  }\n\n  /**\n   *\n   * Fetches the list of all users available in the idp.\n   *\n   */\n  fetchAllUsers(): void {\n    const headers: HttpHeaders = new HttpHeaders({\n      Authorization: `Bearer ${this.authToken}`,\n    });\n\n    this.httpWithoutInterceptor\n      .get(this.oauthService.issuer + 'api/v2/users', {\n        headers,\n      })\n      .subscribe(\n        (data) => (this.allUsers = data),\n        (error) => (this.allUsers = error._body || error)\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfileComponent.html":{"url":"components/UserProfileComponent.html","title":"component - UserProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/user-profile/user-profile.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-profile\n            \n\n            \n                styleUrls\n                ./user-profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/user-profile/user-profile.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.scss'],\n})\nexport class UserProfileComponent {\n  @Input() user: any;\n}\n\n    \n\n    \n        \n    \n    \n        {{user.name | uppercase}}\n    \n\n    \n\n    \n                \n                    ./user-profile.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{user.name | uppercase}}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatRoomComponent', 'selector': 'app-chat-room'},{'name': 'ChatUsersComponent', 'selector': 'app-chat-users'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/chat-room/chat-room.component.ts\n            \n            component\n            ChatRoomComponent\n            \n                20 %\n                (2/10)\n            \n        \n        \n            \n                \n                src/app/components/chat-users/chat-users.component.ts\n            \n            component\n            ChatUsersComponent\n            \n                11 %\n                (2/18)\n            \n        \n        \n            \n                \n                src/app/components/user-profile/user-profile.component.ts\n            \n            component\n            UserProfileComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/constants/auth/manage-auth.ts\n            \n            variable\n            MANAGE_AUTH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/auth/auth-config.ts\n            \n            interface\n            AuthConfig\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            variable\n            authCodeFlowConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/chat-users/chat-users.service.ts\n            \n            injectable\n            ChatUsersService\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/services/chat/chat.service.ts\n            \n            injectable\n            ChatService\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.0.6\n        \n            @angular/common : ~10.0.6\n        \n            @angular/compiler : ~10.0.6\n        \n            @angular/core : ~10.0.6\n        \n            @angular/fire : ^6.0.2\n        \n            @angular/forms : ~10.0.6\n        \n            @angular/localize : ~10.0.6\n        \n            @angular/platform-browser : ~10.0.6\n        \n            @angular/platform-browser-dynamic : ~10.0.6\n        \n            @angular/router : ~10.0.6\n        \n            @fortawesome/angular-fontawesome : ^0.7.0\n        \n            @fortawesome/fontawesome-svg-core : ^1.2.28\n        \n            @fortawesome/free-solid-svg-icons : ^5.13.0\n        \n            @ng-bootstrap/ng-bootstrap : ^7.0.0\n        \n            angular-oauth2-oidc : ^10.0.3\n        \n            bootstrap : ^4.5.0\n        \n            firebase : ^7.13.1\n        \n            rxjs : ~6.5.5\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgMychat\nThis project was generated with Angular CLI version 10.0.5.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChatRoomComponent\n\nChatRoomComponent\n\nAppModule -->\n\nChatRoomComponent->AppModule\n\n\n\n\n\nChatUsersComponent\n\nChatUsersComponent\n\nAppModule -->\n\nChatUsersComponent->AppModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nAppModule -->\n\nUserProfileComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            authCodeFlowConfig   (src/.../auth.service.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            MANAGE_AUTH   (src/.../manage-auth.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/auth/auth.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            authCodeFlowConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  // Url of the Identity Provider\n  issuer: 'https://gchat.au.auth0.com/',\n\n  // URL of the SPA to redirect the user to after login\n  redirectUri: window.location.href,\n\n  // The SPA's id. The SPA is registerd with this id at the auth-server\n  // clientId: 'server.code',\n  clientId: 'Sar8qeC0eCqT2DZ3maD8E3N4pdGB8uL1',\n\n  // Just needed if your auth server demands a secret. In general, this\n  // is a sign that the auth server is not configured with SPAs in mind\n  // and it might not enforce further best practices vital for security\n  // such applications.\n  // dummyClientSecret: 'secret',\n\n  responseType: 'code',\n\n  // set the scope for the permissions the client should request\n  // The first four are defined by OIDC.\n  // Important: Request offline_access to get a refresh token\n  // The api scope is a usecase specific one\n  scope: 'openid profile email offline_access',\n\n  showDebugInformation: true,\n  customQueryParams: {\n    // Your API's name\n    audience: 'https://gchat.au.auth0.com/api/v2/',\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  firebase: {\n    apiKey: 'AIzaSyA5WkUYT4oJKfcKeuaZ3xAc9EigwBBR2Fc',\n    authDomain: 'gchat-project-6a119.firebaseapp.com',\n    databaseURL: 'https://gchat-project-6a119.firebaseio.com',\n    projectId: 'gchat-project-6a119',\n    storageBucket: 'gchat-project-6a119.appspot.com',\n    messagingSenderId: '171697051876',\n    appId: '1:171697051876:web:462ea814b69c258dbdb4f1'\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyA5WkUYT4oJKfcKeuaZ3xAc9EigwBBR2Fc',\n    authDomain: 'gchat-project-6a119.firebaseapp.com',\n    databaseURL: 'https://gchat-project-6a119.firebaseio.com',\n    projectId: 'gchat-project-6a119',\n    storageBucket: 'gchat-project-6a119.appspot.com',\n    messagingSenderId: '171697051876',\n    appId: '1:171697051876:web:462ea814b69c258dbdb4f1'\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/constants/auth/manage-auth.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MANAGE_AUTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  clientID: 'vPaSA7LL0a932iSo5DMQn3B4kNJQKr1J',\n  clientSecret:\n    'TUZyy3x0W80OlanWRdRMJWAJo4DmG1YB7RYoaDxynZx3GLDbcgqRzK_83cDdatKP',\n  fetchUsersUrl: 'https://gchat.au.auth0.com/api/v2/users',\n  oauthUrl: 'https://gchat.au.auth0.com/oauth/token',\n  grantType: 'client_credentials',\n  audience: 'https://gchat.au.auth0.com/api/v2/',\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
